{
  "version": 3,
  "sources": ["../../src/js/index.js"],
  "sourcesContent": ["export * as constants from './constants.js';\nexport { default as labels } from './labels/labels.js';\nexport * as timeUtils from './utils/time.js';\nimport MediaAirplayButton from './media-airplay-button.js';\nimport MediaChromeButton from './media-chrome-button.js';\n// import MediaContainer from './src/js/media-container.js';\nimport MediaController from './media-controller.js';\nimport MediaChromeRange from './media-chrome-range.js';\nimport MediaControlBar from './media-control-bar.js';\nimport MediaCurrentTimeDisplay from './media-current-time-display.js';\nimport MediaDurationDisplay from './media-duration-display.js';\nimport MediaTimeDisplay from './media-time-display.js';\nimport MediaCaptionsButton from './media-captions-button.js';\nimport MediaSeekForwardButton from './media-seek-forward-button.js';\nimport MediaFullscreenButton from './media-fullscreen-button.js';\nimport MediaMuteButton from './media-mute-button.js';\nimport MediaPipButton from './media-pip-button.js';\nimport MediaPlayButton from './media-play-button.js';\nimport MediaPlaybackRateButton from './media-playback-rate-button.js';\nimport MediaPosterImage from './media-poster-image.js';\nimport MediaProgressRange from './media-progress-range.js';\nimport MediaSeekBackwardButton from './media-seek-backward-button.js';\nimport MediaThumbnailPreview from './media-thumbnail-preview.js';\nimport MediaTimeRange from './media-time-range.js';\nimport MediaLoadingIndicator from './media-loading-indicator.js';\nimport MediaTitleElement from './media-title-element.js';\nimport MediaVolumeRange from './media-volume-range.js';\nimport MediaTheme from './themes/media-theme.js';\nimport { Window as window } from './utils/server-safe-globals.js';\n\n// Alias <media-controller> as <media-chrome>\n// Might move MediaChrome to include default controls\nclass MediaChrome extends MediaController {}\nif (!window.customElements.get('media-chrome')) {\n  window.customElements.define('media-chrome', MediaChrome);\n}\n\n// Alias <media-controller> as <media-container>\n// to not break existing installs in transition.\n// Eventually expose media-container as unique element\nclass MediaContainer extends MediaController {\n  constructor() {\n    super();\n    console.warn(\n      'MediaChrome: <media-container> is deprecated. Use <media-controller>.'\n    );\n  }\n}\nif (!window.customElements.get('media-container')) {\n  window.customElements.define('media-container', MediaContainer);\n}\n\nexport {\n  MediaAirplayButton,\n  MediaChromeButton,\n  MediaContainer,\n  MediaController,\n  MediaChromeRange,\n  MediaControlBar,\n  MediaCurrentTimeDisplay,\n  MediaDurationDisplay,\n  MediaTimeDisplay,\n  MediaCaptionsButton,\n  MediaSeekForwardButton,\n  MediaFullscreenButton,\n  MediaMuteButton,\n  MediaPipButton,\n  MediaPlayButton,\n  MediaPlaybackRateButton,\n  MediaPosterImage,\n  MediaProgressRange,\n  MediaSeekBackwardButton,\n  MediaThumbnailPreview,\n  MediaThumbnailPreview as MediaThumbnailPreviewElement,\n  MediaTimeRange,\n  MediaTitleElement,\n  MediaLoadingIndicator,\n  MediaVolumeRange,\n  MediaTheme,\n};\n"],
  "mappings": "qrBAAA,45BAA2B,+BAC3B,EAAkC,mCAClC,EAA2B,gCAC3B,EAA+B,0CAC/B,EAA8B,yCAE9B,EAA4B,sCAC5B,EAA6B,wCAC7B,EAA4B,uCAC5B,EAAoC,gDACpC,EAAiC,4CACjC,EAA6B,wCAC7B,EAAgC,2CAChC,EAAmC,+CACnC,EAAkC,6CAClC,EAA4B,uCAC5B,EAA2B,sCAC3B,EAA4B,uCAC5B,EAAoC,gDACpC,EAA6B,wCAC7B,EAA+B,0CAC/B,EAAoC,gDACpC,EAAkC,6CAClC,EAA2B,sCAC3B,EAAkC,6CAClC,EAA8B,yCAC9B,EAA6B,wCAC7B,EAAuB,wCACvB,EAAiC,0CAIjC,eAA0B,UAAgB,EAC1C,AAAK,SAAO,eAAe,IAAI,iBAC7B,SAAO,eAAe,OAAO,eAAgB,GAM/C,eAA6B,UAAgB,CAC3C,aAAc,CACZ,QACA,QAAQ,KACN,0EAIN,AAAK,SAAO,eAAe,IAAI,oBAC7B,SAAO,eAAe,OAAO,kBAAmB",
  "names": []
}
