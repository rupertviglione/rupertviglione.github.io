var h=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var v=Object.getOwnPropertyNames;var y=Object.prototype.hasOwnProperty;var k=o=>h(o,"__esModule",{value:!0});var x=(o,t)=>{for(var n in t)h(o,n,{get:t[n],enumerable:!0})},L=(o,t,n,e)=>{if(t&&typeof t=="object"||typeof t=="function")for(let s of v(t))!y.call(o,s)&&(n||s!=="default")&&h(o,s,{get:()=>t[s],enumerable:!(e=p(t,s))||e.enumerable});return o};var w=(o=>(t,n)=>o&&o.get(t)||(n=L(k({}),t,1),o&&o.set(t,n),n))(typeof WeakMap!="undefined"?new WeakMap:0);var A={};x(A,{default:()=>E});var c=require("./constants.js"),b=require("./utils/defineCustomElement.js"),a=require("./utils/server-safe-globals.js");const l=a.Document.createElement("template");l.innerHTML=`
<style>
  :host {
    display: inline-block;
    width: auto;
    height: auto;
    vertical-align: middle;
    box-sizing: border-box;
    background: var(--media-control-background, rgba(20,20,30, 0.7));

    padding: 10px;

    /* Vertically center any text */
    font-size: 14px;
    font-weight: bold;
    color: #ffffff;
    text-align: center;

    transition: background 0.15s linear;

    pointer-events: auto;
    cursor: pointer;
    font-family: Arial, sans-serif;
    vertical-align: middle;
  }

  /*
    Only show outline when keyboard focusing.
    https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo
  */
  :host-context([media-keyboard-control]):host(:focus),
  :host-context([media-keyboard-control]):host(:focus-within) {
    box-shadow: inset 0 0 0 2px rgba(27, 127, 204, 0.9);
  }

  :host(:hover) {
    background: var(--media-control-hover-background, rgba(50,50,70, 0.7));
  }

  svg, img, ::slotted(svg), ::slotted(img) {
    width: var(--media-button-icon-width, 24px);
    height: var(--media-button-icon-height);
    transform: var(--media-button-icon-transform);
    transition: var(--media-button-icon-transition);
    fill: var(--media-icon-color, #eee);
    vertical-align: middle;
    max-width: 100%;
    max-height: 100%;
    min-width: 100%;
    min-height: 100%;
  }

  ::slotted(div), ::slotted(span) {
    height: 24px;
  }
</style>
`;const u=["Enter"," "];class m extends a.Window.HTMLElement{static get observedAttributes(){return[c.MediaUIAttributes.MEDIA_CONTROLLER]}constructor(t={}){super();const n=this.attachShadow({mode:"open"}),e=l.content.cloneNode(!0);this.nativeEl=e;let s=t.slotTemplate;s||(s=a.Document.createElement("template"),s.innerHTML=`<slot>${t.defaultContent||""}</slot>`),this.nativeEl.appendChild(s.content.cloneNode(!0)),n.appendChild(e),this.addEventListener("click",i=>{this.handleClick(i)});const r=i=>{const{key:d}=i;if(!u.includes(d)){this.removeEventListener("keyup",r);return}this.handleClick(i)};this.addEventListener("keydown",i=>{const{metaKey:d,altKey:g,key:f}=i;if(d||g||!u.includes(f)){this.removeEventListener("keyup",r);return}this.addEventListener("keyup",r)})}attributeChangedCallback(t,n,e){var s,r;if(t===c.MediaUIAttributes.MEDIA_CONTROLLER){if(n){const i=a.Document.getElementById(n);(s=i==null?void 0:i.unassociateElement)==null||s.call(i,this)}if(e){const i=a.Document.getElementById(e);(r=i==null?void 0:i.associateElement)==null||r.call(i,this)}}}connectedCallback(){var n;this.setAttribute("role","button"),this.setAttribute("tabindex",0);const t=this.getAttribute(c.MediaUIAttributes.MEDIA_CONTROLLER);if(t){const e=a.Document.getElementById(t);(n=e==null?void 0:e.associateElement)==null||n.call(e,this)}}disconnectedCallback(){var n;if(this.getAttribute(c.MediaUIAttributes.MEDIA_CONTROLLER)){const e=a.Document.getElementById(mediaControllerId);(n=e==null?void 0:e.unassociateElement)==null||n.call(e,this)}}handleClick(){}}(0,b.defineCustomElement)("media-chrome-button",m);var E=m;module.exports=w(A);
//# sourceMappingURL=media-chrome-button.js.map
