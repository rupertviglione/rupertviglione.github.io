{
  "version": 3,
  "sources": ["../../src/js/media-text-display.js"],
  "sourcesContent": ["import { MediaUIAttributes } from './constants.js';\nimport { defineCustomElement } from './utils/defineCustomElement.js';\nimport {\n  Window as window,\n  Document as document,\n} from './utils/server-safe-globals.js';\n// Todo: Use data locals: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleTimeString\n\nconst template = document.createElement('template');\n\ntemplate.innerHTML = `\n  <style>\n    :host {\n      display: inline-flex;\n      justify-content: center;\n      align-items: center;\n      box-sizing: border-box;\n      background: var(--media-control-background, rgba(20,20,30, 0.7));\n  \n      padding: 10px;\n\n      font-size: 14px;\n      line-height: 24px;\n      font-family: Arial, sans-serif;\n      text-align: center;\n      color: #ffffff;\n      pointer-events: auto;\n    }\n\n    #container {\n      /* NOTE: We don't currently have more generic sizing vars */\n      height: var(--media-text-content-height, auto);\n    }\n  </style>\n  <span id=\"container\">\n  <slot></slot>\n  </span>\n`;\n\nclass MediaTextDisplay extends window.HTMLElement {\n  static get observedAttributes() {\n    return [MediaUIAttributes.MEDIA_CONTROLLER];\n  }\n\n  constructor() {\n    super();\n\n    this.attachShadow({ mode: 'open' });\n    this.shadowRoot.appendChild(template.content.cloneNode(true));\n    this.container = this.shadowRoot.querySelector('#container');\n  }\n\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    if (attrName === MediaUIAttributes.MEDIA_CONTROLLER) {\n      if (oldValue) {\n        const mediaControllerEl = document.getElementById(oldValue);\n        mediaControllerEl?.unassociateElement?.(this);\n      }\n      if (newValue) {\n        const mediaControllerEl = document.getElementById(newValue);\n        mediaControllerEl?.associateElement?.(this);\n      }\n    }\n  }\n\n  connectedCallback() {\n    const mediaControllerId = this.getAttribute(\n      MediaUIAttributes.MEDIA_CONTROLLER\n    );\n    if (mediaControllerId) {\n      const mediaControllerEl = document.getElementById(mediaControllerId);\n      mediaControllerEl?.associateElement?.(this);\n    }\n  }\n\n  disconnectedCallback() {\n    const mediaControllerSelector = this.getAttribute(\n      MediaUIAttributes.MEDIA_CONTROLLER\n    );\n    if (mediaControllerSelector) {\n      const mediaControllerEl = document.getElementById(mediaControllerId);\n      mediaControllerEl?.unassociateElement?.(this);\n    }\n  }\n}\n\ndefineCustomElement('media-text-display', MediaTextDisplay);\n\nexport default MediaTextDisplay;\n"],
  "mappings": "8gBAAA,oCAAkC,0BAClC,EAAoC,0CACpC,EAGO,0CAGP,KAAM,GAAW,WAAS,cAAc,YAExC,EAAS,UAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA6BrB,eAA+B,UAAO,WAAY,WACrC,qBAAqB,CAC9B,MAAO,CAAC,oBAAkB,kBAG5B,aAAc,CACZ,QAEA,KAAK,aAAa,CAAE,KAAM,SAC1B,KAAK,WAAW,YAAY,EAAS,QAAQ,UAAU,KACvD,KAAK,UAAY,KAAK,WAAW,cAAc,cAGjD,yBAAyB,EAAU,EAAU,EAAU,CApDzD,QAqDI,GAAI,IAAa,oBAAkB,iBAAkB,CACnD,GAAI,EAAU,CACZ,KAAM,GAAoB,WAAS,eAAe,GAClD,oBAAmB,qBAAnB,eAAwC,MAE1C,GAAI,EAAU,CACZ,KAAM,GAAoB,WAAS,eAAe,GAClD,oBAAmB,mBAAnB,eAAsC,QAK5C,mBAAoB,CAjEtB,MAkEI,KAAM,GAAoB,KAAK,aAC7B,oBAAkB,kBAEpB,GAAI,EAAmB,CACrB,KAAM,GAAoB,WAAS,eAAe,GAClD,oBAAmB,mBAAnB,eAAsC,OAI1C,sBAAuB,CA3EzB,MA+EI,GAHgC,KAAK,aACnC,oBAAkB,kBAES,CAC3B,KAAM,GAAoB,WAAS,eAAe,mBAClD,oBAAmB,qBAAnB,eAAwC,QAK9C,0BAAoB,qBAAsB,GAE1C,GAAO,GAAQ",
  "names": []
}
