{
  "version": 3,
  "sources": ["../../src/js/index.js", "../../src/js/constants.js", "../../src/js/labels/labels.js", "../../src/js/utils/time.js", "../../src/js/utils/server-safe-globals.js", "../../src/js/utils/defineCustomElement.js", "../../src/js/media-chrome-button.js", "../../src/js/media-airplay-button.js", "../../src/js/media-container.js", "../../src/js/utils/fullscreenApi.js", "../../src/js/utils/stringUtils.js", "../../src/js/utils/element-utils.js", "../../src/js/utils/captions.js", "../../src/js/media-controller.js", "../../src/js/media-chrome-range.js", "../../src/js/media-control-bar.js", "../../src/js/media-text-display.js", "../../src/js/media-current-time-display.js", "../../src/js/media-duration-display.js", "../../src/js/media-time-display.js", "../../src/js/media-captions-button.js", "../../src/js/media-seek-forward-button.js", "../../src/js/media-fullscreen-button.js", "../../src/js/media-mute-button.js", "../../src/js/media-pip-button.js", "../../src/js/media-play-button.js", "../../src/js/media-playback-rate-button.js", "../../src/js/media-poster-image.js", "../../src/js/media-time-range.js", "../../src/js/media-progress-range.js", "../../src/js/media-seek-backward-button.js", "../../src/js/media-thumbnail-preview.js", "../../src/js/media-loading-indicator.js", "../../src/js/media-title-element.js", "../../src/js/media-volume-range.js", "../../src/js/themes/media-theme.js"],
  "sourcesContent": ["export * as constants from './constants.js';\nexport { default as labels } from './labels/labels.js';\nexport * as timeUtils from './utils/time.js';\nimport MediaAirplayButton from './media-airplay-button.js';\nimport MediaChromeButton from './media-chrome-button.js';\n// import MediaContainer from './src/js/media-container.js';\nimport MediaController from './media-controller.js';\nimport MediaChromeRange from './media-chrome-range.js';\nimport MediaControlBar from './media-control-bar.js';\nimport MediaCurrentTimeDisplay from './media-current-time-display.js';\nimport MediaDurationDisplay from './media-duration-display.js';\nimport MediaTimeDisplay from './media-time-display.js';\nimport MediaCaptionsButton from './media-captions-button.js';\nimport MediaSeekForwardButton from './media-seek-forward-button.js';\nimport MediaFullscreenButton from './media-fullscreen-button.js';\nimport MediaMuteButton from './media-mute-button.js';\nimport MediaPipButton from './media-pip-button.js';\nimport MediaPlayButton from './media-play-button.js';\nimport MediaPlaybackRateButton from './media-playback-rate-button.js';\nimport MediaPosterImage from './media-poster-image.js';\nimport MediaProgressRange from './media-progress-range.js';\nimport MediaSeekBackwardButton from './media-seek-backward-button.js';\nimport MediaThumbnailPreview from './media-thumbnail-preview.js';\nimport MediaTimeRange from './media-time-range.js';\nimport MediaLoadingIndicator from './media-loading-indicator.js';\nimport MediaTitleElement from './media-title-element.js';\nimport MediaVolumeRange from './media-volume-range.js';\nimport MediaTheme from './themes/media-theme.js';\nimport { Window as window } from './utils/server-safe-globals.js';\n\n// Alias <media-controller> as <media-chrome>\n// Might move MediaChrome to include default controls\nclass MediaChrome extends MediaController {}\nif (!window.customElements.get('media-chrome')) {\n  window.customElements.define('media-chrome', MediaChrome);\n}\n\n// Alias <media-controller> as <media-container>\n// to not break existing installs in transition.\n// Eventually expose media-container as unique element\nclass MediaContainer extends MediaController {\n  constructor() {\n    super();\n    console.warn(\n      'MediaChrome: <media-container> is deprecated. Use <media-controller>.'\n    );\n  }\n}\nif (!window.customElements.get('media-container')) {\n  window.customElements.define('media-container', MediaContainer);\n}\n\nexport {\n  MediaAirplayButton,\n  MediaChromeButton,\n  MediaContainer,\n  MediaController,\n  MediaChromeRange,\n  MediaControlBar,\n  MediaCurrentTimeDisplay,\n  MediaDurationDisplay,\n  MediaTimeDisplay,\n  MediaCaptionsButton,\n  MediaSeekForwardButton,\n  MediaFullscreenButton,\n  MediaMuteButton,\n  MediaPipButton,\n  MediaPlayButton,\n  MediaPlaybackRateButton,\n  MediaPosterImage,\n  MediaProgressRange,\n  MediaSeekBackwardButton,\n  MediaThumbnailPreview,\n  MediaThumbnailPreview as MediaThumbnailPreviewElement,\n  MediaTimeRange,\n  MediaTitleElement,\n  MediaLoadingIndicator,\n  MediaVolumeRange,\n  MediaTheme,\n};\n", "export const MediaUIEvents = {\n  MEDIA_PLAY_REQUEST: 'mediaplayrequest',\n  MEDIA_PAUSE_REQUEST: 'mediapauserequest',\n  MEDIA_MUTE_REQUEST: 'mediamuterequest',\n  MEDIA_UNMUTE_REQUEST: 'mediaunmuterequest',\n  MEDIA_VOLUME_REQUEST: 'mediavolumerequest',\n  MEDIA_SEEK_REQUEST: 'mediaseekrequest',\n  MEDIA_AIRPLAY_REQUEST: 'mediaairplayrequest',\n  MEDIA_ENTER_FULLSCREEN_REQUEST: 'mediaenterfullscreenrequest',\n  MEDIA_EXIT_FULLSCREEN_REQUEST: 'mediaexitfullscreenrequest',\n  MEDIA_PREVIEW_REQUEST: 'mediapreviewrequest',\n  MEDIA_ENTER_PIP_REQUEST: 'mediaenterpiprequest',\n  MEDIA_EXIT_PIP_REQUEST: 'mediaexitpiprequest',\n  MEDIA_SHOW_TEXT_TRACKS_REQUEST: 'mediashowtexttracksrequest',\n  MEDIA_HIDE_TEXT_TRACKS_REQUEST: 'mediahidetexttracksrequest',\n  MEDIA_SHOW_CAPTIONS_REQUEST: 'mediashowcaptionsrequest',\n  MEDIA_SHOW_SUBTITLES_REQUEST: 'mediashowsubtitlesrequest',\n  MEDIA_DISABLE_CAPTIONS_REQUEST: 'mediadisablecaptionsrequest',\n  MEDIA_DISABLE_SUBTITLES_REQUEST: 'mediadisablesubtitlesrequest',\n  MEDIA_PLAYBACK_RATE_REQUEST: 'mediaplaybackraterequest',\n  REGISTER_MEDIA_STATE_RECEIVER: 'registermediastatereceiver',\n  UNREGISTER_MEDIA_STATE_RECEIVER: 'unregistermediastatereceiver',\n};\n\nexport const MediaStateChangeEvents = {\n  MEDIA_AIRPLAY_UNAVAILABLE: 'mediaairplayunavailablechange',\n  MEDIA_PIP_UNAVAILABLE: 'mediapipunavailablechange',\n  MEDIA_PAUSED: 'mediapausedchange',\n  MEDIA_HAS_PLAYED: 'mediahasplayedchange',\n  MEDIA_MUTED: 'mediamutedchange',\n  MEDIA_VOLUME_LEVEL: 'mediavolumelevelchange',\n  MEDIA_VOLUME: 'mediavolumechange',\n  MEDIA_VOLUME_UNAVAILABLE: 'mediavolumeunavailablechange',\n  MEDIA_IS_PIP: 'mediaispipchange',\n  MEDIA_CAPTIONS_LIST: 'mediacaptionslistchange',\n  MEDIA_SUBTITLES_LIST: 'mediasubtitleslistchange',\n  MEDIA_CAPTIONS_SHOWING: 'mediacaptionsshowingchange',\n  MEDIA_SUBTITLES_SHOWING: 'mediasubtitlesshowingchange',\n  MEDIA_IS_FULLSCREEN: 'mediaisfullscreenchange',\n  MEDIA_PLAYBACK_RATE: 'mediaplaybackratechange',\n  MEDIA_CURRENT_TIME: 'mediacurrenttimechange',\n  MEDIA_DURATION: 'mediadurationchange',\n  MEDIA_PREVIEW_IMAGE: 'mediapreviewimagechange',\n  MEDIA_PREVIEW_COORDS: 'mediapreviewcoordschange',\n  // MEDIA_CHROME_ATTRIBUTES: 'media-chrome-attributes',\n  // MEDIA_CONTROLLER: 'media-controller',\n  MEDIA_LOADING: 'medialoadingchange',\n  USER_INACTIVE: 'userinactivechange',\n};\n\nexport const MediaUIAttributes = {\n  MEDIA_AIRPLAY_UNAVAILABLE: 'media-airplay-unavailable',\n  MEDIA_PIP_UNAVAILABLE: 'media-pip-unavailable',\n  MEDIA_PAUSED: 'media-paused',\n  MEDIA_HAS_PLAYED: 'media-has-played',\n  MEDIA_MUTED: 'media-muted',\n  MEDIA_VOLUME_LEVEL: 'media-volume-level',\n  MEDIA_VOLUME: 'media-volume',\n  MEDIA_VOLUME_UNAVAILABLE: 'media-volume-unavailable',\n  MEDIA_IS_PIP: 'media-is-pip',\n  MEDIA_CAPTIONS_LIST: 'media-captions-list',\n  MEDIA_SUBTITLES_LIST: 'media-subtitles-list',\n  MEDIA_CAPTIONS_SHOWING: 'media-captions-showing',\n  MEDIA_SUBTITLES_SHOWING: 'media-subtitles-showing',\n  MEDIA_IS_FULLSCREEN: 'media-is-fullscreen',\n  MEDIA_PLAYBACK_RATE: 'media-playback-rate',\n  MEDIA_CURRENT_TIME: 'media-current-time',\n  MEDIA_DURATION: 'media-duration',\n  MEDIA_PREVIEW_IMAGE: 'media-preview-image',\n  MEDIA_PREVIEW_COORDS: 'media-preview-coords',\n  MEDIA_CHROME_ATTRIBUTES: 'media-chrome-attributes',\n  MEDIA_CONTROLLER: 'media-controller',\n  MEDIA_LOADING: 'media-loading',\n  MEDIA_BUFFERED: 'media-buffered',\n};\n\n// Maps from state change event type -> attribute name\nexport const StateChangeEventToAttributeMap = Object.entries(\n  MediaStateChangeEvents\n).reduce(\n  (mapObj, [key, eventType]) => {\n    const attrName = MediaUIAttributes[key];\n    if (attrName) {\n      mapObj[eventType] = attrName;\n    }\n    return mapObj;\n  },\n  { userinactivechange: 'user-inactive' }\n);\n\n// Maps from attribute name -> state change event type\nexport const AttributeToStateChangeEventMap = Object.entries(\n  MediaUIAttributes\n).reduce(\n  (mapObj, [key, attrName]) => {\n    const evtType = MediaStateChangeEvents[key];\n    if (evtType) {\n      mapObj[attrName] = evtType;\n    }\n    return mapObj;\n  },\n  { 'user-inactive': 'userinactivechange' }\n);\n\nexport const TextTrackKinds = {\n  SUBTITLES: 'subtitles',\n  CAPTIONS: 'captions',\n  DESCRIPTIONS: 'descriptions',\n  CHAPTERS: 'chapters',\n  METADATA: 'metadata',\n};\n\nexport const TextTrackModes = {\n  DISABLED: 'disabled',\n  HIDDEN: 'hidden',\n  SHOWING: 'showing',\n};\n\nexport const ReadyStates = {\n  HAVE_NOTHING: 0,\n  HAVE_METADATA: 1,\n  HAVE_CURRENT_DATA: 2,\n  HAVE_FUTURE_DATA: 3,\n  HAVE_ENOUGH_DATA: 4,\n};\n\nexport const AvailabilityStates = {\n  UNAVAILABLE: 'unavailable',\n  UNSUPPORTED: 'unsupported',\n};\n", "/** @type {{ [k: string]: (x?: Partial<{ seekOffset: number; playbackRate: number; }>) => string; }} */\nexport const nouns = {\n  AUDIO_PLAYER: () => 'audio player',\n  VIDEO_PLAYER: () => 'video player',\n  VOLUME: () => 'volume',\n  SEEK: () => 'seek',\n  CLOSED_CAPTIONS: () => 'closed captions',\n  PLAYBACK_RATE: ({ playbackRate = 1 } = {}) =>\n    `current playback rate ${playbackRate}`,\n  PLAYBACK_TIME: () => `playback time`,\n  MEDIA_LOADING: () => `media loading`,\n};\n\n/** @type {{ [k: string]: (x?: Partial<{ seekOffset: number; playbackRate: number; }>) => string; }} */\nexport const verbs = {\n  PLAY: () => 'play',\n  PAUSE: () => 'pause',\n  MUTE: () => 'mute',\n  UNMUTE: () => 'unmute',\n  AIRPLAY: () => 'air play',\n  ENTER_FULLSCREEN: () => 'enter fullscreen mode',\n  EXIT_FULLSCREEN: () => 'exit fullscreen mode',\n  ENTER_PIP: () => 'enter picture in picture mode',\n  EXIT_PIP: () => 'exit picture in picture mode',\n  SEEK_FORWARD_N_SECS: ({ seekOffset = 30 } = {}) =>\n    `seek forward ${seekOffset} seconds`,\n  SEEK_BACK_N_SECS: ({ seekOffset = 30 } = {}) =>\n    `seek back ${seekOffset} seconds`,\n};\n\nexport default {\n  ...nouns,\n  ...verbs,\n};\n", "// Consider moving this to a more generic utils module\nconst isValidNumber = (x) =>\n  typeof x === 'number' && !Number.isNaN(x) && Number.isFinite(x);\n\nconst UnitLabels = [\n  {\n    singular: 'hour',\n    plural: 'hours',\n  },\n  {\n    singular: 'minute',\n    plural: 'minutes',\n  },\n  {\n    singular: 'second',\n    plural: 'seconds',\n  },\n];\nconst toTimeUnitPhrase = (timeUnitValue, unitIndex) => {\n  const unitLabel =\n    timeUnitValue === 1\n      ? UnitLabels[unitIndex].singular\n      : UnitLabels[unitIndex].plural;\n\n  return `${timeUnitValue} ${unitLabel}`;\n};\n\n/**\n * This function converts numeric seconds into a phrase\n * @param {number} seconds - a (positive or negative) time, represented as seconds\n * @returns {string} The time, represented as a phrase of hours, minutes, and seconds\n */\nexport const formatAsTimePhrase = (seconds) => {\n  if (!isValidNumber(seconds)) return '';\n  const positiveSeconds = Math.abs(seconds);\n  const negative = positiveSeconds !== seconds;\n  const secondsDateTime = new Date(0, 0, 0, 0, 0, positiveSeconds, 0);\n  const timeParts = [\n    secondsDateTime.getHours(),\n    secondsDateTime.getMinutes(),\n    secondsDateTime.getSeconds(),\n  ];\n  // NOTE: Everything above should be useable for the `formatTime` function.\n\n  const timeString = timeParts\n    // Convert non-0 values to a string of the value plus its unit\n    .map(\n      (timeUnitValue, index) =>\n        timeUnitValue && toTimeUnitPhrase(timeUnitValue, index)\n    )\n    // Ignore/exclude any 0 values\n    .filter((x) => x)\n    // join into a single comma-separated string phrase\n    .join(', ');\n\n  // If the time was negative, assume it represents some remaining amount of time/\"count down\".\n  const negativeSuffix = negative ? ' remaining' : '';\n\n  return `${timeString}${negativeSuffix}`;\n};\n\nexport function formatTime(seconds, guide) {\n  // Handle negative values at the end\n  let negative = false;\n\n  if (seconds < 0) {\n    negative = true;\n    seconds = 0 - seconds;\n  }\n\n  seconds = seconds < 0 ? 0 : seconds;\n  let s = Math.floor(seconds % 60);\n  let m = Math.floor((seconds / 60) % 60);\n  let h = Math.floor(seconds / 3600);\n  const gm = Math.floor((guide / 60) % 60);\n  const gh = Math.floor(guide / 3600);\n\n  // handle invalid times\n  if (isNaN(seconds) || seconds === Infinity) {\n    // '-' is false for all relational operators (e.g. <, >=) so this setting\n    // will add the minimum number of fields specified by the guide\n    h = m = s = '-';\n  }\n\n  // Check if we need to show hours\n  h = h > 0 || gh > 0 ? h + ':' : '';\n\n  // If hours are showing, we may need to add a leading zero.\n  // Always show at least one digit of minutes.\n  m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':';\n\n  // Check if leading zero is need for seconds\n  s = s < 10 ? '0' + s : s;\n\n  return (negative ? '-' : '') + h + m + s;\n}\n", "const windowShim = {\n  HTMLElement: function HTMLElement() {\n    this.addEventListener = () => {};\n    this.removeEventListener = () => {};\n    this.dispatchEvent = () => {};\n  },\n  customElements: {\n    get: function () {},\n    define: function () {},\n    whenDefined: function () {},\n  },\n  CustomEvent: function CustomEvent() {},\n};\n\nconst documentShim = {\n  createElement: function () {\n    return new windowShim.HTMLElement();\n  },\n};\n\nexport const isServer =\n  typeof window === 'undefined' || typeof window.customElements === 'undefined';\nexport const Window = isServer ? windowShim : window;\nexport const Document = isServer ? documentShim : window.document;\n", "import { Window as window } from './server-safe-globals.js';\n\nexport function defineCustomElement(name, element) {\n  if (!window.customElements.get(name)) {\n    window.customElements.define(name, element);\n    window[element.name] = element;\n  }\n}\n", "import { MediaUIAttributes } from './constants.js';\nimport { defineCustomElement } from './utils/defineCustomElement.js';\nimport {\n  Window as window,\n  Document as document,\n} from './utils/server-safe-globals.js';\n\nconst template = document.createElement('template');\n\ntemplate.innerHTML = `\n<style>\n  :host {\n    display: inline-block;\n    width: auto;\n    height: auto;\n    vertical-align: middle;\n    box-sizing: border-box;\n    background: var(--media-control-background, rgba(20,20,30, 0.7));\n\n    padding: 10px;\n\n    /* Vertically center any text */\n    font-size: 14px;\n    font-weight: bold;\n    color: #ffffff;\n    text-align: center;\n\n    transition: background 0.15s linear;\n\n    pointer-events: auto;\n    cursor: pointer;\n    font-family: Arial, sans-serif;\n    vertical-align: middle;\n  }\n\n  /*\n    Only show outline when keyboard focusing.\n    https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo\n  */\n  :host-context([media-keyboard-control]):host(:focus),\n  :host-context([media-keyboard-control]):host(:focus-within) {\n    box-shadow: inset 0 0 0 2px rgba(27, 127, 204, 0.9);\n  }\n\n  :host(:hover) {\n    background: var(--media-control-hover-background, rgba(50,50,70, 0.7));\n  }\n\n  svg, img, ::slotted(svg), ::slotted(img) {\n    width: var(--media-button-icon-width, 24px);\n    height: var(--media-button-icon-height);\n    transform: var(--media-button-icon-transform);\n    transition: var(--media-button-icon-transition);\n    fill: var(--media-icon-color, #eee);\n    vertical-align: middle;\n    max-width: 100%;\n    max-height: 100%;\n    min-width: 100%;\n    min-height: 100%;\n  }\n\n  ::slotted(div), ::slotted(span) {\n    height: 24px;\n  }\n</style>\n`;\n\nconst ButtonPressedKeys = ['Enter', ' '];\n\nclass MediaChromeButton extends window.HTMLElement {\n  static get observedAttributes() {\n    return [MediaUIAttributes.MEDIA_CONTROLLER];\n  }\n\n  constructor(options = {}) {\n    super();\n\n    const shadow = this.attachShadow({ mode: 'open' });\n\n    const buttonHTML = template.content.cloneNode(true);\n    this.nativeEl = buttonHTML;\n\n    // Slots\n    let slotTemplate = options.slotTemplate;\n\n    if (!slotTemplate) {\n      slotTemplate = document.createElement('template');\n      slotTemplate.innerHTML = `<slot>${options.defaultContent || ''}</slot>`;\n    }\n\n    this.nativeEl.appendChild(slotTemplate.content.cloneNode(true));\n\n    shadow.appendChild(buttonHTML);\n\n    this.addEventListener('click', (e) => {\n      this.handleClick(e);\n    });\n\n    // NOTE: There are definitely some \"false positive\" cases with multi-key pressing,\n    // but this should be good enough for most use cases.\n    const keyUpHandler = (e) => {\n      const { key } = e;\n      if (!ButtonPressedKeys.includes(key)) {\n        this.removeEventListener('keyup', keyUpHandler);\n        return;\n      }\n\n      this.handleClick(e);\n    };\n\n    this.addEventListener('keydown', (e) => {\n      const { metaKey, altKey, key } = e;\n      if (metaKey || altKey || !ButtonPressedKeys.includes(key)) {\n        this.removeEventListener('keyup', keyUpHandler);\n        return;\n      }\n      this.addEventListener('keyup', keyUpHandler);\n    });\n  }\n\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    if (attrName === MediaUIAttributes.MEDIA_CONTROLLER) {\n      if (oldValue) {\n        const mediaControllerEl = document.getElementById(oldValue);\n        mediaControllerEl?.unassociateElement?.(this);\n      }\n      if (newValue) {\n        const mediaControllerEl = document.getElementById(newValue);\n        mediaControllerEl?.associateElement?.(this);\n      }\n    }\n  }\n\n  connectedCallback() {\n    this.setAttribute('role', 'button');\n    this.setAttribute('tabindex', 0);\n\n    const mediaControllerId = this.getAttribute(\n      MediaUIAttributes.MEDIA_CONTROLLER\n    );\n    if (mediaControllerId) {\n      const mediaControllerEl = document.getElementById(mediaControllerId);\n      mediaControllerEl?.associateElement?.(this);\n    }\n  }\n\n  disconnectedCallback() {\n    const mediaControllerSelector = this.getAttribute(\n      MediaUIAttributes.MEDIA_CONTROLLER\n    );\n    if (mediaControllerSelector) {\n      const mediaControllerEl = document.getElementById(mediaControllerId);\n      mediaControllerEl?.unassociateElement?.(this);\n    }\n  }\n\n  handleClick() {}\n}\n\ndefineCustomElement('media-chrome-button', MediaChromeButton);\n\nexport default MediaChromeButton;\n", "import MediaChromeButton from './media-chrome-button.js';\nimport { defineCustomElement } from './utils/defineCustomElement.js';\nimport {\n  Window as window,\n  Document as document,\n} from './utils/server-safe-globals.js';\nimport { MediaUIEvents, MediaUIAttributes } from './constants.js';\nimport { verbs } from './labels/labels.js';\nconst airplayIcon = `<svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 18\"><defs><style>.cls-1{fill:var(--media-icon-color, #eee);}</style></defs><title>Mux Player SVG Icons_v2</title><path class=\"cls-1\" d=\"M10.19,11.22a.25.25,0,0,0-.38,0L4.35,17.59a.25.25,0,0,0,.19.41H15.46a.25.25,0,0,0,.19-.41Z\"/><path class=\"cls-1\" d=\"M19,0H1A1,1,0,0,0,0,1V14a1,1,0,0,0,1,1H3.94L5,13.75H1.25V1.25h17.5v12.5H15L16.06,15H19a1,1,0,0,0,1-1V1A1,1,0,0,0,19,0Z\"/></svg>`;\n\nconst slotTemplate = document.createElement('template');\nslotTemplate.innerHTML = `\n  <style>\n  </style>\n\n  <slot name=\"airplay\">${airplayIcon}</slot>\n`;\n\nclass MediaAirplayButton extends MediaChromeButton {\n  static get observedAttributes() {\n    return [\n      ...super.observedAttributes,\n      MediaUIAttributes.MEDIA_AIRPLAY_UNAVAILABLE,\n    ];\n  }\n\n  constructor(options = {}) {\n    super({ slotTemplate, ...options });\n  }\n\n  connectedCallback() {\n    this.setAttribute('aria-label', verbs.AIRPLAY());\n    super.connectedCallback();\n  }\n\n  handleClick(_e) {\n    const evt = new window.CustomEvent(MediaUIEvents.MEDIA_AIRPLAY_REQUEST, {\n      composed: true,\n      bubbles: true,\n    });\n    this.dispatchEvent(evt);\n  }\n}\n\ndefineCustomElement('media-airplay-button', MediaAirplayButton);\n\nexport default MediaAirplayButton;\n", "/*\n  The <media-chrome> can contain the control elements\n  and the media element. Features:\n  * Auto-set the `media` attribute on child media chrome elements\n    * Uses the element with slot=\"media\"\n  * Take custom controls to fullscreen\n  * Position controls at the bottom\n  * Auto-hide controls on inactivity while playing\n*/\nimport { defineCustomElement } from './utils/defineCustomElement.js';\nimport {\n  Window as window,\n  Document as document,\n} from './utils/server-safe-globals.js';\nimport { MediaUIEvents, MediaUIAttributes, MediaStateChangeEvents } from './constants.js';\nimport { nouns } from './labels/labels.js';\n\nconst template = document.createElement('template');\n\ntemplate.innerHTML = `\n  <style>\n    :host {\n      box-sizing: border-box;\n      position: relative;\n      display: inline-block;\n      line-height: 0;\n      background-color: #000;\n    }\n\n    :host(:not([audio])) *[part~=layer]:not([part~=media-layer]) {\n      position: absolute;\n      top: 0;\n      left: 0;\n      bottom: 0;\n      right: 0;\n      display: flex;\n      flex-flow: column nowrap;\n      align-items: start;\n      pointer-events: none;\n      background: none;\n    }\n\n    :host(:not([audio])) :is([part~=gestures-layer],[part~=media-layer])  {\n      pointer-events: auto;\n    }\n    \n    :host(:not([audio])) *[part~=layer][part~=centered-layer] {\n      align-items: center;\n      justify-content: center;\n    }\n\n    .spacer {\n      pointer-events: none;\n      background: none;\n    }\n\n    /* Position the media and poster elements to fill the container */\n    ::slotted([slot=media]),\n    ::slotted([slot=poster]) {\n      width: 100%;\n      height: 100%;\n    }\n\n    /* Video specific styles */\n    :host(:not([audio])) .spacer {\n      flex-grow: 1;\n    }\n\n    /* Safari needs this to actually make the element fill the window */\n    :host(:-webkit-full-screen) {\n      /* Needs to use !important otherwise easy to break */\n      width: 100% !important;\n      height: 100% !important;\n    }\n\n    /* Need to revisit this. May be too presumptuous for user-inactive behavior */\n    ::slotted(:not([slot=media]):not([slot=poster])) {\n      pointer-events: auto;\n    }\n\n    /* Only add these if auto hide is not disabled */\n    ::slotted(:not([slot=media]):not([no-auto-hide])) {\n      opacity: 1;\n      transition: opacity 0.25s;\n    }\n\n    /* Hide controls when inactive, not paused, not audio and auto hide not disabled */\n    :host([user-inactive]:not([${MediaUIAttributes.MEDIA_PAUSED}]):not([audio])) ::slotted(:not([slot=media]):not([no-auto-hide])) {\n      opacity: 0;\n      transition: opacity 1s;\n    }\n\n    ::slotted(media-control-bar)  {\n      align-self: stretch;\n    }\n  </style>\n\n  <span part=\"layer media-layer\">\n    <slot name=\"media\"></slot>\n  </span>\n  <span part=\"layer poster-layer\">\n    <slot name=\"poster\"></slot>\n  </span>\n  <span part=\"layer gesture-layer\">\n    <slot name=\"gestures-chrome\"></slot>\n  </span>\n  <span part=\"layer vertical-layer\">\n    <slot name=\"top-chrome\"></slot>\n    <span class=\"spacer\"><slot name=\"middle-chrome\"></slot></span>\n    <!-- default, effectively \"bottom-chrome\" -->\n    <slot></slot>\n  </span>\n  <span part=\"layer centered-layer\">\n    <slot name=\"centered-chrome\"></slot>\n  </span>\n`;\n\nconst MEDIA_UI_ATTRIBUTE_NAMES = Object.values(MediaUIAttributes);\n\nclass MediaContainer extends window.HTMLElement {\n  constructor() {\n    super();\n\n    // Set up the Shadow DOM\n    const shadow = this.attachShadow({ mode: 'open' });\n    this.shadowRoot.appendChild(template.content.cloneNode(true));\n\n    // Watch for child adds/removes and update the media element if necessary\n    const mutationCallback = (mutationsList, observer) => {\n      const media = this.media;\n\n      for (let mutation of mutationsList) {\n        if (mutation.type === 'childList') {\n          // Media element being removed\n          mutation.removedNodes.forEach((node) => {\n            // Is this a direct child media element of media-controller?\n            // TODO: This accuracy doesn't matter after moving away from media attrs.\n            // Could refactor so we can always just call 'dispose' on any removed media el.\n            if (node.slot == 'media' && mutation.target == this) {\n              // Check if this was the current media by if it was the first\n              // el with slot=media in the child list. There could be multiple.\n              let previousSibling =\n                mutation.previousSibling &&\n                mutation.previousSibling.previousElementSibling;\n\n              // Must have been first if no prev sibling or new media\n              if (!previousSibling || !media) {\n                this.mediaUnsetCallback(node);\n              } else {\n                // Check if any prev siblings had a slot=media\n                // Should remain true otherwise\n                let wasFirst = previousSibling.slot !== 'media';\n                while (\n                  (previousSibling = previousSibling.previousSibling) !== null\n                ) {\n                  if (previousSibling.slot == 'media') wasFirst = false;\n                }\n                if (wasFirst) this.mediaUnsetCallback(node);\n              }\n            }\n          });\n\n          // Controls or media element being added\n          // No need to inject anything if media=null\n          if (media) {\n            mutation.addedNodes.forEach((node) => {\n              if (node == media) {\n                // Update all controls with new media if this is the new media\n                this.handleMediaUpdated(media).then((media) =>\n                  this.mediaSetCallback(media)\n                );\n              }\n            });\n          }\n        }\n      }\n    };\n\n    const observer = new MutationObserver(mutationCallback);\n    observer.observe(this, { childList: true, subtree: true });\n\n    // Handles the case when the slotted media element is a slot element itself.\n    // e.g. chaining media slots for media themes.\n    let currentMedia = this.media;\n    let chainedSlot = this.querySelector(':scope > slot[slot=media]');\n    if (chainedSlot) {\n      chainedSlot.addEventListener('slotchange', () => {\n        const slotEls = chainedSlot.assignedElements({ flatten: true });\n        if (!slotEls.length) {\n          this.mediaUnsetCallback(currentMedia);\n          return;\n        }\n        if (this.media) {\n          currentMedia = this.media\n          this.handleMediaUpdated(this.media).then((media) =>\n            this.mediaSetCallback(media)\n          );\n        }\n      });\n    }\n  }\n\n  static get observedAttributes() {\n    return ['autohide'].concat(MEDIA_UI_ATTRIBUTE_NAMES);\n  }\n\n  // Could share this code with media-chrome-html-element instead\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    if (attrName.toLowerCase() == 'autohide') {\n      this.autohide = newValue;\n    }\n  }\n\n  // First direct child with slot=media, or null\n  get media() {\n    let media = this.querySelector(':scope > [slot=media]');\n\n    // Chaining media slots for media templates\n    if (media?.nodeName == 'SLOT')\n      media = media.assignedElements({ flatten: true })[0];\n\n    return media;\n  }\n\n  mediaSetCallback(media) {\n    // Toggle play/pause with clicks on the media element itself\n    this._mediaClickPlayToggle = (_e) => {\n      const eventName = media.paused\n        ? MediaUIEvents.MEDIA_PLAY_REQUEST\n        : MediaUIEvents.MEDIA_PAUSE_REQUEST;\n      this.dispatchEvent(\n        new window.CustomEvent(eventName, { composed: true, bubbles: true })\n      );\n    };\n  }\n\n  handleMediaUpdated(media) {\n    const resolveMediaPromise = (media) => {\n      // media.addEventListener('click', this._mediaClickPlayToggle, false);\n\n      return Promise.resolve(media);\n    };\n\n    const rejectMediaPromise = (media) => {\n      console.error(\n        '<media-chrome>: Media element set with slot=\"media\" does not appear to be compatible.',\n        media\n      );\n      return Promise.reject(media);\n    };\n\n    // Anything \"falsy\" couldn't act as a media element. Reject.\n    if (!media) {\n      return rejectMediaPromise(media);\n    }\n\n    const mediaName = media.nodeName.toLowerCase();\n    // Custom element. Wait until it's defined before resolving\n    if (mediaName.includes('-')) {\n      return window.customElements.whenDefined(mediaName).then(() => {\n        return resolveMediaPromise(media);\n      });\n    }\n\n    // Exists and isn't a custom element. Resolve.\n    return resolveMediaPromise(media);\n  }\n\n  mediaUnsetCallback(media) {\n    // media.removeEventListener('click', this._mediaClickPlayToggle);\n  }\n\n  connectedCallback() {\n    const isAudioChrome = this.getAttribute('audio') != null;\n    const label = isAudioChrome ? nouns.AUDIO_PLAYER() : nouns.VIDEO_PLAYER();\n    this.setAttribute('role', 'region');\n    this.setAttribute('aria-label', label);\n\n    if (this.media) {\n      this.handleMediaUpdated(this.media).then((media) =>\n        this.mediaSetCallback(media)\n      );\n    }\n\n    // Assume user is inactive until they're not (aka user-inactive by default is true)\n    // This allows things like autoplay and programmatic playing to also initiate hiding controls (CJP)\n    this.setAttribute('user-inactive', 'user-inactive');\n\n    const scheduleInactive = () => {\n      this.removeAttribute('user-inactive');\n      const evt = new window.CustomEvent(\n        MediaStateChangeEvents.USER_INACTIVE, \n        { composed: true, bubbles: true, detail: false }\n      );\n      this.dispatchEvent(evt);\n      window.clearTimeout(this._inactiveTimeout);\n\n      // Setting autohide to -1 turns off autohide\n      if (this.autohide < 0) return;\n\n      this._inactiveTimeout = window.setTimeout(() => {\n        this.setAttribute('user-inactive', 'user-inactive');\n        const evt = new window.CustomEvent(\n          MediaStateChangeEvents.USER_INACTIVE, \n          { composed: true, bubbles: true, detail: true }\n        );\n        this.dispatchEvent(evt);\n      }, this.autohide * 1000);\n    };\n\n    // Unhide for keyboard controlling\n    this.addEventListener('keyup', (e) => {\n      scheduleInactive();\n    });\n\n    // Allow for focus styles only when using the keyboard to navigate\n    this.addEventListener('keyup', (e) => {\n      this.setAttribute('media-keyboard-control', 'media-keyboard-control');\n    });\n    this.addEventListener('mouseup', (e) => {\n      this.removeAttribute('media-keyboard-control');\n    });\n\n    this.addEventListener('mousemove', (e) => {\n      if (e.target === this) return;\n\n      // Stay visible if hovered over control bar\n      this.removeAttribute('user-inactive');\n      const evt = new window.CustomEvent(\n        MediaStateChangeEvents.USER_INACTIVE, \n        { composed: true, bubbles: true, detail: false }\n      );\n      this.dispatchEvent(evt);\n      window.clearTimeout(this._inactiveTimeout);\n\n      // If hovering over the media element we're free to make inactive\n      if (e.target === this.media) {\n        scheduleInactive();\n      }\n    });\n\n    // Immediately hide if mouse leaves the container\n    this.addEventListener('mouseleave', (e) => {\n      if (this.autohide < 0) return;\n      this.setAttribute('user-inactive', 'user-inactive');\n      const evt = new window.CustomEvent(\n        MediaStateChangeEvents.USER_INACTIVE, \n        { composed: true, bubbles: true, detail: true }\n      );\n      this.dispatchEvent(evt);\n    });\n  }\n\n  set autohide(seconds) {\n    seconds = Number(seconds);\n    this._autohide = isNaN(seconds) ? 0 : seconds;\n  }\n\n  get autohide() {\n    return this._autohide === undefined ? 2 : this._autohide;\n  }\n}\n\n// Aliasing media-controller to media-container in main index until we know\n// we're not breaking people with the change.\ndefineCustomElement('media-container-temp', MediaContainer);\n\nexport default MediaContainer;\n", "import { Document as document } from './server-safe-globals.js';\n\nexport const fullscreenApi = {\n  enter: 'requestFullscreen',\n  exit: 'exitFullscreen',\n  event: 'fullscreenchange',\n  element: 'fullscreenElement',\n  error: 'fullscreenerror',\n};\n\nif (document.fullscreenElement === undefined) {\n  fullscreenApi.enter = 'webkitRequestFullScreen';\n  fullscreenApi.exit =\n    document.webkitExitFullscreen != null\n      ? 'webkitExitFullscreen'\n      : 'webkitCancelFullScreen';\n  fullscreenApi.event = 'webkitfullscreenchange';\n  fullscreenApi.element = 'webkitFullscreenElement';\n  fullscreenApi.error = 'webkitfullscreenerror';\n}\n", "export function dashedToCamel(word) {\n  return word\n    .split('-')\n    .map(function (x, i) {\n      return (\n        (i ? x[0].toUpperCase() : x[0].toLowerCase()) + x.slice(1).toLowerCase()\n      );\n    })\n    .join('');\n}\n\nexport function constToCamel(word, upperFirst = false) {\n  return word\n    .split('_')\n    .map(function (x, i) {\n      return (\n        (i || upperFirst ? x[0].toUpperCase() : x[0].toLowerCase()) +\n        x.slice(1).toLowerCase()\n      );\n    })\n    .join('');\n}\n", "export const updateIconText = (svg, value, selector = '.value') => {\n  const node = svg.querySelector(selector);\n\n  if (!node) return;\n\n  node.textContent = value;\n};\n\nexport const getAllSlotted = (el, name) => {\n  const slotSelector = `slot[name=\"${name}\"]`;\n  const slot = el.shadowRoot.querySelector(slotSelector);\n  if (!slot) return [];\n  return slot.children;\n};\n\nexport const getSlotted = (el, name) => getAllSlotted(el, name)[0];\n\nexport const containsWithShadow = (refNode, otherNode) => {\n  if (!refNode || !otherNode) return false;\n  if (refNode.contains(otherNode)) return true;\n  return [refNode, ...refNode.querySelectorAll(\"*\")].some((el) => {\n    return containsWithShadow(el.shadowRoot, otherNode);\n  });\n}\n", "// NOTE: This is generic for any CSS/html list representation. Consider renaming and moving to generic module.\n/**\n * Splits a string (representing TextTracks) into an array of strings based on whitespace.\n * @param {string} [textTracksStr = ''] - a string of 1+ \"items\" (representing TextTracks), separated by whitespace\n * @returns {Array<string>} An array of non-whitesace strings (each representing a single TextTrack).\n */\nexport const splitTextTracksStr = (textTracksStr = '') =>\n  textTracksStr.split(/\\s+/);\n\n/**\n * Parses a string that represents a TextTrack into a \"TextTrack-like object\"\n * The expected TextTrack string format is:\n * \"language[:label]\"\n * where the language *should* conform to BCP 47, just like TextTracks, and the (optional)\n * label *must* be URL encoded.\n * Note that this format may be expanded to include additional properties, such as\n * `id`.\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TextTrack\n * @param {string} [textTrackStr = ''] - A well-defined TextTrack string representations\n * @returns {Object} An object that resembles a (partial) TextTrack (`{ language: string; label?: string; }`)\n */\nexport const parseTextTrackStr = (textTrackStr = '') => {\n  const [language, encodedLabel] = textTrackStr.split(':');\n  const label = encodedLabel ? decodeURIComponent(encodedLabel) : undefined;\n  return {\n    language,\n    label,\n  };\n};\n\n/**\n * Parses a whitespacae-separated string that represents list of TextTracks into an array of TextTrack-like objects,\n * where each object will have the properties identified by the corresponding string, plus any properties generically\n * provided by the (optional) `textTrackLikeObj` argument.\n * @param {string} [textTracksStr = ''] - a string of 1+ \"items\" (representing TextTracks), separated by whitespace\n * @param {Object} [textTrackLikeObj] An object that resembles a (partial) TextTrack, used to add generic properties to all parsed TextTracks.\n * @returns {Array<Object>} An array of \"TextTrack-like objects\", each with properties parsed from the string and any properties from `textTrackLikeObj`.\n * @example\n * ```js\n * const tracksStr = 'en-US:English en:English%20%28with%20descriptions%29';\n * const tracks = parseTextTracksStr(tracksStr);\n * // [{ language: 'en-US', label: 'English' }, { language: 'en', label: 'English (with descriptions)' }];\n *\n * const tracksData = { kind: 'captions' };\n * const tracksWithData = parseTextTracksStr(tracksStr, tracksData);\n * // [{ language: 'en-US', label: 'English', kind: 'captions' }, { language: 'en', label: 'English (with descriptions)', kind: 'captions' }];\n * ```\n */\nexport const parseTextTracksStr = (\n  textTracksStr = '',\n  textTrackLikeObj = {}\n) => {\n  return splitTextTracksStr(textTracksStr).map((textTrackStr) => {\n    const textTrackObj = parseTextTrackStr(textTrackStr);\n    return {\n      ...textTrackLikeObj,\n      ...textTrackObj,\n    };\n  });\n};\n\n/**\n * Takes a variety of possible representations of TextTrack(s) and \"normalizes\" them to an Array of 1+ TextTrack-like objects.\n * @param {Array<string|Object>|string|Object} trackOrTracks - A value representing 1+ TextTracks\n * @returns {Array<Object>} An array of TextTrack-like objects.\n */\nexport const parseTracks = (trackOrTracks) => {\n  // Already an array, but might be an array of strings, objects, or both.\n  if (Array.isArray(trackOrTracks)) {\n    return trackOrTracks.map((trackObjOrStr) => {\n      // If the individual track is a string representation, translate it into a TextTrack-like object.\n      if (typeof trackObjOrStr === 'string') {\n        return parseTextTrackStr(trackObjOrStr);\n      }\n      // Otherwise, assume it already is one.\n      return trackObjOrStr;\n    });\n  }\n  // A string of 1+ TextTrack representations. Parse into an array of objects.\n  if (typeof trackOrTracks === 'string') {\n    return parseTextTracksStr(trackOrTracks);\n  }\n  // Assume a single TextTrack-like object. Wrap into an array of 1.\n  return [trackOrTracks];\n};\n\n/**\n * Translates a TextTrack-like object into a well-defined string representation for the TextTrack\n * @param {Object} obj - A TextTrack or TextTrack-like object\n * @param {string} [obj.label] - An optional label for the track.\n * @param {string} obj.language - The BCP-47 compliant string representing the language code of the track\n * @returns {string} A string representing a TextTrack with the format: \"language[:label]\"\n */\nexport const formatTextTrackObj = ({ label, language } = {}) => {\n  if (!label) return language;\n  return `${language}:${encodeURIComponent(label)}`;\n};\n\n/**\n * Translates a set of TextTracks into a well-defined, whitespace-separated string representation of the set\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TextTrackList\n * @param {Array<TextTrack|object>|TextTracks} textTracks - A TextTracks object or an Array of TextTracks or TextTrack-like objects.\n * @returns A string representing a set of TextTracks, separated by whitespace.\n */\nexport const stringifyTextTrackList = (textTracks = []) => {\n  return Array.prototype.map.call(textTracks, formatTextTrackObj).join(' ');\n};\n\n// NOTE: This is a generic higher order fn. Consider and moving to generic module.\n/**\n * A generic higher-order function that yields a predicate to assert whether or not some value has the provided key/value pair\n * @param {string|number} key - The property key/name against which we'd like to match\n * @param {*} value - The value of the key we expect for a match\n * @returns {Function} - A predicate function that yields true if the provided object has the expected key/value pair, otherwise false.\n * @example\n * ```js\n * const hasShowingMode = isMatchingPropOf('mode', 'showing');\n * hasShowingMode({ mode: 'showing' }); // true\n * hasShowingMode({ mode: 'disabled' }); // false\n * hasShowingMode({ no_mode: 'any' }); // false\n * ```\n */\nexport const isMatchingPropOf = (key, value) => (obj) => obj[key] === value;\n\n// NOTE: This is a generic higher order fn. Consider renaming and moving to generic module.\n/**\n * A higher-order function that yields a single predicate to assert whether or not some value has *every* key/value pair defined in `filterObj`.\n * @param {object} filterObj - An object of key/value pairs that we expect on a given object\n * @returns {Function} - A predicate function that yields true iff the provided object has *every* key/value pair in `filterObj`, otherwise false\n * @example\n * ```js\n * const track1 = { label: 'English', kind: 'captions', language: 'en-US' };\n * const track1a = { label: 'English', kind: 'captions', language: 'en-US', id: '1', mode: 'showing' };\n * const track2 = { label: 'English (with descriptions)', kind: 'captions', language: 'en-US', id: '2', mode: 'disabled' };\n * const track3 = { label: 'Espa\u00F1ol', kind: 'subtitles', language: 'es-MX', id: '3', mode: 'disabled' };\n * const track4 = { label: 'English', language: 'en-US', mode: 'showing' };\n *\n * const isMatchingTrack = textTrackObjAsPred({ label: 'English', kind: 'captions', language: 'en-US' });\n * isMatchingTrack(track1); // true\n * isMatchingTrack(track1a); // true\n * isMatchingTrack(track2); // false\n * isMatchingTrack(track3); // false\n * isMatchingTrack(track4); // false\n * isMatchingTrack({ no_corresponding_props: 'any' }); // false\n * ```\n */\nexport const textTrackObjAsPred = (filterObj) => {\n  const preds = Object.entries(filterObj).map(([key, value]) => {\n    // Translate each key/value pair into a single predicate\n    return isMatchingPropOf(key, value);\n  });\n\n  // Return a predicate function that takes the array of single key/value pair predicates and asserts that *every* pred in the array is true of the (TextTrack-like) object\n  return (textTrack) => preds.every((pred) => pred(textTrack));\n};\n\n/**\n * Updates any `tracks` that match one of the `tracksToUpdate` to be in the provided TextTrack `mode`.\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TextTrack/mode\n * @see {@link parseTracks}\n * @param {string} mode - The desired mode for any matching TextTracks. Should be one of \"disabled\"|\"hidden\"|\"showing\"\n * @param {TextTracks|Array<TextTrack|Object>} tracks - A TextTracks object or array of TextTracks that should contain any matching TextTracks to update\n * @param {Array<string|Object>|string|Object} tracksToUpdate - A value representing a set of TextTracks\n */\nexport const updateTracksModeTo = (mode, tracks = [], tracksToUpdate = []) => {\n  // 1. Normalize the tracksToUpdate into an array of \"partial TextTrack-like\" objects\n  // 2. Convert each object into its own predicate function to identify that an actual TextTrack is a match\n  const preds = parseTracks(tracksToUpdate).map(textTrackObjAsPred);\n\n  // A track is identified as a track to update as long as it matches *one* of the preds (i.e. as long as it \"looks like\" one of \"partial TextTrack-like\" objects)\n  const isTrackToUpdate = (textTrack) => {\n    return preds.some((pred) => pred(textTrack));\n  };\n\n  Array.from(tracks)\n    // 1. Filter to only include tracks to update\n    .filter(isTrackToUpdate)\n    // 2. Update each of those tracks to the appropriate mode.\n    .forEach((textTrack) => {\n      textTrack.mode = mode;\n    });\n};\n\n/**\n * Takes an `HTMLMediaElement media` and yields an array of `TextTracks` that match the provided `filterPredOrObj` criteria (or all `TextTracks` by default).\n * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/textTracks\n * @see {@link textTrackObjAsPred}\n * @param {HTMLMediaElement} media - An HTMLMediaElement with an expected textTracks value\n * (NOTE: This uses \"structural polymorphism\", so as long as `media` has an Array-like `textTracks` value of TextTrack-like objects, this function will work).\n * @param {Function|Object} [filterPredOrObj] Either a predicate function or an object that can be translated into a predicate function of matching key/value pairs.\n * @returns {Array<TextTrack>} An array of TextTracks that match the given `filterPredOrObj` (or all TextTracks on `media` by default)\n * @example\n * ```html\n * <!DOCTYPE html>\n * <html lang=\"en\">\n * <head></head>\n * <body>\n * <video src=\"https://stream.mux.com/DS00Spx1CV902MCtPj5WknGlR102V5HFkDe/high.mp4\">\n *   <track label=\"Spanish\" kind=\"subtitles\" srclang=\"es\" src=\"./vtt/en-sub.vtt\">\n *   <track label=\"English\" kind=\"subtitles\" srclang=\"en\" src=\"./vtt/es-sub.vtt\">\n *   <track label=\"English\" kind=\"captions\" srclang=\"en\" src=\"./vtt/en-cc.vtt\">\n  </video>\n * </body>\n * </html>\n * ```\n * ```js\n * // js ...\n * const media = document.querySelector('video');\n * getTextTracksList(media, { kind: 'subtitles' });\n * // [{ label: 'Spanish', kind: 'subtitles', language: 'es' }, { label: 'English', kind: 'subtitles', language: 'en' }]\n * getTextTracksList(media, { kind: 'captions' });\n * // [{ label: 'English', kind: 'captions', language: 'en' }]\n * getTextTracksList(media);\n * // [{ label: 'Spanish', kind: 'subtitles', language: 'es' }, { label: 'English', kind: 'subtitles', language: 'en' }, { label: 'English', kind: 'captions', language: 'en' }]\n * ```\n */\nexport const getTextTracksList = (media, filterPredOrObj = () => true) => {\n  if (!media?.textTracks) return [];\n\n  const filterPred =\n    typeof filterPredOrObj === 'function'\n      ? filterPredOrObj\n      : textTrackObjAsPred(filterPredOrObj);\n\n  return Array.from(media.textTracks).filter(filterPred);\n};\n", "/*\n  The <media-chrome> can contain the control elements\n  and the media element. Features:\n  * Auto-set the `media` attribute on child media chrome elements\n    * Uses the element with slot=\"media\"\n  * Take custom controls to fullscreen\n  * Position controls at the bottom\n  * Auto-hide controls on inactivity while playing\n*/\nimport MediaContainer from './media-container.js';\nimport { defineCustomElement } from './utils/defineCustomElement.js';\nimport {\n  Window as window,\n  Document as document,\n} from './utils/server-safe-globals.js';\nimport { fullscreenApi } from './utils/fullscreenApi.js';\nimport { constToCamel } from './utils/stringUtils.js';\nimport { containsWithShadow } from './utils/element-utils.js';\n\nimport {\n  MediaUIEvents,\n  MediaUIAttributes,\n  TextTrackKinds,\n  TextTrackModes,\n  AvailabilityStates,\n  AttributeToStateChangeEventMap,\n} from './constants.js';\nimport {\n  stringifyTextTrackList,\n  getTextTracksList,\n  updateTracksModeTo,\n} from './utils/captions.js';\nconst {\n  MEDIA_PLAY_REQUEST,\n  MEDIA_PAUSE_REQUEST,\n  MEDIA_MUTE_REQUEST,\n  MEDIA_UNMUTE_REQUEST,\n  MEDIA_VOLUME_REQUEST,\n  MEDIA_ENTER_FULLSCREEN_REQUEST,\n  MEDIA_EXIT_FULLSCREEN_REQUEST,\n  MEDIA_SEEK_REQUEST,\n  MEDIA_PREVIEW_REQUEST,\n  MEDIA_ENTER_PIP_REQUEST,\n  MEDIA_EXIT_PIP_REQUEST,\n  MEDIA_PLAYBACK_RATE_REQUEST,\n} = MediaUIEvents;\n\nclass MediaController extends MediaContainer {\n  constructor() {\n    super();\n\n    if (!airplaySupported) {\n      this._airplayUnavailable = AvailabilityStates.UNSUPPORTED;\n    }\n    if (!pipSupported) {\n      this._pipUnavailable = AvailabilityStates.UNSUPPORTED;\n    }\n    if (volumeSupported !== undefined) {\n      if (!volumeSupported) {\n        this._volumeUnavailable = AvailabilityStates.UNSUPPORTED;\n      }\n    } else {\n      volumeSupportPromise.then(() => {\n        if (!volumeSupported) {\n          this._volumeUnavailable = AvailabilityStates.UNSUPPORTED;\n          this.propagateMediaState(MediaUIAttributes.MEDIA_VOLUME_UNAVAILABLE, this._volumeUnavailable);\n        }\n      });\n    }\n\n    // Include this for styling convenience or exclude since it\n    // can be derived from MEDIA_CAPTIONS_LIST && MEDIA_SUBTITLES_LIST? (CJP)\n    // this._captionsUnavailable;\n\n    // Track externally associated control elements\n    this.mediaStateReceivers = [];\n    this.associatedElementSubscriptions = new Map();\n    this.associatedElements = [];\n    this.associateElement(this);\n\n    // Capture request events from internal controls\n    const mediaUIEventHandlers = {\n      MEDIA_PLAY_REQUEST: () => this.media.play(),\n      MEDIA_PAUSE_REQUEST: () => this.media.pause(),\n      MEDIA_MUTE_REQUEST: () => (this.media.muted = true),\n      MEDIA_UNMUTE_REQUEST: () => {\n        const media = this.media;\n\n        media.muted = false;\n\n        // Avoid confusion by bumping the volume on unmute\n        if (media.volume === 0) {\n          media.volume = 0.25;\n        }\n      },\n      MEDIA_VOLUME_REQUEST: (e) => {\n        const media = this.media;\n        const volume = e.detail;\n\n        media.volume = volume;\n\n        // If the viewer moves the volume we should unmute for them.\n        if (volume > 0 && media.muted) {\n          media.muted = false;\n        }\n\n        // Store the last set volume as a local preference, if ls is supported\n        try {\n          window.localStorage.setItem(\n            'media-chrome-pref-volume',\n            volume.toString()\n          );\n        } catch (err) {}\n      },\n\n      // This current assumes that the media controller is the fullscreen element\n      // which may be true in most cases but not all.\n      // The prior version of media-chrome supported alt fullscreen elements\n      // and that's something we can work towards here.\n      //\n      // Generally the fullscreen and PiP API's have the exit methods and enabled\n      // flags on the `document`. The active element is accessed on the document\n      // or shadow root but Safari doesn't support this.\n      // Entering fullscreen or PiP is called on the element. i.e.\n      //\n      //   - Document.exitFullscreen()\n      //   - Document.fullscreenEnabled\n      //   - Document.fullscreenElement / (ShadowRoot.fullscreenElement)\n      //   - Element.requestFullscreen()\n      //\n      MEDIA_ENTER_FULLSCREEN_REQUEST: () => {\n        const media = this.media;\n\n        if (document.pictureInPictureElement) {\n          // Should be async\n          document.exitPictureInPicture();\n        }\n\n        if (super[fullscreenApi.enter]) {\n          // Media chrome container fullscreen\n          super[fullscreenApi.enter]();\n        } else if (media.webkitEnterFullscreen) {\n          // Media element fullscreen using iOS API\n          media.webkitEnterFullscreen();\n        } else if (media.requestFullscreen) {\n          // Media element fullscreen, using correct API\n          // So media els don't have to implement multiple APIs.\n          media.requestFullscreen();\n        } else {\n          console.warn('MediaChrome: Fullscreen not supported');\n        }\n      },\n      MEDIA_EXIT_FULLSCREEN_REQUEST: () => {\n        document[fullscreenApi.exit]();\n      },\n      MEDIA_ENTER_PIP_REQUEST: () => {\n        const media = this.media;\n\n        if (!document.pictureInPictureEnabled) return;\n\n        // Exit fullscreen if needed\n        if (document[fullscreenApi.element]) {\n          document[fullscreenApi.exit]();\n        }\n\n        media.requestPictureInPicture();\n      },\n      MEDIA_EXIT_PIP_REQUEST: () => {\n        if (document.pictureInPictureElement) {\n          // Should be async\n          document.exitPictureInPicture();\n        }\n      },\n      MEDIA_SEEK_REQUEST: (e) => {\n        const media = this.media;\n        const time = e.detail;\n\n        // Can't set the time before the media is ready\n        // Ignore if readyState isn't supported\n        if (media.readyState > 0 || media.readyState === undefined) {\n          media.currentTime = time;\n        }\n      },\n      MEDIA_PLAYBACK_RATE_REQUEST: (e) => {\n        this.media.playbackRate = e.detail;\n      },\n      MEDIA_PREVIEW_REQUEST: (e) => {\n        const media = this.media;\n        // No media (yet), so bail early\n        if (!media) return;\n\n        const [track] = getTextTracksList(media, {\n          kind: TextTrackKinds.METADATA,\n          label: 'thumbnails',\n        });\n        // No thumbnails track (yet) or no cues available in thumbnails track, so bail early.\n        if (!(track && track.cues)) return;\n\n        const time = e.detail;\n        const cue = Array.prototype.find.call(\n          track.cues,\n          (c) => c.startTime >= time\n        );\n\n        // No corresponding cue, so bail early\n        if (!cue) return;\n\n        // Since this isn't really \"global state\", we may want to consider moving this \"down\" to the component level,\n        // probably pulled out into its own module/set of functions (CJP)\n        const base = !/'^(?:[a-z]+:)?\\/\\//i.test(cue.text)\n          ? media.querySelector('track[label=\"thumbnails\"]')?.src\n          : undefined;\n        const url = new URL(cue.text, base);\n        const previewCoordsStr = new URLSearchParams(url.hash).get('#xywh');\n        this.propagateMediaState(\n          MediaUIAttributes.MEDIA_PREVIEW_IMAGE,\n          url.href\n        );\n        this.propagateMediaState(\n          MediaUIAttributes.MEDIA_PREVIEW_COORDS,\n          previewCoordsStr.split(',').join(' ')\n        );\n      },\n      MEDIA_SHOW_CAPTIONS_REQUEST: (e) => {\n        const tracks = getCaptionTracks(this);\n        const { detail: tracksToUpdate = [] } = e;\n        updateTracksModeTo(TextTrackModes.SHOWING, tracks, tracksToUpdate);\n      },\n      // NOTE: We're currently recommending and providing default components that will \"disable\" tracks when\n      // we don't want them shown (rather than \"hiding\" them).\n      // For a discussion why, see: https://github.com/muxinc/media-chrome/issues/60\n      MEDIA_DISABLE_CAPTIONS_REQUEST: (e) => {\n        const tracks = getCaptionTracks(this);\n        const { detail: tracksToUpdate = [] } = e;\n        updateTracksModeTo(TextTrackModes.DISABLED, tracks, tracksToUpdate);\n      },\n      MEDIA_SHOW_SUBTITLES_REQUEST: (e) => {\n        const tracks = getSubtitleTracks(this);\n        const { detail: tracksToUpdate = [] } = e;\n        updateTracksModeTo(TextTrackModes.SHOWING, tracks, tracksToUpdate);\n      },\n      MEDIA_DISABLE_SUBTITLES_REQUEST: (e) => {\n        const tracks = getSubtitleTracks(this);\n        const { detail: tracksToUpdate = [] } = e;\n        updateTracksModeTo(TextTrackModes.DISABLED, tracks, tracksToUpdate);\n      },\n      MEDIA_AIRPLAY_REQUEST: (_e) => {\n        const { media } = this;\n        if (!media) return;\n        if (\n          !(\n            media.webkitShowPlaybackTargetPicker &&\n            window.WebKitPlaybackTargetAvailabilityEvent\n          )\n        ) {\n          console.warn(\n            'received a request to select AirPlay but AirPlay is not supported in this environment'\n          );\n          return;\n        }\n        media.webkitShowPlaybackTargetPicker();\n      },\n    };\n\n    // Apply ui event listeners\n    Object.keys(mediaUIEventHandlers).forEach((key) => {\n      const handlerName = `_handle${constToCamel(key, true)}`;\n\n      this[handlerName] = (e) => {\n        // Stop media UI events from continuing to bubble\n        e.stopPropagation();\n\n        if (!this.media) {\n          console.warn('MediaController: No media available.');\n          return;\n        }\n\n        mediaUIEventHandlers[key](e, this.media);\n      };\n      this.addEventListener(MediaUIEvents[key], this[handlerName]);\n    });\n\n    // Pass media state to child and associated control elements\n    this._mediaStatePropagators = {\n      'play,pause,emptied': () => {\n        this.propagateMediaState(MediaUIAttributes.MEDIA_PAUSED, getPaused(this));\n      },\n      'playing,emptied': () => {\n        // We want to let the user know that the media started playing at any point (`media-has-played`).\n        // Since these propagators are all called when boostrapping state, let's verify this is\n        // a real playing event by checking that 1) there's media and 2) it isn't currently paused.\n        this.propagateMediaState(MediaUIAttributes.MEDIA_HAS_PLAYED, !this.media?.paused);\n      }, \n      volumechange: () => {\n        this.propagateMediaState(MediaUIAttributes.MEDIA_MUTED, getMuted(this));\n        this.propagateMediaState(MediaUIAttributes.MEDIA_VOLUME, getVolume(this));\n        this.propagateMediaState(\n          MediaUIAttributes.MEDIA_VOLUME_LEVEL,\n          getVolumeLevel(this)\n        );\n      },\n      [fullscreenApi.event]: () => {\n        // If media-chrome is in the shadow dom this.getRootNode().host will\n        // be the fullscreen element otherwise this controller will be.\n        let fullscreenEl = document[fullscreenApi.element];\n        this.propagateMediaState(\n          MediaUIAttributes.MEDIA_IS_FULLSCREEN,\n          fullscreenEl === (this.getRootNode().host ?? this)\n        );\n      },\n      'enterpictureinpicture,leavepictureinpicture': (e) => {\n        let isPip;\n\n        // Rely on event type for state first\n        // in case this doesn't work well for custom elements using internal <video>\n        if (e) {\n          isPip = e.type == 'enterpictureinpicture';\n        } else {\n          const pipElement =\n            this.getRootNode().pictureInPictureElement ??\n            document.pictureInPictureElement;\n          isPip = this.media && containsWithShadow(this.media, pipElement);\n        }\n        this.propagateMediaState(MediaUIAttributes.MEDIA_IS_PIP, isPip);\n      },\n      'timeupdate,loadedmetadata': () => {\n        this.propagateMediaState(\n          MediaUIAttributes.MEDIA_CURRENT_TIME,\n          getCurrentTime(this)\n        );\n      },\n      'durationchange,loadedmetadata,emptied': () => {\n        this.propagateMediaState(\n          MediaUIAttributes.MEDIA_DURATION,\n          getDuration(this)\n        );\n      },\n      'progress,emptied': () => {\n        this.propagateMediaState(\n          MediaUIAttributes.MEDIA_BUFFERED,\n          serializeTimeRanges(this.media?.buffered)\n        );\n      },\n      ratechange: () => {\n        this.propagateMediaState(\n          MediaUIAttributes.MEDIA_PLAYBACK_RATE,\n          getPlaybackRate(this)\n        );\n      },\n      'waiting,playing,emptied': () => {\n        const isLoading = this.media?.readyState < 3;\n        this.propagateMediaState(MediaUIAttributes.MEDIA_LOADING, isLoading);\n      },\n    };\n\n    if (this._airplayUnavailable !== AvailabilityStates.UNSUPPORTED) {\n      const airplaySupporHandler = (event) => {\n        // NOTE: since we invoke all these event handlers without arguments whenever a media is attached,\n        // need to account for the possibility that event is undefined (CJP).\n        if (event?.availability === 'available') {\n          this._airplayUnavailable = undefined;\n        } else if (event?.availability === 'not-available') {\n          this._airplayUnavailable = AvailabilityStates.UNAVAILABLE;\n        }\n        this.propagateMediaState(\n          MediaUIAttributes.MEDIA_AIRPLAY_UNAVAILABLE,\n          this._airplayUnavailable\n        );\n      };\n      // NOTE: only adding this if airplay is supported, in part to avoid unnecessary battery consumption per\n      // Apple docs recommendations (See: https://developer.apple.com/documentation/webkitjs/adding_an_airplay_button_to_your_safari_media_controls)\n      // For a more advanced solution, we could monitor for media state receivers that \"care\" about airplay support and add/remove\n      // whenever these are added/removed. (CJP)\n      this._mediaStatePropagators['webkitplaybacktargetavailabilitychanged'] =\n        airplaySupporHandler;\n    }\n\n    /**\n     * @TODO This and _mediaStatePropagators should be refactored to be less presumptuous about what is being\n     * monitored (and also probably how it's being monitored) (CJP)\n     */\n    this._textTrackMediaStatePropagators = {\n      'addtrack,removetrack,loadstart': () => {\n        this.propagateMediaState(\n          MediaUIAttributes.MEDIA_CAPTIONS_LIST,\n          stringifyTextTrackList(getCaptionTracks(this)) || undefined\n        );\n        this.propagateMediaState(\n          MediaUIAttributes.MEDIA_SUBTITLES_LIST,\n          stringifyTextTrackList(getSubtitleTracks(this)) || undefined\n        );\n        this.propagateMediaState(\n          MediaUIAttributes.MEDIA_CAPTIONS_SHOWING,\n          stringifyTextTrackList(getShowingCaptionTracks(this)) || undefined\n        );\n        this.propagateMediaState(\n          MediaUIAttributes.MEDIA_SUBTITLES_SHOWING,\n          stringifyTextTrackList(getShowingSubtitleTracks(this)) || undefined\n        );\n      },\n      change: () => {\n        this.propagateMediaState(\n          MediaUIAttributes.MEDIA_CAPTIONS_SHOWING,\n          stringifyTextTrackList(getShowingCaptionTracks(this)) || undefined\n        );\n        this.propagateMediaState(\n          MediaUIAttributes.MEDIA_SUBTITLES_SHOWING,\n          stringifyTextTrackList(getShowingSubtitleTracks(this)) || undefined\n        );\n      },\n    };\n  }\n\n  mediaSetCallback(media) {\n    super.mediaSetCallback(media);\n    // Listen for media state changes and propagate them to children and associated els\n    Object.keys(this._mediaStatePropagators).forEach((key) => {\n      const events = key.split(',');\n      const handler = this._mediaStatePropagators[key];\n\n      events.forEach((event) => {\n        // If this is fullscreen apply to the document\n        const target =\n          event == fullscreenApi.event ? this.getRootNode() : media;\n\n        target.addEventListener(event, handler);\n      });\n      handler();\n    });\n\n    Object.entries(this._textTrackMediaStatePropagators).forEach(\n      ([eventsStr, handler]) => {\n        const events = eventsStr.split(',');\n        events.forEach((event) => {\n          if (media.textTracks) {\n            media.textTracks.addEventListener(event, handler);\n          }\n        });\n        handler();\n      }\n    );\n\n    // Update the media with the last set volume preference\n    // This would preferably live with the media element,\n    // not a control.\n    try {\n      const volPref = window.localStorage.getItem('media-chrome-pref-volume');\n      if (volPref !== null) media.volume = volPref;\n    } catch (e) {\n      console.debug('Error getting volume pref', e);\n    }\n  }\n\n  mediaUnsetCallback(media) {\n    super.mediaUnsetCallback(media);\n\n    // Remove all state change propagators\n    Object.keys(this._mediaStatePropagators).forEach((key) => {\n      const events = key.split(',');\n      const handler = this._mediaStatePropagators[key];\n\n      events.forEach((event) => {\n        const target =\n          event == fullscreenApi.event ? this.getRootNode() : media;\n        target.removeEventListener(event, handler);\n      });\n    });\n\n    Object.entries(this._textTrackMediaStatePropagators).forEach(\n      ([eventsStr, handler]) => {\n        const events = eventsStr.split(',');\n        events.forEach((event) => {\n          if (media.textTracks) {\n            media.textTracks.removeEventListener(event, handler);\n          }\n        });\n        handler();\n      }\n    );\n\n    // Reset to paused state\n    this.propagateMediaState(MediaUIAttributes.MEDIA_PAUSED, true);\n  }\n\n  propagateMediaState(stateName, state) {\n    propagateMediaState(this.mediaStateReceivers, stateName, state);\n    const evt = new window.CustomEvent(\n      AttributeToStateChangeEventMap[stateName],\n      { composed: true, bubbles: true, detail: state }\n    );\n    this.dispatchEvent(evt);\n  }\n\n  associateElement(element) {\n    if (!element) return;\n    const { associatedElementSubscriptions } = this;\n\n    if (associatedElementSubscriptions.has(element)) return;\n\n    const registerMediaStateReceiver =\n      this.registerMediaStateReceiver.bind(this);\n    const unregisterMediaStateReceiver =\n      this.unregisterMediaStateReceiver.bind(this);\n\n    /** @TODO Should we support \"removing association\" */\n    const unsubscribe = monitorForMediaStateReceivers(\n      element,\n      registerMediaStateReceiver,\n      unregisterMediaStateReceiver\n    );\n\n    // Add all media request event listeners to the Associated Element. This allows any DOM element that\n    // is a descendant of any Associated Element (including the <media-controller/> itself) to make requests\n    // for media state changes rather than constraining that exclusively to a Media State Receivers.\n    Object.keys(MediaUIEvents).forEach((key) => {\n      element.addEventListener(\n        MediaUIEvents[key],\n        this[`_handle${constToCamel(key, true)}`]\n      );\n    });\n\n    associatedElementSubscriptions.set(element, unsubscribe);\n  }\n\n  unassociateElement(element) {\n    if (!element) return;\n    const { associatedElementSubscriptions } = this;\n    if (!associatedElementSubscriptions.has(element)) return;\n    const unsubscribe = associatedElementSubscriptions.get(element);\n    unsubscribe();\n    associatedElementSubscriptions.delete(element);\n\n    // Remove all media UI event listeners\n    Object.keys(MediaUIEvents).forEach((key) => {\n      element.removeEventListener(\n        MediaUIEvents[key],\n        this[`_handle${constToCamel(key, true)}`]\n      );\n    });\n  }\n\n  registerMediaStateReceiver(el) {\n    if (!el) return;\n    const els = this.mediaStateReceivers;\n    const index = els.indexOf(el);\n    if (index > -1) return;\n\n    els.push(el);\n\n    // No media depedencies, so push regardless of media availability.\n    propagateMediaState(\n      [el],\n      MediaUIAttributes.MEDIA_VOLUME_UNAVAILABLE,\n      this._volumeUnavailable\n    );\n    propagateMediaState(\n      [el],\n      MediaUIAttributes.MEDIA_AIRPLAY_UNAVAILABLE,\n      this._airplayUnavailable\n    );\n    propagateMediaState(\n      [el],\n      MediaUIAttributes.MEDIA_PIP_UNAVAILABLE,\n      this._pipUnavailable,\n    );\n\n    // TODO: Update to propagate all states when registered\n    if (this.media) {\n      propagateMediaState(\n        [el],\n        MediaUIAttributes.MEDIA_CAPTIONS_LIST,\n        stringifyTextTrackList(getCaptionTracks(this)) || undefined\n      );\n      propagateMediaState(\n        [el],\n        MediaUIAttributes.MEDIA_SUBTITLES_LIST,\n        stringifyTextTrackList(getSubtitleTracks(this)) || undefined\n      );\n      propagateMediaState(\n        [el],\n        MediaUIAttributes.MEDIA_CAPTIONS_SHOWING,\n        stringifyTextTrackList(getShowingCaptionTracks(this)) || undefined\n      );\n      propagateMediaState(\n        [el],\n        MediaUIAttributes.MEDIA_SUBTITLES_SHOWING,\n        stringifyTextTrackList(getShowingSubtitleTracks(this)) || undefined\n      );\n      propagateMediaState([el], MediaUIAttributes.MEDIA_PAUSED, getPaused(this));\n      // propagateMediaState([el], MediaUIAttributes.MEDIA_VOLUME_LEVEL, level);\n      propagateMediaState([el], MediaUIAttributes.MEDIA_MUTED, getMuted(this));\n      propagateMediaState([el], MediaUIAttributes.MEDIA_VOLUME, getVolume(this));\n      propagateMediaState(\n        [el],\n        MediaUIAttributes.MEDIA_VOLUME_LEVEL,\n        getVolumeLevel(this)\n      );\n      // const fullscreenEl = this.getRootNode()[fullscreenApi.element];\n      // propagateMediaState([el], MediaUIAttributes.MEDIA_IS_FULLSCREEN, fullscreenEl === this);\n      // propagateMediaState([el], MediaUIAttributes.MEDIA_IS_PIP, isPip);\n      propagateMediaState(\n        [el],\n        MediaUIAttributes.MEDIA_CURRENT_TIME,\n        getCurrentTime(this)\n      );\n      propagateMediaState(\n        [el],\n        MediaUIAttributes.MEDIA_DURATION,\n        getDuration(this)\n      );\n      propagateMediaState(\n        [el],\n        MediaUIAttributes.MEDIA_PLAYBACK_RATE,\n        getPlaybackRate(this)\n      );\n    }\n  }\n\n  unregisterMediaStateReceiver(el) {\n    const els = this.mediaStateReceivers;\n\n    const index = els.indexOf(el);\n    if (index < 0) return;\n\n    els.splice(index, 1);\n  }\n\n  /**\n   * Media Controller should not mimic the HTMLMediaElement API.\n   * @see https://github.com/muxinc/media-chrome/pull/182#issuecomment-1067370339\n   */\n}\n\nconst getPaused = (controller) => {\n  if (!controller.media) return true;\n\n  return controller.media.paused;\n};\n\nconst getMuted = (controller) => {\n  return !!(controller.media && controller.media.muted);\n};\n\nconst getVolume = (controller) => {\n  const media = controller.media;\n\n  return media ? media.volume : 1;\n};\n\nconst getVolumeLevel = (controller) => {\n  let level = 'high';\n\n  if (!controller.media) return level;\n\n  const { muted, volume } = controller.media;\n\n  if (volume === 0 || muted) {\n    level = 'off';\n  } else if (volume < 0.5) {\n    level = 'low';\n  } else if (volume < 0.75) {\n    level = 'medium';\n  }\n\n  return level;\n};\n\nconst getCurrentTime = (controller) => {\n  const media = controller.media;\n\n  return media ? media.currentTime : 0;\n};\n\nconst getDuration = (controller) => {\n  const media = controller.media;\n\n  return media ? media.duration : NaN;\n};\n\nconst getPlaybackRate = (controller) => {\n  const media = controller.media;\n\n  return media ? media.playbackRate : 1;\n};\n\nconst getSubtitleTracks = (controller) => {\n  return getTextTracksList(controller.media, { kind: TextTrackKinds.SUBTITLES });\n};\n\nconst getCaptionTracks = (controller) => {\n  return getTextTracksList(controller.media, { kind: TextTrackKinds.CAPTIONS });\n};\n\nconst getShowingSubtitleTracks = (controller) => {\n  return getTextTracksList(controller.media, {\n    kind: TextTrackKinds.SUBTITLES,\n    mode: TextTrackModes.SHOWING,\n  });\n};\n\nconst getShowingCaptionTracks = (controller) => {\n  return getTextTracksList(controller.media, {\n    kind: TextTrackKinds.CAPTIONS,\n    mode: TextTrackModes.SHOWING,\n  });\n};\n\nconst MEDIA_UI_ATTRIBUTE_NAMES = Object.values(MediaUIAttributes);\n\nconst getMediaUIAttributesFrom = (child) => {\n  const {\n    constructor: { observedAttributes },\n  } = child;\n  const mediaChromeAttributesList = child\n    ?.getAttribute?.(MediaUIAttributes.MEDIA_CHROME_ATTRIBUTES)\n    ?.split?.(/\\s+/);\n  if (!Array.isArray(observedAttributes || mediaChromeAttributesList))\n    return [];\n  return (observedAttributes || mediaChromeAttributesList).filter((attrName) =>\n    MEDIA_UI_ATTRIBUTE_NAMES.includes(attrName)\n  );\n};\n\nconst isMediaStateReceiver = (child) => {\n  return !!getMediaUIAttributesFrom(child).length;\n};\n\nconst setAttr = async (child, attrName, attrValue) => {\n  // If the node is not connected to the DOM yet wait on macrotask. Fix for:\n  //   Uncaught DOMException: Failed to construct 'CustomElement':\n  //   The result must not have attributes\n  if (!child.isConnected) {\n    await delay(0);\n  }\n\n  if (attrValue == undefined) {\n    return child.removeAttribute(attrName);\n  }\n  if (typeof attrValue === 'boolean') {\n    if (attrValue) return child.setAttribute(attrName, '');\n    return child.removeAttribute(attrName);\n  }\n  if (Number.isNaN(attrValue)) {\n    return child.removeAttribute(attrName);\n  }\n  return child.setAttribute(attrName, attrValue);\n};\n\nconst isMediaSlotElementDescendant = (el) => !!el.closest?.('*[slot=\"media\"]');\n\n/**\n *\n * @description This function will recursively check for any descendants (including the rootNode)\n * that are Media State Receivers and invoke `mediaStateReceiverCallback` with any Media State Receiver\n * found\n *\n * @param {HTMLElement} rootNode\n * @param {function} mediaStateReceiverCallback\n */\nconst traverseForMediaStateReceivers = (\n  rootNode,\n  mediaStateReceiverCallback\n) => {\n  // We (currently) don't check if descendants of the `media` (e.g. <video/>) are Media State Receivers\n  // See also: `propagateMediaState`\n  if (isMediaSlotElementDescendant(rootNode)) {\n    return;\n  }\n\n  const traverseForMediaStateReceiversSync = (\n    rootNode,\n    mediaStateReceiverCallback\n  ) => {\n    // The rootNode is itself a Media State Receiver\n    if (isMediaStateReceiver(rootNode)) {\n      mediaStateReceiverCallback(rootNode);\n    }\n\n    const { children = [] } = rootNode ?? {};\n    const shadowChildren = rootNode?.shadowRoot?.children ?? [];\n    const allChildren = [...children, ...shadowChildren];\n\n    // Traverse all children (including shadowRoot children) to see if they are/have Media State Receivers\n    allChildren.forEach((child) =>\n      traverseForMediaStateReceivers(child, mediaStateReceiverCallback)\n    );\n  };\n\n  // Custom Elements (and *only* Custom Elements) must have a hyphen (\"-\") in their name. So, if the rootNode is\n  // a custom element (aka has a hyphen in its name), wait until it's defined before attempting traversal to determine\n  // whether or not it or its descendants are Media State Receivers.\n  // IMPORTANT NOTE: We're intentionally *always* waiting for the `whenDefined()` Promise to resolve here\n  // (instead of using `window.customElements.get(name)` to check if a custom element is already defined/registered)\n  // because we encountered some reliability issues with the custom element instances not being fully \"ready\", even if/when\n  // they are available in the registry via `window.customElements.get(name)`.\n  const name = rootNode?.nodeName.toLowerCase();\n  if (name.includes('-') && !isMediaStateReceiver(rootNode)) {\n    window.customElements.whenDefined(name).then(() => {\n      // Try/traverse again once the custom element is defined\n      traverseForMediaStateReceiversSync(rootNode, mediaStateReceiverCallback);\n    });\n    return;\n  }\n\n  traverseForMediaStateReceiversSync(rootNode, mediaStateReceiverCallback);\n};\n\nconst propagateMediaState = (els, stateName, val) => {\n  els.forEach((el) => {\n    const relevantAttrs = getMediaUIAttributesFrom(el);\n    if (!relevantAttrs.includes(stateName)) return;\n    setAttr(el, stateName, val);\n  });\n};\n\n/**\n *\n * @description This function will monitor the rootNode for any Media State Receiver descendants\n * that are already present, added, or removed, invoking the relevant callback function for each\n * case.\n *\n * @param {HTMLElement} rootNode\n * @param {function} registerMediaStateReceiver\n * @param {function} unregisterMediaStateReceiver\n * @returns An unsubscribe method, used to stop monitoring descendants of rootNode and to unregister its descendants\n *\n */\nconst monitorForMediaStateReceivers = (\n  rootNode,\n  registerMediaStateReceiver,\n  unregisterMediaStateReceiver\n) => {\n  // First traverse the tree to register any current Media State Receivers\n  traverseForMediaStateReceivers(rootNode, registerMediaStateReceiver);\n\n  // Monitor for any event-based requests from descendants to register/unregister as a Media State Receiver\n  const registerMediaStateReceiverHandler = (evt) => {\n    const el = evt?.composedPath()[0] ?? evt.target;\n    registerMediaStateReceiver(el);\n  };\n\n  const unregisterMediaStateReceiverHandler = (evt) => {\n    const el = evt?.composedPath()[0] ?? evt.target;\n    unregisterMediaStateReceiver(el);\n  };\n\n  rootNode.addEventListener(\n    MediaUIEvents.REGISTER_MEDIA_STATE_RECEIVER,\n    registerMediaStateReceiverHandler\n  );\n  rootNode.addEventListener(\n    MediaUIEvents.UNREGISTER_MEDIA_STATE_RECEIVER,\n    unregisterMediaStateReceiverHandler\n  );\n\n  // Observe any changes to the DOM for any descendants that are identifiable as Media State Receivers\n  // and register or unregister them, depending on the change that occurred.\n  const mutationCallback = (mutationsList, _observer) => {\n    mutationsList.forEach((mutationRecord) => {\n      const {\n        addedNodes = [],\n        removedNodes = [],\n        type,\n        target,\n        attributeName,\n      } = mutationRecord;\n      if (type === 'childList') {\n        // For each added node, register any Media State Receiver descendants (including itself)\n        Array.prototype.forEach.call(addedNodes, (node) =>\n          traverseForMediaStateReceivers(node, registerMediaStateReceiver)\n        );\n        // For each removed node, unregister any Media State Receiver descendants (including itself)\n        Array.prototype.forEach.call(removedNodes, (node) =>\n          traverseForMediaStateReceivers(node, unregisterMediaStateReceiver)\n        );\n      } else if (\n        type === 'attributes' &&\n        attributeName === MediaUIAttributes.MEDIA_CHROME_ATTRIBUTES\n      ) {\n        if (isMediaStateReceiver(target)) {\n          // Changed from a \"non-Media State Receiver\" to a Media State Receiver: register it.\n          registerMediaStateReceiver(target);\n        } else {\n          // Changed from a Media State Receiver to a \"non-Media State Receiver\": unregister it.\n          unregisterMediaStateReceiver(target);\n        }\n      }\n    });\n  };\n\n  const observer = new MutationObserver(mutationCallback);\n  observer.observe(rootNode, {\n    childList: true,\n    attributes: true,\n    subtree: true,\n  });\n\n  const unsubscribe = () => {\n    // Unregister any Media State Receiver descendants (including ourselves)\n    traverseForMediaStateReceivers(rootNode, unregisterMediaStateReceiver);\n    // Stop observing for Media State Receivers\n    observer.disconnect();\n    // Stop listening for Media State Receiver events.\n    rootNode.removeEventListener(\n      MediaUIEvents.REGISTER_MEDIA_STATE_RECEIVER,\n      registerMediaStateReceiverHandler\n    );\n    rootNode.removeEventListener(\n      MediaUIEvents.UNREGISTER_MEDIA_STATE_RECEIVER,\n      unregisterMediaStateReceiverHandler\n    );\n  };\n\n  return unsubscribe;\n};\n\nlet testMediaEl;\nexport const getTestMediaEl = () => {\n  if (testMediaEl) return testMediaEl;\n  testMediaEl = document?.createElement?.('video');\n  return testMediaEl;\n};\n\nexport const hasVolumeSupportAsync = async (mediaEl = getTestMediaEl()) => {\n  if (!mediaEl) return false;\n  const prevVolume = mediaEl.volume;\n  mediaEl.volume = prevVolume / 2 + 0.1;\n  await delay(0);\n  return mediaEl.volume !== prevVolume;\n};\n\n/**\n * Returns a promise that will resolve after passed ms.\n * @param  {number} ms\n * @return {Promise}\n */\nexport const delay = (ms) => new Promise((resolve, reject) => setTimeout(resolve, ms));\n\nexport const hasPipSupport = (mediaEl = getTestMediaEl()) =>\n  typeof mediaEl?.requestPictureInPicture === 'function';\n\nconst pipSupported = hasPipSupport();\n\nlet volumeSupported;\nconst volumeSupportPromise = hasVolumeSupportAsync().then((supported) => {\n  volumeSupported = supported;\n  return volumeSupported;\n});\n\nconst airplaySupported = !!window.WebKitPlaybackTargetAvailabilityEvent;\n\nfunction serializeTimeRanges(timeRanges = []) {\n  return Array.from(timeRanges)\n    .map((_, i) => [\n      Number(timeRanges.start(i).toFixed(2)),\n      Number(timeRanges.end(i).toFixed(2)),\n    ].join(':'))\n    .join(' ');\n}\n\ndefineCustomElement('media-controller', MediaController);\n\nexport default MediaController;\n", "import { MediaUIAttributes } from './constants.js';\nimport { defineCustomElement } from './utils/defineCustomElement.js';\nimport {\n  Window as window,\n  Document as document,\n} from './utils/server-safe-globals.js';\n\nconst template = document.createElement('template');\n\n// Can't comma-separate selectors like ::-webkit-slider-thumb, ::-moz-range-thumb\n// Browsers ignore the whole rule if you do. So using templates for those.\nconst thumbStyles = `\n  height: var(--thumb-height);\n  width: var(--media-range-thumb-width, 10px);\n  border: var(--media-range-thumb-border, none);\n  border-radius: var(--media-range-thumb-border-radius, 10px);\n  background: var(--media-range-thumb-background, #fff);\n  box-shadow: var(--media-range-thumb-box-shadow, 1px 1px 1px transparent);\n  cursor: pointer;\n  transition: var(--media-range-thumb-transition, none);\n  transform: var(--media-range-thumb-transform, none);\n  opacity: var(--media-range-thumb-opacity, 1);\n`;\n\nconst trackStyles = `\n  width: var(--media-range-track-width, 100%);\n  min-width: 40px;\n  height: var(--track-height);\n  border: var(--media-range-track-border, none);\n  border-radius: var(--media-range-track-border-radius, 0);\n  background: var(--media-range-track-background-internal, var(--media-range-track-background-color, #eee));\n\n  box-shadow: var(--media-range-track-box-shadow, none);\n  transition: var(--media-range-track-transition, none);\n  cursor: pointer;\n`;\n\ntemplate.innerHTML = `\n  <style>\n    :host {\n      --thumb-height: var(--media-range-thumb-height, 10px);\n      --track-height: var(--media-range-track-height, 4px);\n\n      position: relative;\n      display: inline-block;\n      vertical-align: middle;\n      box-sizing: border-box;\n      background: var(--media-control-background, rgba(20,20,30, 0.7));\n      transition: background 0.15s linear;\n      height: 44px;\n      width: 100px;\n      padding: 0 10px;\n\n      pointer-events: auto;\n    }\n\n    /*\n      Only show outline when keyboard focusing.\n      https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo\n    */\n    :host-context([media-keyboard-control]):host(:focus),\n    :host-context([media-keyboard-control]):host(:focus-within) {\n      box-shadow: inset 0 0 0 2px rgba(27, 127, 204, 0.9);\n    }\n\n    :host(:hover) {\n      background: var(--media-control-hover-background, rgba(50,50,60, 0.7));\n    }\n\n    input[type=range] {\n      /* Reset */\n      -webkit-appearance: none; /* Hides the slider so that custom slider can be made */\n      background: transparent; /* Otherwise white in Chrome */\n\n      /* Fill host with the range */\n      min-height: 100%;\n      width: var(--media-range-track-width, 100%); /* Specific width is required for Firefox. */\n\n      box-sizing: border-box;\n      padding: 0;\n      margin: 0;\n    }\n\n    /* Special styling for WebKit/Blink */\n    input[type=range]::-webkit-slider-thumb {\n      -webkit-appearance: none;\n      ${thumbStyles}\n      /* You need to specify a margin in Chrome, but in Firefox and IE it is automatic */\n      margin-top: calc(calc(0px - var(--thumb-height) + var(--track-height)) / 2);\n    }\n    input[type=range]::-moz-range-thumb { ${thumbStyles} }\n\n    input[type=range]::-webkit-slider-runnable-track { ${trackStyles} }\n    input[type=range]::-moz-range-track { ${trackStyles} }\n    input[type=range]::-ms-track {\n      /* Reset */\n      width: 100%;\n      cursor: pointer;\n      /* Hides the slider so custom styles can be added */\n      background: transparent;\n      border-color: transparent;\n      color: transparent;\n\n      ${trackStyles}\n    }\n\n    /* Eventually want to move towards different styles for focus-visible\n       https://github.com/WICG/focus-visible/blob/master/src/focus-visible.js\n       Youtube appears to do this by de-focusing a button after a button click */\n    input[type=range]:focus {\n      outline: 0;\n    }\n    input[type=range]:focus::-webkit-slider-runnable-track {\n      outline: 0;\n    }\n\n    input[type=range]:disabled::-webkit-slider-thumb {\n      background-color: #777;\n    }\n\n    input[type=range]:disabled::-webkit-slider-runnable-track {\n      background-color: #777;\n    }\n\n  </style>\n  <input id=\"range\" type=\"range\" min=\"0\" max=\"1000\" step=\"1\" value=\"0\">\n`;\n\nclass MediaChromeRange extends window.HTMLElement {\n  static get observedAttributes() {\n    return [MediaUIAttributes.MEDIA_CONTROLLER];\n  }\n\n  constructor() {\n    super();\n\n    this.attachShadow({ mode: 'open' });\n    this.shadowRoot.appendChild(template.content.cloneNode(true));\n\n    this.range = this.shadowRoot.querySelector('#range');\n    this.range.addEventListener('input', this.updateBar.bind(this));\n  }\n\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    if (attrName === MediaUIAttributes.MEDIA_CONTROLLER) {\n      if (oldValue) {\n        const mediaControllerEl = document.getElementById(oldValue);\n        mediaControllerEl?.unassociateElement?.(this);\n      }\n      if (newValue) {\n        const mediaControllerEl = document.getElementById(newValue);\n        mediaControllerEl?.associateElement?.(this);\n      }\n    }\n  }\n\n  connectedCallback() {\n    const mediaControllerId = this.getAttribute(\n      MediaUIAttributes.MEDIA_CONTROLLER\n    );\n    if (mediaControllerId) {\n      const mediaControllerEl = document.getElementById(mediaControllerId);\n      mediaControllerEl?.associateElement?.(this);\n    }\n    this.updateBar();\n  }\n\n  disconnectedCallback() {\n    const mediaControllerSelector = this.getAttribute(\n      MediaUIAttributes.MEDIA_CONTROLLER\n    );\n    if (mediaControllerSelector) {\n      const mediaControllerEl = document.getElementById(mediaControllerId);\n      mediaControllerEl?.unassociateElement?.(this);\n    }\n  }\n\n  /*\n    Native ranges have a single color for the whole track, which is different\n    from most video players that have a colored \"bar\" to the left of the handle\n    showing playback progress or volume level. Here we're building that bar\n    by using a background gradient that moves with the range value.\n  */\n  updateBar() {\n    const colorArray = this.getBarColors();\n\n    let gradientStr = 'linear-gradient(to right, ';\n    let prevPercent = 0;\n    colorArray.forEach((color) => {\n      if (color[1] < prevPercent) return;\n      gradientStr =\n        gradientStr + `${color[0]} ${prevPercent}%, ${color[0]} ${color[1]}%,`;\n      prevPercent = color[1];\n    });\n    gradientStr = gradientStr.slice(0, gradientStr.length - 1) + ')';\n\n    this.style.setProperty(\n      '--media-range-track-background-internal',\n      gradientStr\n    );\n  }\n\n  /*\n    Build the color gradient for the range bar.\n    Creating an array so progress-bar can insert the buffered bar.\n  */\n  getBarColors() {\n    const range = this.range;\n    const rangePercent = (range.value / range.max) * 100;\n\n    let colorArray = [\n      ['var(--media-range-bar-color, #fff)', rangePercent],\n      ['var(--media-range-track-background-color, #333)', 100],\n    ];\n\n    return colorArray;\n  }\n}\n\ndefineCustomElement('media-chrome-range', MediaChromeRange);\n\nexport default MediaChromeRange;\n", "/*\n  <media-control-bar>\n\n  Auto position contorls in a line and set some base colors\n*/\nimport { MediaUIAttributes } from './constants.js';\nimport { defineCustomElement } from './utils/defineCustomElement.js';\nimport {\n  Window as window,\n  Document as document,\n} from './utils/server-safe-globals.js';\n\nconst template = document.createElement('template');\n\ntemplate.innerHTML = `\n  <style>\n    :host {\n      /* Need position to display above video for some reason */\n      box-sizing: border-box;\n      display: inline-flex;\n      color: var(--media-icon-color, #eee);\n      --media-loading-icon-width: 44px;\n    }\n\n    media-time-range,\n    ::slotted(media-time-range),\n    ::slotted(media-progress-range),\n    ::slotted(media-clip-selector) {\n      flex-grow: 1;\n    }\n  </style>\n\n  <slot></slot>\n`;\n\nclass MediaControlBar extends window.HTMLElement {\n  static get observedAttributes() {\n    return [MediaUIAttributes.MEDIA_CONTROLLER];\n  }\n\n  constructor() {\n    super();\n\n    this.attachShadow({ mode: 'open' });\n    this.shadowRoot.appendChild(template.content.cloneNode(true));\n  }\n\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    if (attrName === MediaUIAttributes.MEDIA_CONTROLLER) {\n      if (oldValue) {\n        const mediaControllerEl = document.getElementById(oldValue);\n        mediaControllerEl?.unassociateElement?.(this);\n      }\n      if (newValue) {\n        const mediaControllerEl = document.getElementById(newValue);\n        mediaControllerEl?.associateElement?.(this);\n      }\n    }\n  }\n\n  connectedCallback() {\n    const mediaControllerId = this.getAttribute(\n      MediaUIAttributes.MEDIA_CONTROLLER\n    );\n    if (mediaControllerId) {\n      const mediaControllerEl = document.getElementById(mediaControllerId);\n      mediaControllerEl?.associateElement?.(this);\n    }\n  }\n\n  disconnectedCallback() {\n    const mediaControllerSelector = this.getAttribute(\n      MediaUIAttributes.MEDIA_CONTROLLER\n    );\n    if (mediaControllerSelector) {\n      const mediaControllerEl = document.getElementById(mediaControllerId);\n      mediaControllerEl?.unassociateElement?.(this);\n    }\n  }\n}\n\ndefineCustomElement('media-control-bar', MediaControlBar);\n\nexport default MediaControlBar;\n", "import { MediaUIAttributes } from './constants.js';\nimport { defineCustomElement } from './utils/defineCustomElement.js';\nimport {\n  Window as window,\n  Document as document,\n} from './utils/server-safe-globals.js';\n// Todo: Use data locals: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleTimeString\n\nconst template = document.createElement('template');\n\ntemplate.innerHTML = `\n  <style>\n    :host {\n      display: inline-flex;\n      justify-content: center;\n      align-items: center;\n      box-sizing: border-box;\n      background: var(--media-control-background, rgba(20,20,30, 0.7));\n  \n      padding: 10px;\n\n      font-size: 14px;\n      line-height: 24px;\n      font-family: Arial, sans-serif;\n      text-align: center;\n      color: #ffffff;\n      pointer-events: auto;\n    }\n\n    #container {\n      /* NOTE: We don't currently have more generic sizing vars */\n      height: var(--media-text-content-height, auto);\n    }\n  </style>\n  <span id=\"container\">\n  <slot></slot>\n  </span>\n`;\n\nclass MediaTextDisplay extends window.HTMLElement {\n  static get observedAttributes() {\n    return [MediaUIAttributes.MEDIA_CONTROLLER];\n  }\n\n  constructor() {\n    super();\n\n    this.attachShadow({ mode: 'open' });\n    this.shadowRoot.appendChild(template.content.cloneNode(true));\n    this.container = this.shadowRoot.querySelector('#container');\n  }\n\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    if (attrName === MediaUIAttributes.MEDIA_CONTROLLER) {\n      if (oldValue) {\n        const mediaControllerEl = document.getElementById(oldValue);\n        mediaControllerEl?.unassociateElement?.(this);\n      }\n      if (newValue) {\n        const mediaControllerEl = document.getElementById(newValue);\n        mediaControllerEl?.associateElement?.(this);\n      }\n    }\n  }\n\n  connectedCallback() {\n    const mediaControllerId = this.getAttribute(\n      MediaUIAttributes.MEDIA_CONTROLLER\n    );\n    if (mediaControllerId) {\n      const mediaControllerEl = document.getElementById(mediaControllerId);\n      mediaControllerEl?.associateElement?.(this);\n    }\n  }\n\n  disconnectedCallback() {\n    const mediaControllerSelector = this.getAttribute(\n      MediaUIAttributes.MEDIA_CONTROLLER\n    );\n    if (mediaControllerSelector) {\n      const mediaControllerEl = document.getElementById(mediaControllerId);\n      mediaControllerEl?.unassociateElement?.(this);\n    }\n  }\n}\n\ndefineCustomElement('media-text-display', MediaTextDisplay);\n\nexport default MediaTextDisplay;\n", "import MediaTextDisplay from './media-text-display.js';\nimport { defineCustomElement } from './utils/defineCustomElement.js';\nimport { formatTime } from './utils/time.js';\nimport { MediaUIAttributes } from './constants.js';\n// Todo: Use data locals: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleTimeString\n\nclass MediaCurrentTimeDisplay extends MediaTextDisplay {\n  static get observedAttributes() {\n    return [...super.observedAttributes, MediaUIAttributes.MEDIA_CURRENT_TIME];\n  }\n\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    if (attrName === MediaUIAttributes.MEDIA_CURRENT_TIME) {\n      this.container.innerHTML = formatTime(newValue);\n    }\n    super.attributeChangedCallback(attrName, oldValue, newValue);\n  }\n}\n\ndefineCustomElement('media-current-time-display', MediaCurrentTimeDisplay);\n\nexport default MediaCurrentTimeDisplay;\n", "import MediaTextDisplay from './media-text-display.js';\nimport { defineCustomElement } from './utils/defineCustomElement.js';\nimport { formatTime } from './utils/time.js';\nimport { MediaUIAttributes } from './constants.js';\n// Todo: Use data locals: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleTimeString\n\nclass MediaDurationDisplay extends MediaTextDisplay {\n  static get observedAttributes() {\n    return [...super.observedAttributes, MediaUIAttributes.MEDIA_DURATION];\n  }\n\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    if (attrName === MediaUIAttributes.MEDIA_DURATION) {\n      this.container.innerHTML = formatTime(newValue);\n    }\n    super.attributeChangedCallback(attrName, oldValue, newValue);\n  }\n}\n\ndefineCustomElement('media-duration-display', MediaDurationDisplay);\n\nexport default MediaDurationDisplay;\n", "import MediaTextDisplay from './media-text-display.js';\nimport { defineCustomElement } from './utils/defineCustomElement.js';\nimport { formatAsTimePhrase, formatTime } from './utils/time.js';\nimport { MediaUIAttributes } from './constants.js';\nimport { nouns } from './labels/labels.js';\n// Todo: Use data locals: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleTimeString\n\nconst DEFAULT_TIMES_SEP = '&nbsp;/&nbsp;';\n\nconst formatTimesLabel = (el, { timesSep = DEFAULT_TIMES_SEP } = {}) => {\n  const showRemaining = el.getAttribute('remaining') != null;\n  const showDuration = el.getAttribute('show-duration') != null;\n  const currentTime = +el.getAttribute(MediaUIAttributes.MEDIA_CURRENT_TIME);\n  const duration = +el.getAttribute(MediaUIAttributes.MEDIA_DURATION);\n\n  const timeLabel = showRemaining\n    ? formatTime(0 - (duration - currentTime))\n    : formatTime(currentTime);\n\n  if (!showDuration) return timeLabel;\n  return `${timeLabel}${timesSep}${formatTime(duration)}`;\n};\n\nconst DEFAULT_MISSING_TIME_PHRASE = 'video not loaded, unknown time.';\n\nconst updateAriaValueText = (el) => {\n  if (\n    !(\n      el.hasAttribute(MediaUIAttributes.MEDIA_CURRENT_TIME) &&\n      el.hasAttribute(MediaUIAttributes.MEDIA_DURATION)\n    )\n  ) {\n    el.setAttribute('aria-valuetext', DEFAULT_MISSING_TIME_PHRASE);\n    return;\n  }\n  const showRemaining = el.getAttribute('remaining') != null;\n  const showDuration = el.getAttribute('show-duration') != null;\n  const currentTime = +el.getAttribute(MediaUIAttributes.MEDIA_CURRENT_TIME);\n  const duration = +el.getAttribute(MediaUIAttributes.MEDIA_DURATION);\n\n  const currentTimePhrase = showRemaining\n    ? formatAsTimePhrase(0 - (duration - currentTime))\n    : formatAsTimePhrase(currentTime);\n\n  if (!showDuration) {\n    el.setAttribute('aria-valuetext', currentTimePhrase);\n    return;\n  }\n  const totalTimePhrase = formatAsTimePhrase(duration);\n  const fullPhrase = `${currentTimePhrase} of ${totalTimePhrase}`;\n  el.setAttribute('aria-valuetext', fullPhrase);\n};\n\nclass MediaTimeDisplay extends MediaTextDisplay {\n  static get observedAttributes() {\n    return [\n      ...super.observedAttributes,\n      MediaUIAttributes.MEDIA_CURRENT_TIME,\n      MediaUIAttributes.MEDIA_DURATION,\n      'remaining',\n      'show-duration',\n    ];\n  }\n\n  connectedCallback() {\n    this.setAttribute('role', 'progressbar');\n    this.setAttribute('aria-label', nouns.PLAYBACK_TIME());\n    this.setAttribute('tabindex', 0);\n    super.connectedCallback();\n  }\n\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    if (\n      [\n        MediaUIAttributes.MEDIA_CURRENT_TIME,\n        MediaUIAttributes.MEDIA_DURATION,\n        'remaining',\n        'show-duration',\n      ].includes(attrName)\n    ) {\n      const timesLabel = formatTimesLabel(this);\n      updateAriaValueText(this);\n      this.container.innerHTML = timesLabel;\n    }\n    super.attributeChangedCallback(attrName, oldValue, newValue);\n  }\n}\n\ndefineCustomElement('media-time-display', MediaTimeDisplay);\n\nexport default MediaTimeDisplay;\n", "import MediaChromeButton from './media-chrome-button.js';\nimport { defineCustomElement } from './utils/defineCustomElement.js';\nimport {\n  Window as window,\n  Document as document,\n} from './utils/server-safe-globals.js';\nimport { MediaUIEvents, MediaUIAttributes } from './constants.js';\nimport { nouns } from './labels/labels.js';\nimport { splitTextTracksStr } from './utils/captions.js';\n\nconst ccIconOn = `\n<svg\n   aria-hidden=\"true\"\n   xmlns:svg=\"http://www.w3.org/2000/svg\"\n   xmlns=\"http://www.w3.org/2000/svg\"\n   version=\"1.0\"\n   viewbox=\"0 0 153 125.71389\"\n   width=\"auto\"\n   height=\"24\">\n  <g\n     transform=\"scale(6.3080558,6.3080558)\"\n     id=\"g12\">\n    <path\n       class=\"icon\" \n       d=\"M 21.9806,9.0135 C 21.9505,5.8358 21.8299,4.4502 21.077,3.4712 C 20.9415,3.2605 20.6854,3.14 20.4746,2.9895 C 19.7366,2.4472 16.2577,2.2515 12.2215,2.2515 C 8.1853,2.2515 4.54077,2.4472 3.81787,2.9895 C 3.59192,3.14 3.33581,3.2605 3.1853,3.4712 C 2.44726,4.4502 2.34192,5.8358 2.29675,9.0135 C 2.34192,12.1914 2.44726,13.5769 3.1853,14.5558 C 3.33581,14.7817 3.59192,14.8871 3.81787,15.0377 C 4.54077,15.595 8.1853,15.7757 12.2215,15.8058 C 16.2577,15.7757 19.7366,15.595 20.4746,15.0377 C 20.6854,14.8871 20.9415,14.7817 21.077,14.5558 C 21.8299,13.5769 21.9505,12.1914 21.9806,9.0135 z \"\n       style=\"fill-rule:evenodd;stroke:none\"\n       id=\"path16\" />\n    <path\n       class=\"icon\" \n       d=\"M 11.6896,8.1906 C 11.4853,5.704 10.1628,4.239 7.79723,4.239 C 5.63596,4.239 3.93706,6.1879 3.93706,9.31964 C 3.93706,12.4648 5.48544,14.4271 8.04452,14.4271 C 10.0875,14.4271 11.5176,12.9218 11.7434,10.4217 L 9.30256,10.4217 C 9.20579,11.3492 8.81871,12.0616 8.00151,12.0616 C 6.71121,12.0616 6.47467,10.7847 6.47467,9.42716 C 6.47467,7.5588 7.0123,6.6046 7.90474,6.6046 C 8.70045,6.6046 9.20579,7.1825 9.28106,8.1906 L 11.6896,8.1906 z \"\n       style=\"fill:#000000;fill-rule:evenodd;stroke:none\"\n       id=\"path20\" />\n    <path\n      class=\"icon\" \n      d=\"M 20.1199,8.1906 C 19.9156,5.704 18.5931,4.239 16.2275,4.239 C 14.0662,4.239 12.3674,6.1879 12.3674,9.31964 C 12.3674,12.4648 13.9157,14.4271 16.4748,14.4271 C 18.5178,14.4271 19.9479,12.9218 20.1736,10.4217 L 17.7328,10.4217 C 17.6361,11.3492 17.249,12.0616 16.4318,12.0616 C 15.1415,12.0616 14.9049,10.7847 14.9049,9.42716 C 14.9049,7.5588 15.4426,6.6046 16.335,6.6046 C 17.1307,6.6046 17.6361,7.1825 17.7113,8.1906 L 20.1199,8.1906 z \"\n      style=\"fill:#000000;fill-rule:evenodd;stroke:none\"\n      id=\"path22\" />\n    <path class=\"icon\" d=\"M 2,20 L 22,20\" stroke-width=\"4\" stroke=\"var(--media-icon-color, #eee)\" id=\"path24\"/>\n  </g>\n</svg>\n`;\n\nconst ccIconOff = `\n<svg\n   aria-hidden=\"true\"\n   xmlns:svg=\"http://www.w3.org/2000/svg\"\n   xmlns=\"http://www.w3.org/2000/svg\"\n   version=\"1.0\"\n   viewbox=\"0 0 153 125.71389\"\n   width=\"auto\"\n   height=\"24\">\n  <g\n     transform=\"scale(6.3080558,6.3080558)\"\n     id=\"g12\">\n    <path\n       class=\"icon\" \n       d=\"M 21.9806,9.0135 C 21.9505,5.8358 21.8299,4.4502 21.077,3.4712 C 20.9415,3.2605 20.6854,3.14 20.4746,2.9895 C 19.7366,2.4472 16.2577,2.2515 12.2215,2.2515 C 8.1853,2.2515 4.54077,2.4472 3.81787,2.9895 C 3.59192,3.14 3.33581,3.2605 3.1853,3.4712 C 2.44726,4.4502 2.34192,5.8358 2.29675,9.0135 C 2.34192,12.1914 2.44726,13.5769 3.1853,14.5558 C 3.33581,14.7817 3.59192,14.8871 3.81787,15.0377 C 4.54077,15.595 8.1853,15.7757 12.2215,15.8058 C 16.2577,15.7757 19.7366,15.595 20.4746,15.0377 C 20.6854,14.8871 20.9415,14.7817 21.077,14.5558 C 21.8299,13.5769 21.9505,12.1914 21.9806,9.0135 z \"\n       style=\"fill-rule:evenodd;stroke:none\"\n       id=\"path16\" />\n    <path\n       class=\"icon\" \n       d=\"M 11.6896,8.1906 C 11.4853,5.704 10.1628,4.239 7.79723,4.239 C 5.63596,4.239 3.93706,6.1879 3.93706,9.31964 C 3.93706,12.4648 5.48544,14.4271 8.04452,14.4271 C 10.0875,14.4271 11.5176,12.9218 11.7434,10.4217 L 9.30256,10.4217 C 9.20579,11.3492 8.81871,12.0616 8.00151,12.0616 C 6.71121,12.0616 6.47467,10.7847 6.47467,9.42716 C 6.47467,7.5588 7.0123,6.6046 7.90474,6.6046 C 8.70045,6.6046 9.20579,7.1825 9.28106,8.1906 L 11.6896,8.1906 z \"\n       style=\"fill:#000000;fill-rule:evenodd;stroke:none\"\n       id=\"path20\" />\n    <path\n      class=\"icon\" \n      d=\"M 20.1199,8.1906 C 19.9156,5.704 18.5931,4.239 16.2275,4.239 C 14.0662,4.239 12.3674,6.1879 12.3674,9.31964 C 12.3674,12.4648 13.9157,14.4271 16.4748,14.4271 C 18.5178,14.4271 19.9479,12.9218 20.1736,10.4217 L 17.7328,10.4217 C 17.6361,11.3492 17.249,12.0616 16.4318,12.0616 C 15.1415,12.0616 14.9049,10.7847 14.9049,9.42716 C 14.9049,7.5588 15.4426,6.6046 16.335,6.6046 C 17.1307,6.6046 17.6361,7.1825 17.7113,8.1906 L 20.1199,8.1906 z \"\n      style=\"fill:#000000;fill-rule:evenodd;stroke:none\"\n      id=\"path22\" />\n  </g>\n</svg>\n`;\n\nconst slotTemplate = document.createElement('template');\nslotTemplate.innerHTML = `\n  <style>\n  :host([aria-checked=\"true\"]) slot:not([name=on]) > *, \n  :host([aria-checked=\"true\"]) ::slotted(:not([slot=on])) {\n    display: none;\n  }\n\n  /* Double negative, but safer if display doesn't equal 'block' */\n  :host(:not([aria-checked=\"true\"])) slot:not([name=off]) > *, \n  :host(:not([aria-checked=\"true\"])) ::slotted(:not([slot=off])) {\n    display: none;\n  }\n  </style>\n\n  <slot name=\"on\">${ccIconOn}</slot>\n  <slot name=\"off\">${ccIconOff}</slot>\n`;\n\nconst updateAriaChecked = (el) => {\n  el.setAttribute('aria-checked', isCCOn(el));\n};\n\nconst isCCOn = (el) => {\n  const showingCaptions = !!el.getAttribute(\n    MediaUIAttributes.MEDIA_CAPTIONS_SHOWING\n  );\n  const showingSubtitlesAsCaptions =\n    !el.hasAttribute('no-subtitles-fallback') &&\n    !!el.getAttribute(MediaUIAttributes.MEDIA_SUBTITLES_SHOWING);\n  return showingCaptions || showingSubtitlesAsCaptions;\n};\n\nclass MediaCaptionsButton extends MediaChromeButton {\n  static get observedAttributes() {\n    return [\n      ...super.observedAttributes,\n      'no-subtitles-fallback',\n      'default-showing',\n      MediaUIAttributes.MEDIA_CAPTIONS_LIST,\n      MediaUIAttributes.MEDIA_CAPTIONS_SHOWING,\n      MediaUIAttributes.MEDIA_SUBTITLES_LIST,\n      MediaUIAttributes.MEDIA_SUBTITLES_SHOWING,\n    ];\n  }\n\n  constructor(options = {}) {\n    super({ slotTemplate, ...options });\n    // Internal variable to keep track of when we have some or no captions (or subtitles, if using subtitles fallback)\n    // Used for `default-showing` behavior.\n    this._captionsReady = false;\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.setAttribute('role', 'switch');\n    this.setAttribute('aria-label', nouns.CLOSED_CAPTIONS());\n    updateAriaChecked(this);\n  }\n\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    if (\n      [\n        MediaUIAttributes.MEDIA_CAPTIONS_SHOWING,\n        MediaUIAttributes.MEDIA_SUBTITLES_SHOWING,\n      ].includes(attrName)\n    ) {\n      updateAriaChecked(this);\n    }\n    if (\n      this.hasAttribute('default-showing') && // we want to show captions by default\n      this.getAttribute('aria-checked') !== 'true' // and we aren't currently showing them\n    ) {\n      // Make sure we're only checking against the relevant attributes based on whether or not we are using subtitles fallback\n      const subtitlesIncluded = !this.hasAttribute('no-subtitles-fallback');\n      const relevantAttributes = subtitlesIncluded\n        ? [\n            MediaUIAttributes.MEDIA_CAPTIONS_LIST,\n            MediaUIAttributes.MEDIA_SUBTITLES_LIST,\n          ]\n        : [MediaUIAttributes.MEDIA_CAPTIONS_LIST];\n      // If one of the relevant attributes changed...\n      if (relevantAttributes.includes(attrName)) {\n        // check if we went\n        // a) from captions (/subs) not ready to captions (/subs) ready\n        // b) from captions (/subs) ready to captions (/subs) not ready.\n        // by using a simple truthy (empty or non-empty) string check on the relevant values\n        // NOTE: We're using `getAttribute` here instead of `newValue` because we may care about\n        // multiple attributes.\n        const nextCaptionsReady =\n          !!this.getAttribute(MediaUIAttributes.MEDIA_CAPTIONS_LIST) ||\n          !!(\n            subtitlesIncluded &&\n            this.getAttribute(MediaUIAttributes.MEDIA_SUBTITLES_LIST)\n          );\n        // If the value changed, (re)set the internal prop\n        if (this._captionsReady !== nextCaptionsReady) {\n          this._captionsReady = nextCaptionsReady;\n          // If captions are currently ready, that means we went from unready to ready, so\n          // use the click handler to dispatch a request to turn captions on\n          if (this._captionsReady) {\n            this.handleClick();\n          }\n        }\n      }\n    }\n    super.attributeChangedCallback(attrName, oldValue, newValue);\n  }\n\n  handleClick(_e) {\n    const ccIsOn = isCCOn(this);\n    if (ccIsOn) {\n      // Closed Captions is on. Clicking should disable any currently showing captions (and subtitles, if relevant)\n      // For why we are requesting tracks to `mode=\"disabled\"` and not `mode=\"hidden\"`, see: https://github.com/muxinc/media-chrome/issues/60\n      const captionsShowingStr = this.getAttribute(\n        MediaUIAttributes.MEDIA_CAPTIONS_SHOWING\n      );\n      // If we have currently showing captions track(s), request for them to be disabled.\n      if (captionsShowingStr) {\n        const evt = new window.CustomEvent(\n          MediaUIEvents.MEDIA_DISABLE_CAPTIONS_REQUEST,\n          { composed: true, bubbles: true, detail: captionsShowingStr }\n        );\n        this.dispatchEvent(evt);\n      }\n      const subtitlesShowingStr = this.getAttribute(\n        MediaUIAttributes.MEDIA_SUBTITLES_SHOWING\n      );\n      // If we have currently showing subtitles track(s) and we're using subtitle fallback (true/\"on\" by default), request for them to be disabled.\n      if (subtitlesShowingStr && !this.hasAttribute('no-subtitles-fallback')) {\n        const evt = new window.CustomEvent(\n          MediaUIEvents.MEDIA_DISABLE_SUBTITLES_REQUEST,\n          { composed: true, bubbles: true, detail: subtitlesShowingStr }\n        );\n        this.dispatchEvent(evt);\n      }\n    } else {\n      // Closed Captions is off. Clicking should show the first relevant captions track or subtitles track if we're using subtitle fallback (true/\"on\" by default)\n      const [ccTrackStr] =\n        splitTextTracksStr(\n          this.getAttribute(MediaUIAttributes.MEDIA_CAPTIONS_LIST) ?? ''\n        ) ?? [];\n      if (ccTrackStr) {\n        // If we have at least one captions track, request for the first one to be showing.\n        const evt = new window.CustomEvent(\n          MediaUIEvents.MEDIA_SHOW_CAPTIONS_REQUEST,\n          { composed: true, bubbles: true, detail: ccTrackStr }\n        );\n        this.dispatchEvent(evt);\n      } else if (!this.hasAttribute('no-subtitles-fallback')) {\n        // If we don't have a captions track and we're using subtitles fallback (true/\"on\" by default), check if we have any subtitles available.\n        const [subTrackStr] =\n          splitTextTracksStr(\n            this.getAttribute(MediaUIAttributes.MEDIA_SUBTITLES_LIST) ?? ''\n          ) ?? [];\n        if (subTrackStr) {\n          // If we have at least one subtitles track (and didn't have any captions tracks), request for the first one to be showing as a fallback for captions.\n          const evt = new window.CustomEvent(\n            MediaUIEvents.MEDIA_SHOW_SUBTITLES_REQUEST,\n            { composed: true, bubbles: true, detail: subTrackStr }\n          );\n          this.dispatchEvent(evt);\n        }\n      } else {\n        // If we end up here, it means we have an enabled CC-button that a user has clicked on but there are no captions and no subtitles (or we've disabled subtitles fallback).\n        console.error(\n          'Attempting to enable closed captions but none are available! Please verify your media content if this is unexpected.'\n        );\n      }\n    }\n  }\n}\n\ndefineCustomElement('media-captions-button', MediaCaptionsButton);\n\nexport default MediaCaptionsButton;\n", "import MediaChromeButton from './media-chrome-button.js';\nimport { defineCustomElement } from './utils/defineCustomElement.js';\nimport {\n  Window as window,\n  Document as document,\n} from './utils/server-safe-globals.js';\nimport { MediaUIEvents, MediaUIAttributes } from './constants.js';\nimport { verbs } from './labels/labels.js';\nimport { getSlotted, updateIconText } from './utils/element-utils.js';\n\nconst DEFAULT_SEEK_OFFSET = 30;\n\n// const forwardIcon = `<svg xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" viewBox=\"0 0 15 18\"><defs><style>.text{font-size:8px;font-family:Arial-BoldMT, Arial;font-weight:700;}</style></defs><text class=\"text value\" transform=\"translate(5.9 17.6)\">${DEFAULT_SEEK_OFFSET}</text><path d=\"M7,3V0l5.61,4L7,7.94V5A5.54,5.54,0,0,0,5.1,15.48V17.6A7.5,7.5,0,0,1,7,3Z\"/></svg>`;\nconst forwardIcon = `<svg xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" viewBox=\"-3 -3 24 24\"><defs><style>.text{font-size:8px;font-family:Arial-BoldMT, Arial;font-weight:700;}</style></defs><text class=\"text value\" transform=\"translate(7.4 17.6)\">${DEFAULT_SEEK_OFFSET}</text><path d=\"M8.52,3V0l5.61,4-5.61,4V5A5.54,5.54,0,0,0,6.6,15.48V17.6A7.5,7.5,0,0,1,8.52,3Z\"/></svg>`;\n\nconst slotTemplate = document.createElement('template');\nslotTemplate.innerHTML = `  \n  <slot name=\"forward\">${forwardIcon}</slot>\n`;\n\nconst DEFAULT_TIME = 0;\n\nconst updateAriaLabel = (el) => {\n  // NOTE: seek direction is described via text, so always use positive numeric representation\n  const seekOffset = Math.abs(+el.getAttribute('seek-offset'));\n  const label = verbs.SEEK_FORWARD_N_SECS({ seekOffset });\n  el.setAttribute('aria-label', label);\n};\n\nconst updateSeekIconValue = (el) => {\n  const svg = getSlotted(el, 'forward');\n  const value = el.getAttribute('seek-offset');\n  updateIconText(svg, value);\n};\n\nclass MediaSeekForwardButton extends MediaChromeButton {\n  static get observedAttributes() {\n    return [\n      ...super.observedAttributes,\n      MediaUIAttributes.MEDIA_CURRENT_TIME,\n      'seek-offset',\n    ];\n  }\n\n  constructor(options = {}) {\n    super({ slotTemplate, ...options });\n  }\n\n  connectedCallback() {\n    // NOTE: currently don't support changing the seek value, so only need to set this once on initialization.\n    if (!this.hasAttribute('seek-offset')) {\n      this.setAttribute('seek-offset', DEFAULT_SEEK_OFFSET);\n    }\n    updateAriaLabel(this);\n    updateSeekIconValue(this);\n    super.connectedCallback();\n  }\n\n  attributeChangedCallback(attrName, _oldValue, newValue) {\n    if (attrName === 'seek-offset') {\n      if (newValue == undefined) {\n        this.setAttribute('seek-offset', DEFAULT_SEEK_OFFSET);\n      }\n      updateSeekIconValue(this);\n      updateAriaLabel(this);\n    }\n  }\n\n  handleClick() {\n    const currentTimeStr = this.getAttribute(\n      MediaUIAttributes.MEDIA_CURRENT_TIME\n    );\n    const seekOffset = +this.getAttribute('seek-offset');\n    const currentTime =\n      currentTimeStr && !Number.isNaN(+currentTimeStr)\n        ? +currentTimeStr\n        : DEFAULT_TIME;\n    const detail = currentTime + seekOffset;\n    const evt = new window.CustomEvent(MediaUIEvents.MEDIA_SEEK_REQUEST, {\n      composed: true,\n      bubbles: true,\n      detail,\n    });\n    this.dispatchEvent(evt);\n  }\n}\n\ndefineCustomElement('media-seek-forward-button', MediaSeekForwardButton);\n\nexport default MediaSeekForwardButton;\n", "/*\n  <media-fullscreen-button media=\"#myVideo\" fullscreen-element=\"#myContainer\">\n\n  The fullscreen-element attribute can be used to say which element\n  to make fullscreen.\n  If none, the button will look for the closest media-container element to the media.\n  If none, the button will make the media fullscreen.\n*/\nimport MediaChromeButton from './media-chrome-button.js';\nimport { defineCustomElement } from './utils/defineCustomElement.js';\nimport {\n  Window as window,\n  Document as document,\n} from './utils/server-safe-globals.js';\nimport { MediaUIEvents, MediaUIAttributes } from './constants.js';\nimport { verbs } from './labels/labels.js';\n\nconst enterFullscreenIcon = `<svg aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n  <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n  <path class=\"icon\" d=\"M7 14H5v5h5v-2H7v-3zm-2-4h2V7h3V5H5v5zm12 7h-3v2h5v-5h-2v3zM14 5v2h3v3h2V5h-5z\"/>\n</svg>`;\n\nconst exitFullscreenIcon = `<svg aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n  <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n  <path class=\"icon\" d=\"M5 16h3v3h2v-5H5v2zm3-8H5v2h5V5H8v3zm6 11h2v-3h3v-2h-5v5zm2-11V5h-2v5h5V8h-3z\"/>\n</svg>`;\n\nconst slotTemplate = document.createElement('template');\nslotTemplate.innerHTML = `\n  <style>\n  :host([${MediaUIAttributes.MEDIA_IS_FULLSCREEN}]) slot:not([name=exit]) > *, \n  :host([${MediaUIAttributes.MEDIA_IS_FULLSCREEN}]) ::slotted(:not([slot=exit])) {\n    display: none;\n  }\n\n  /* Double negative, but safer if display doesn't equal 'block' */\n  :host(:not([${MediaUIAttributes.MEDIA_IS_FULLSCREEN}])) slot:not([name=enter]) > *, \n  :host(:not([${MediaUIAttributes.MEDIA_IS_FULLSCREEN}])) ::slotted(:not([slot=enter])) {\n    display: none;\n  }\n  </style>\n\n  <slot name=\"enter\">${enterFullscreenIcon}</slot>\n  <slot name=\"exit\">${exitFullscreenIcon}</slot>\n`;\n\nconst updateAriaLabel = (el) => {\n  const isFullScreen =\n    el.getAttribute(MediaUIAttributes.MEDIA_IS_FULLSCREEN) != null;\n  const label = isFullScreen\n    ? verbs.EXIT_FULLSCREEN()\n    : verbs.ENTER_FULLSCREEN();\n  el.setAttribute('aria-label', label);\n};\n\nclass MediaFullscreenButton extends MediaChromeButton {\n  static get observedAttributes() {\n    return [...super.observedAttributes, MediaUIAttributes.MEDIA_IS_FULLSCREEN];\n  }\n\n  constructor(options = {}) {\n    super({ slotTemplate, ...options });\n  }\n\n  connectedCallback() {\n    updateAriaLabel(this);\n    super.connectedCallback();\n  }\n\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    if (attrName === MediaUIAttributes.MEDIA_IS_FULLSCREEN) {\n      updateAriaLabel(this);\n    }\n    super.attributeChangedCallback(attrName, oldValue, newValue);\n  }\n\n  handleClick(_e) {\n    const eventName =\n      this.getAttribute(MediaUIAttributes.MEDIA_IS_FULLSCREEN) != null\n        ? MediaUIEvents.MEDIA_EXIT_FULLSCREEN_REQUEST\n        : MediaUIEvents.MEDIA_ENTER_FULLSCREEN_REQUEST;\n    this.dispatchEvent(\n      new window.CustomEvent(eventName, { composed: true, bubbles: true })\n    );\n  }\n}\n\ndefineCustomElement('media-fullscreen-button', MediaFullscreenButton);\n\nexport default MediaFullscreenButton;\n", "import MediaChromeButton from './media-chrome-button.js';\nimport { defineCustomElement } from './utils/defineCustomElement.js';\nimport {\n  Window as window,\n  Document as document,\n} from './utils/server-safe-globals.js';\nimport { MediaUIEvents, MediaUIAttributes } from './constants.js';\nimport { verbs } from './labels/labels.js';\n\nconst offIcon =\n  '<svg aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path class=\"icon\" d=\"M16.5 12c0-1.77-1.02-3.29-2.5-4.03v2.21l2.45 2.45c.03-.2.05-.41.05-.63zm2.5 0c0 .94-.2 1.82-.54 2.64l1.51 1.51C20.63 14.91 21 13.5 21 12c0-4.28-2.99-7.86-7-8.77v2.06c2.89.86 5 3.54 5 6.71zM4.27 3L3 4.27 7.73 9H3v6h4l5 5v-6.73l4.25 4.25c-.67.52-1.42.93-2.25 1.18v2.06c1.38-.31 2.63-.95 3.69-1.81L19.73 21 21 19.73l-9-9L4.27 3zM12 4L9.91 6.09 12 8.18V4z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>';\n\nconst lowIcon =\n  '<svg aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path class=\"icon\" d=\"M18.5 12c0-1.77-1.02-3.29-2.5-4.03v8.05c1.48-.73 2.5-2.25 2.5-4.02zM5 9v6h4l5 5V4L9 9H5z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>';\n\nconst highIcon =\n  '<svg aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path class=\"icon\" d=\"M3 9v6h4l5 5V4L7 9H3zm13.5 3c0-1.77-1.02-3.29-2.5-4.03v8.05c1.48-.73 2.5-2.25 2.5-4.02zM14 3.23v2.06c2.89.86 5 3.54 5 6.71s-2.11 5.85-5 6.71v2.06c4.01-.91 7-4.49 7-8.77s-2.99-7.86-7-8.77z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>';\n\nconst slotTemplate = document.createElement('template');\nslotTemplate.innerHTML = `\n  <style>\n  /* Default to High slot/icon. */\n  :host(:not([${MediaUIAttributes.MEDIA_VOLUME_LEVEL}])) slot:not([name=high]) > *, \n  :host(:not([${MediaUIAttributes.MEDIA_VOLUME_LEVEL}])) ::slotted(:not([slot=high])),\n  :host([${MediaUIAttributes.MEDIA_VOLUME_LEVEL}=high]) slot:not([name=high]) > *, \n  :host([${MediaUIAttributes.MEDIA_VOLUME_LEVEL}=high]) ::slotted(:not([slot=high])) {\n    display: none;\n  }\n\n  :host([${MediaUIAttributes.MEDIA_VOLUME_LEVEL}=off]) slot:not([name=off]) > *, \n  :host([${MediaUIAttributes.MEDIA_VOLUME_LEVEL}=off]) ::slotted(:not([slot=off])) {\n    display: none;\n  }\n\n  :host([${MediaUIAttributes.MEDIA_VOLUME_LEVEL}=low]) slot:not([name=low]) > *, \n  :host([${MediaUIAttributes.MEDIA_VOLUME_LEVEL}=low]) ::slotted(:not([slot=low])) {\n    display: none;\n  }\n\n  :host([${MediaUIAttributes.MEDIA_VOLUME_LEVEL}=medium]) slot:not([name=medium]) > *, \n  :host([${MediaUIAttributes.MEDIA_VOLUME_LEVEL}=medium]) ::slotted(:not([slot=medium])) {\n    display: none;\n  }\n  </style>\n\n  <slot name=\"off\">${offIcon}</slot>\n  <slot name=\"low\">${lowIcon}</slot>\n  <slot name=\"medium\">${lowIcon}</slot>\n  <slot name=\"high\">${highIcon}</slot>\n`;\n\nconst updateAriaLabel = (el) => {\n  const muted = el.getAttribute(MediaUIAttributes.MEDIA_VOLUME_LEVEL) === 'off';\n  const label = muted ? verbs.UNMUTE() : verbs.MUTE();\n  el.setAttribute('aria-label', label);\n};\n\nclass MediaMuteButton extends MediaChromeButton {\n  static get observedAttributes() {\n    return [...super.observedAttributes, MediaUIAttributes.MEDIA_VOLUME_LEVEL];\n  }\n\n  constructor(options = {}) {\n    super({ slotTemplate, ...options });\n  }\n\n  connectedCallback() {\n    updateAriaLabel(this);\n    super.connectedCallback();\n  }\n\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    if (attrName === MediaUIAttributes.MEDIA_VOLUME_LEVEL) {\n      updateAriaLabel(this);\n    }\n    super.attributeChangedCallback(attrName, oldValue, newValue);\n  }\n\n  handleClick(_e) {\n    const eventName =\n      this.getAttribute(MediaUIAttributes.MEDIA_VOLUME_LEVEL) === 'off'\n        ? MediaUIEvents.MEDIA_UNMUTE_REQUEST\n        : MediaUIEvents.MEDIA_MUTE_REQUEST;\n    this.dispatchEvent(\n      new window.CustomEvent(eventName, { composed: true, bubbles: true })\n    );\n  }\n}\n\ndefineCustomElement('media-mute-button', MediaMuteButton);\n\nexport default MediaMuteButton;\n", "import MediaChromeButton from './media-chrome-button.js';\nimport { defineCustomElement } from './utils/defineCustomElement.js';\nimport {\n  Window as window,\n  Document as document,\n} from './utils/server-safe-globals.js';\nimport { MediaUIEvents, MediaUIAttributes } from './constants.js';\nimport { verbs } from './labels/labels.js';\n\nconst pipIcon =\n  '<svg aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path class=\"icon\" d=\"M19 7h-8v6h8V7zm2-4H3c-1.1 0-2 .9-2 2v14c0 1.1.9 1.98 2 1.98h18c1.1 0 2-.88 2-1.98V5c0-1.1-.9-2-2-2zm0 16.01H3V4.98h18v14.03z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>';\n\nconst slotTemplate = document.createElement('template');\nslotTemplate.innerHTML = `\n  <style>\n  :host([${MediaUIAttributes.MEDIA_IS_PIP}]) slot:not([name=exit]) > *, \n  :host([${MediaUIAttributes.MEDIA_IS_PIP}]) ::slotted(:not([slot=exit])) {\n    display: none;\n  }\n\n  /* Double negative, but safer if display doesn't equal 'block' */\n  :host(:not([${MediaUIAttributes.MEDIA_IS_PIP}])) slot:not([name=enter]) > *, \n  :host(:not([${MediaUIAttributes.MEDIA_IS_PIP}])) ::slotted(:not([slot=enter])) {\n    display: none;\n  }\n  </style>\n\n  <slot name=\"enter\">${pipIcon}</slot>\n  <slot name=\"exit\">${pipIcon}</slot>\n`;\n\nconst updateAriaLabel = (el) => {\n  const isPip = el.getAttribute(MediaUIAttributes.MEDIA_IS_PIP) != null;\n  const label = isPip ? verbs.EXIT_PIP() : verbs.ENTER_PIP();\n  el.setAttribute('aria-label', label);\n};\n\nclass MediaPipButton extends MediaChromeButton {\n  static get observedAttributes() {\n    return [...super.observedAttributes, MediaUIAttributes.MEDIA_IS_PIP, MediaUIAttributes.MEDIA_PIP_UNAVAILABLE];\n  }\n\n  constructor(options = {}) {\n    super({ slotTemplate, ...options });\n  }\n\n  connectedCallback() {\n    updateAriaLabel(this);\n    super.connectedCallback();\n  }\n\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    if (attrName === MediaUIAttributes.MEDIA_IS_PIP) {\n      updateAriaLabel(this);\n    }\n    super.attributeChangedCallback(attrName, oldValue, newValue);\n  }\n\n  handleClick(_e) {\n    const eventName =\n      this.getAttribute(MediaUIAttributes.MEDIA_IS_PIP) != null\n        ? MediaUIEvents.MEDIA_EXIT_PIP_REQUEST\n        : MediaUIEvents.MEDIA_ENTER_PIP_REQUEST;\n    this.dispatchEvent(\n      new window.CustomEvent(eventName, { composed: true, bubbles: true })\n    );\n  }\n}\n\ndefineCustomElement('media-pip-button', MediaPipButton);\n\nexport default MediaPipButton;\n", "import MediaChromeButton from './media-chrome-button.js';\nimport {\n  Window as window,\n  Document as document,\n} from './utils/server-safe-globals.js';\nimport { defineCustomElement } from './utils/defineCustomElement.js';\nimport { MediaUIEvents, MediaUIAttributes } from './constants.js';\nimport { verbs } from './labels/labels.js';\n\nconst playIcon =\n  '<svg aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path class=\"icon\" d=\"M8 5v14l11-7z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>';\nconst pauseIcon =\n  '<svg aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path class=\"icon\" d=\"M6 19h4V5H6v14zm8-14v14h4V5h-4z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>';\n\nconst slotTemplate = document.createElement('template');\nslotTemplate.innerHTML = `\n  <style>\n  :host([${MediaUIAttributes.MEDIA_PAUSED}]) slot[name=pause] > *, \n  :host([${MediaUIAttributes.MEDIA_PAUSED}]) ::slotted([slot=pause]) {\n    display: none;\n  }\n\n  :host(:not([${MediaUIAttributes.MEDIA_PAUSED}])) slot[name=play] > *, \n  :host(:not([${MediaUIAttributes.MEDIA_PAUSED}])) ::slotted([slot=play]) {\n    display: none;\n  }\n  </style>\n\n  <slot name=\"play\">${playIcon}</slot>\n  <slot name=\"pause\">${pauseIcon}</slot>\n`;\n\nconst updateAriaLabel = (el) => {\n  const paused = el.getAttribute(MediaUIAttributes.MEDIA_PAUSED) != null;\n  const label = paused ? verbs.PLAY() : verbs.PAUSE();\n  el.setAttribute('aria-label', label);\n};\n\nclass MediaPlayButton extends MediaChromeButton {\n  static get observedAttributes() {\n    return [...super.observedAttributes, MediaUIAttributes.MEDIA_PAUSED];\n  }\n\n  constructor(options = {}) {\n    super({ slotTemplate, ...options });\n  }\n\n  connectedCallback() {\n    updateAriaLabel(this);\n    super.connectedCallback();\n  }\n\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    if (attrName === MediaUIAttributes.MEDIA_PAUSED) {\n      updateAriaLabel(this);\n    }\n    super.attributeChangedCallback(attrName, oldValue, newValue);\n  }\n\n  handleClick(_e) {\n    const eventName =\n      this.getAttribute(MediaUIAttributes.MEDIA_PAUSED) != null\n        ? MediaUIEvents.MEDIA_PLAY_REQUEST\n        : MediaUIEvents.MEDIA_PAUSE_REQUEST;\n    this.dispatchEvent(\n      new window.CustomEvent(eventName, { composed: true, bubbles: true })\n    );\n  }\n}\n\ndefineCustomElement('media-play-button', MediaPlayButton);\n\nexport default MediaPlayButton;\n", "import MediaChromeButton from './media-chrome-button.js';\nimport { defineCustomElement } from './utils/defineCustomElement.js';\nimport {\n  Window as window,\n  Document as document,\n} from './utils/server-safe-globals.js';\nimport { MediaUIEvents, MediaUIAttributes } from './constants.js';\nimport { nouns } from './labels/labels.js';\n\n/*\n  <media-playback-rate-button rates=\"1 1.5 2\">\n*/\n\nconst DEFAULT_RATES = [1, 1.25, 1.5, 1.75, 2];\nconst DEFAULT_RATE = 1;\n\nconst slotTemplate = document.createElement('template');\nslotTemplate.innerHTML = `\n  <style>\n  :host {\n    font-size: 14px;\n    line-height: 24px;\n    font-weight: bold;\n  }\n\n  #container {\n    height: var(--media-text-content-height, 24px);\n  }\n  </style>\n\n  <span id=\"container\"></span>\n`;\n\nclass MediaPlaybackRateButton extends MediaChromeButton {\n  static get observedAttributes() {\n    return [\n      ...super.observedAttributes,\n      MediaUIAttributes.MEDIA_PLAYBACK_RATE,\n      'rates',\n    ];\n  }\n\n  constructor(options = {}) {\n    super({ slotTemplate, ...options });\n    this._rates = DEFAULT_RATES;\n    this.container = this.shadowRoot.querySelector('#container');\n    this.container.innerHTML = `${DEFAULT_RATE}x`;\n  }\n\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    if (attrName === 'rates') {\n      // This will:\n      // 1. parse the space-separated attribute string (standard for representing lists as HTML/CSS values) into an array (of strings)\n      //   The current regex allows for commas to be present between numbers to preserve legacy behavior\n      // 2. convert that list into numbers (including potentially NaN)\n      // 3. filter out all NaNs for invalid values\n      // 4. sort the array of numbers to ensure the expected toggle-through order for playback rate.\n      const newRates = (newValue ?? '')\n        .trim()\n        .split(/\\s*,?\\s+/)\n        .map((str) => Number(str))\n        .filter((num) => !Number.isNaN(num))\n        .sort((a, b) => a - b);\n      this._rates = newRates.length ? newRates : DEFAULT_RATES;\n      return;\n    }\n    if (attrName === MediaUIAttributes.MEDIA_PLAYBACK_RATE) {\n      const newPlaybackRate = newValue ? +newValue : Number.NaN;\n      const playbackRate = !Number.isNaN(newPlaybackRate)\n        ? newPlaybackRate\n        : DEFAULT_RATE;\n      this.container.innerHTML = `${playbackRate}x`;\n      this.setAttribute('aria-label', nouns.PLAYBACK_RATE({ playbackRate }));\n      return;\n    }\n    super.attributeChangedCallback(attrName, oldValue, newValue);\n  }\n\n  handleClick(_e) {\n    const currentRate =\n      +this.getAttribute(MediaUIAttributes.MEDIA_PLAYBACK_RATE) || DEFAULT_RATE;\n    const detail =\n      this._rates.find((r) => r > currentRate) ??\n      this._rates[0] ??\n      DEFAULT_RATE;\n    const evt = new window.CustomEvent(\n      MediaUIEvents.MEDIA_PLAYBACK_RATE_REQUEST,\n      { composed: true, bubbles: true, detail }\n    );\n    this.dispatchEvent(evt);\n  }\n}\n\ndefineCustomElement('media-playback-rate-button', MediaPlaybackRateButton);\n\nexport default MediaPlaybackRateButton;\n", "import { defineCustomElement } from './utils/defineCustomElement.js';\nimport {\n  Window as window,\n  Document as document,\n} from './utils/server-safe-globals.js';\nimport { MediaUIAttributes } from './constants.js';\n\nconst template = document.createElement('template');\n\ntemplate.innerHTML = `\n  <style>\n    :host {\n      pointer-events: none;\n      display: inline-block;\n      box-sizing: border-box;\n  \n      width: auto;\n      height: auto;\n    }\n  \n    img {\n      max-width: 100%;\n      max-height: 100%;\n      min-width: 100%;\n      min-height: 100%;\n      background-size: cover;\n      background-repeat: no-repeat;\n    }\n  \n    :host([${MediaUIAttributes.MEDIA_HAS_PLAYED}]) img {\n      display: none;\n    }\n  </style>\n\n  <img aria-hidden=\"true\" id=\"image\"/>\n`;\n\nconst setBackgroundImage = (el, image) => {\n  el.style['background-image'] = `url('${image}')`;\n}\n\nclass MediaPosterImage extends window.HTMLElement {\n  static get observedAttributes() {\n    return [MediaUIAttributes.MEDIA_HAS_PLAYED, 'placeholder-src', 'src'];\n  }\n\n  constructor() {\n    super();\n\n    this.attachShadow({ mode: 'open' });\n    this.shadowRoot.appendChild(template.content.cloneNode(true));\n\n    this.image = this.shadowRoot.querySelector('#image');\n  }\n\n  attributeChangedCallback(attrName, _oldValue, newValue) {\n    if (attrName === 'src') {\n      this.image.setAttribute('src', newValue);\n    }\n\n    if (attrName === 'placeholder-src') {\n      setBackgroundImage(this.image, newValue);\n    }\n  }\n}\n\ndefineCustomElement('media-poster-image', MediaPosterImage);\n\nexport default MediaPosterImage;\n", "import MediaChromeRange from './media-chrome-range.js';\nimport { defineCustomElement } from './utils/defineCustomElement.js';\nimport {\n  Window as window,\n  Document as document,\n} from './utils/server-safe-globals.js';\nimport { MediaUIEvents, MediaUIAttributes } from './constants.js';\nimport { nouns } from './labels/labels.js';\nimport { formatAsTimePhrase } from './utils/time.js';\n\nconst DEFAULT_MISSING_TIME_PHRASE = 'video not loaded, unknown time.';\n\nconst updateAriaValueText = (el) => {\n  const range = el.range;\n  const currentTimePhrase = formatAsTimePhrase(+range.value);\n  const totalTimePhrase = formatAsTimePhrase(+range.max);\n  const fullPhrase = !(currentTimePhrase && totalTimePhrase)\n    ? DEFAULT_MISSING_TIME_PHRASE\n    : `${currentTimePhrase} of ${totalTimePhrase}`;\n  range.setAttribute('aria-valuetext', fullPhrase);\n};\n\nconst template = document.createElement('template');\n\ntemplate.innerHTML = `\n  <style>\n    #thumbnailContainer {\n      display: none;\n    }\n\n    media-thumbnail-preview {\n      /* Scale the thumbnail preview to 50% and reposition appropriately to not take up too much real-estate. */\n      transform: scale(0.5) translateY(50%) translateX(-100%);\n      position: absolute;\n      bottom: calc(100% + 5px);\n      border: 2px solid #fff;\n      border-radius: 2px;\n      background-color: #000;\n    }\n\n    /* Can't get this working. Trying a downward triangle. */\n    /* media-thumbnail-preview::after {\n      content: \"\";\n      display: block;\n      width: 300px;\n      height: 300px;\n      margin: 100px;\n      background-color: #ff0;\n    } */\n\n    :host([${MediaUIAttributes.MEDIA_PREVIEW_IMAGE}]:hover) #thumbnailContainer {\n      display: block;\n      animation: fadeIn ease 0.5s;\n    }\n\n    @keyframes fadeIn {\n      0% {\n        /* transform-origin: bottom center; */\n        /* transform: scale(0.7); */\n        margin-top: 10px;\n        opacity: 0;\n      }\n      100% {\n        /* transform-origin: bottom center; */\n        /* transform: scale(1); */\n        margin-top: 0;\n        opacity: 1;\n      }\n    }\n  </style>\n  <div id=\"thumbnailContainer\">\n    <media-thumbnail-preview></media-thumbnail-preview>\n  </div>\n`;\n\nclass MediaTimeRange extends MediaChromeRange {\n  static get observedAttributes() {\n    return [\n      ...super.observedAttributes,\n      'thumbnails',\n      MediaUIAttributes.MEDIA_DURATION,\n      MediaUIAttributes.MEDIA_CURRENT_TIME,\n      MediaUIAttributes.MEDIA_PREVIEW_IMAGE,\n      MediaUIAttributes.MEDIA_BUFFERED,\n    ];\n  }\n\n  constructor() {\n    super();\n\n    this.shadowRoot.appendChild(template.content.cloneNode(true));\n\n    this.range.addEventListener('input', () => {\n      const newTime = this.range.value;\n      const detail = newTime;\n      const evt = new window.CustomEvent(MediaUIEvents.MEDIA_SEEK_REQUEST, {\n        composed: true,\n        bubbles: true,\n        detail,\n      });\n      this.dispatchEvent(evt);\n    });\n\n    // Come back to this feature\n    // this.playIfNotReady = e => {\n    //   this.range.removeEventListener('change', this.playIfNotReady);\n    //   const media = this.media;\n    //   media.play().then(this.setMediaTimeWithRange);\n    // };\n\n    this.enableThumbnails();\n  }\n\n  connectedCallback() {\n    this.range.setAttribute('aria-label', nouns.SEEK());\n    super.connectedCallback();\n  }\n\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    if (attrName === MediaUIAttributes.MEDIA_CURRENT_TIME) {\n      this.range.value = +newValue;\n      updateAriaValueText(this);\n      this.updateBar();\n    }\n    if (attrName === MediaUIAttributes.MEDIA_DURATION) {\n      // Since our range's step is 1, floor the max value to ensure reasonable rendering\n      this.range.max = Math.floor(+newValue);\n      updateAriaValueText(this);\n      this.updateBar();\n    }\n    if (attrName === MediaUIAttributes.MEDIA_BUFFERED) {\n      this.updateBar();\n    }\n    super.attributeChangedCallback(attrName, oldValue, newValue);\n  }\n\n  // mediaBufferedSet(bufferedRanges) {\n  //   this.updateBar();\n  // }\n\n  // mediaSetCallback(media) {\n  //   // Come back to this...\n  //   // If readyState is supported, and the range is used before\n  //   // the media is ready, use the play promise to set the time.\n  //   // if (media.readyState !== undefined && media.readyState == 0) {\n  //   //   // range.addEventListener('change', this.playIfNotReady);\n  //   // }\n  // }\n\n  // mediaUnsetCallback(media) {\n  //   // this.range.removeEventListener('change', this.playIfNotReady);\n  //   // TODO: Reset value after media is unset\n  // }\n\n  get mediaDuration() {\n    return +this.getAttribute(MediaUIAttributes.MEDIA_DURATION);\n  }\n\n  get mediaCurrentTime() {\n    return +this.getAttribute(MediaUIAttributes.MEDIA_CURRENT_TIME);\n  }\n\n  get mediaBuffered() {\n    const buffered = this.getAttribute(MediaUIAttributes.MEDIA_BUFFERED);\n    if (buffered) {\n      return buffered.split(' ').map((timePair) => timePair.split(':'));\n    }\n  }\n\n  /* Add a buffered progress bar */\n  getBarColors() {\n    let colorsArray = super.getBarColors();\n\n    if (\n      !this.mediaBuffered ||\n      !this.mediaBuffered.length ||\n      this.mediaDuration <= 0\n    ) {\n      return colorsArray;\n    }\n\n    const buffered = this.mediaBuffered;\n    let currentBufferedEnd = 0;\n    for (const [start, end] of buffered) {\n      if (this.mediaCurrentTime >= start && this.mediaCurrentTime <= end) {\n        currentBufferedEnd = end;\n        break;\n      }\n    }\n\n    const buffPercent = (currentBufferedEnd / this.mediaDuration) * 100;\n    colorsArray.splice(1, 0, [\n      'var(--media-time-buffered-color, #777)',\n      buffPercent,\n    ]);\n    return colorsArray;\n  }\n\n  enableThumbnails() {\n    this.thumbnailPreview = this.shadowRoot.querySelector(\n      'media-thumbnail-preview'\n    );\n    const thumbnailContainer = this.shadowRoot.querySelector(\n      '#thumbnailContainer'\n    );\n    thumbnailContainer.classList.add('enabled');\n\n    let mouseMoveHandler;\n    const trackMouse = () => {\n      mouseMoveHandler = (evt) => {\n        const duration = +this.getAttribute(MediaUIAttributes.MEDIA_DURATION);\n\n        // If no duration we can't calculate which time to show\n        if (!duration) return;\n\n        // Get mouse position percent\n        const rangeRect = this.range.getBoundingClientRect();\n        let mousePercent = (evt.clientX - rangeRect.left) / rangeRect.width;\n\n        // Lock between 0 and 1\n        mousePercent = Math.max(0, Math.min(1, mousePercent));\n\n        // Get thumbnail center position\n        const leftPadding = rangeRect.left - this.getBoundingClientRect().left;\n        const thumbnailLeft = leftPadding + mousePercent * rangeRect.width;\n\n        this.thumbnailPreview.style.left = `${thumbnailLeft}px`;\n\n        const detail = mousePercent * duration;\n        const mediaPreviewEvt = new window.CustomEvent(\n          MediaUIEvents.MEDIA_PREVIEW_REQUEST,\n          { composed: true, bubbles: true, detail }\n        );\n        this.dispatchEvent(mediaPreviewEvt);\n      };\n      window.addEventListener('mousemove', mouseMoveHandler, false);\n    };\n\n    const stopTrackingMouse = () => {\n      window.removeEventListener('mousemove', mouseMoveHandler);\n    };\n\n    // Trigger when the mouse moves over the range\n    let rangeEntered = false;\n    let rangeMouseMoveHander = (evt) => {\n      const mediaDurationStr = this.getAttribute(\n        MediaUIAttributes.MEDIA_DURATION\n      );\n      if (!rangeEntered && mediaDurationStr) {\n        rangeEntered = true;\n        trackMouse();\n\n        let offRangeHandler = (evt) => {\n          if (evt.target != this && !this.contains(evt.target)) {\n            window.removeEventListener('mousemove', offRangeHandler);\n            rangeEntered = false;\n            stopTrackingMouse();\n          }\n        };\n        window.addEventListener('mousemove', offRangeHandler, false);\n      }\n    };\n    this.addEventListener('mousemove', rangeMouseMoveHander, false);\n  }\n}\n\ndefineCustomElement('media-time-range', MediaTimeRange);\n\nexport default MediaTimeRange;\n", "/* \n  Renamed to <media-time-range> and deprecated\n*/\n\nimport MediaTimeRange from './media-time-range.js';\nimport { defineCustomElement } from './utils/defineCustomElement.js';\n\nclass MediaProgressRange extends MediaTimeRange {\n  constructor() {\n    super();\n\n    console.warn(\n      'MediaChrome: <media-progress-range> is deprecated. Use <media-time-range> instead.'\n    );\n  }\n}\n\ndefineCustomElement('media-progress-range', MediaProgressRange);\n\nexport default MediaProgressRange;\n", "import MediaChromeButton from './media-chrome-button.js';\nimport { defineCustomElement } from './utils/defineCustomElement.js';\nimport {\n  Window as window,\n  Document as document,\n} from './utils/server-safe-globals.js';\nimport { MediaUIEvents, MediaUIAttributes } from './constants.js';\nimport { verbs } from './labels/labels.js';\nimport { getSlotted, updateIconText } from './utils/element-utils.js';\n\nconst DEFAULT_SEEK_OFFSET = 30;\n\nconst backwardIcon =\n  `<svg aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"-3 -3 24 24\"><defs><style>.text{font-size:8px;font-family:Arial-BoldMT, Arial;font-weight:700;}</style></defs><text class=\"text value\" transform=\"translate(1.68 17.6)\">${DEFAULT_SEEK_OFFSET}</text><path d=\"M9.48,3V0L3.87,4l5.61,4V5a5.54,5.54,0,0,1,1.92,10.5V17.6A7.5,7.5,0,0,0,9.48,3Z\"/></svg>`;\n\nconst slotTemplate = document.createElement('template');\nslotTemplate.innerHTML = `  \n  <slot name=\"backward\">${backwardIcon}</slot>\n`;\n\nconst DEFAULT_TIME = 0;\n\nconst updateAriaLabel = (el) => {\n  // NOTE: seek direction is described via text, so always use positive numeric representation\n  const seekOffset = Math.abs(+el.getAttribute('seek-offset'));\n  const label = verbs.SEEK_BACK_N_SECS({ seekOffset });\n  el.setAttribute('aria-label', label);\n};\n\nconst updateSeekIconValue = (el) => {\n  const svg = getSlotted(el, 'backward');\n  const value = el.getAttribute('seek-offset');\n  updateIconText(svg, value);\n};\n\nclass MediaSeekBackwardButton extends MediaChromeButton {\n  static get observedAttributes() {\n    return [...super.observedAttributes, MediaUIAttributes.MEDIA_CURRENT_TIME];\n  }\n\n  constructor(options = {}) {\n    super({ slotTemplate, ...options });\n  }\n\n  connectedCallback() {\n    // NOTE: currently don't support changing the seek value, so only need to set this once on initialization.\n    if (!this.hasAttribute('seek-offset')) {\n      this.setAttribute('seek-offset', DEFAULT_SEEK_OFFSET);\n    }\n    updateAriaLabel(this);\n    updateSeekIconValue(this);\n    super.connectedCallback();\n  }\n\n  attributeChangedCallback(attrName, _oldValue, newValue) {\n    if (attrName === 'seek-offset') {\n      if (newValue == undefined) {\n        this.setAttribute('seek-offset', DEFAULT_SEEK_OFFSET);\n      }\n      updateSeekIconValue(this);\n      updateAriaLabel(this);\n    }\n  }\n\n  handleClick() {\n    const currentTimeStr = this.getAttribute(\n      MediaUIAttributes.MEDIA_CURRENT_TIME\n    );\n    const seekOffset = +this.getAttribute('seek-offset');\n    const currentTime =\n      currentTimeStr && !Number.isNaN(+currentTimeStr)\n        ? +currentTimeStr\n        : DEFAULT_TIME;\n    const detail = Math.max(currentTime - seekOffset, 0);\n    const evt = new window.CustomEvent(MediaUIEvents.MEDIA_SEEK_REQUEST, {\n      composed: true,\n      bubbles: true,\n      detail,\n    });\n    this.dispatchEvent(evt);\n  }\n}\n\ndefineCustomElement('media-seek-backward-button', MediaSeekBackwardButton);\n\nexport default MediaSeekBackwardButton;\n", "/*\n  <media-thumbnail-preview media=\"#myVideo\" time=\"10.00\">\n\n  Uses the \"thumbnails\" track of a video element to show an image relative to\n  the video time given in the `time` attribute.\n*/\nimport {\n  Window as window,\n  Document as document,\n} from './utils/server-safe-globals.js';\nimport { defineCustomElement } from './utils/defineCustomElement.js';\nimport { MediaUIAttributes } from './constants.js';\n\nconst template = document.createElement('template');\n\ntemplate.innerHTML = `\n  <style>\n    :host {\n      background-color: #000;\n      height: auto;\n      width: auto;\n    }\n\n    img {\n      object-fit: none;\n    }\n  </style>\n  <img crossorigin loading=\"eager\" decoding=\"async\" />\n`;\n\nclass MediaThumbnailPreviewElement extends window.HTMLElement {\n  static get observedAttributes() {\n    return [\n      MediaUIAttributes.MEDIA_CONTROLLER,\n      'time',\n      MediaUIAttributes.MEDIA_PREVIEW_IMAGE,\n      MediaUIAttributes.MEDIA_PREVIEW_COORDS,\n    ];\n  }\n\n  constructor() {\n    super();\n\n    this.attachShadow({ mode: 'open' });\n    this.shadowRoot.appendChild(template.content.cloneNode(true));\n  }\n\n  connectedCallback() {\n    const mediaControllerId = this.getAttribute(\n      MediaUIAttributes.MEDIA_CONTROLLER\n    );\n    if (mediaControllerId) {\n      const mediaControllerEl = document.getElementById(mediaControllerId);\n      mediaControllerEl?.associateElement?.(this);\n    }\n  }\n\n  disconnectedCallback() {\n    const mediaControllerSelector = this.getAttribute(\n      MediaUIAttributes.MEDIA_CONTROLLER\n    );\n    if (mediaControllerSelector) {\n      const mediaControllerEl = document.getElementById(mediaControllerId);\n      mediaControllerEl?.unassociateElement?.(this);\n    }\n  }\n\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    if (\n      [\n        'time',\n        MediaUIAttributes.MEDIA_PREVIEW_IMAGE,\n        MediaUIAttributes.MEDIA_PREVIEW_COORDS,\n      ].includes(attrName)\n    ) {\n      this.update();\n    }\n    if (attrName === MediaUIAttributes.MEDIA_CONTROLLER) {\n      if (oldValue) {\n        const mediaControllerEl = document.getElementById(oldValue);\n        mediaControllerEl?.unassociateElement?.(this);\n      }\n      if (newValue) {\n        const mediaControllerEl = document.getElementById(newValue);\n        mediaControllerEl?.associateElement?.(this);\n      }\n    }\n  }\n\n  update() {\n    const mediaPreviewCoordsStr = this.getAttribute(\n      MediaUIAttributes.MEDIA_PREVIEW_COORDS\n    );\n    const mediaPreviewImage = this.getAttribute(\n      MediaUIAttributes.MEDIA_PREVIEW_IMAGE\n    );\n    if (!(mediaPreviewCoordsStr && mediaPreviewImage)) return;\n    const img = this.shadowRoot.querySelector('img');\n    const [x, y, w, h] = mediaPreviewCoordsStr\n      .split(/\\s+/)\n      .map((coord) => +coord);\n    const src = mediaPreviewImage;\n\n    const resize = () => {\n      img.style.height = `${h}px`;\n      img.style['aspect-ratio'] = `${w} / ${h}`;\n    };\n\n    if (img.src !== src) {\n      img.onload = resize;\n      img.src = src;\n      resize();\n    }\n\n    resize();\n    img.style['object-position'] = `-${x}px -${y}px`\n  }\n}\n\ndefineCustomElement('media-thumbnail-preview', MediaThumbnailPreviewElement);\n\nexport default MediaThumbnailPreviewElement;\n", "import { MediaUIAttributes } from './constants.js';\nimport { nouns } from './labels/labels.js';\nimport { defineCustomElement } from './utils/defineCustomElement.js';\nimport {\n  Window as window,\n  Document as document,\n} from './utils/server-safe-globals.js';\n// Todo: Use data locals: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleTimeString\n\nconst template = document.createElement('template');\n\nconst loadingIndicatorIcon = `\n<svg aria-hidden=\"true\" viewBox=\"0 0 100 100\">\n  <path d=\"M73,50c0-12.7-10.3-23-23-23S27,37.3,27,50 M30.9,50c0-10.5,8.5-19.1,19.1-19.1S69.1,39.5,69.1,50\">\n    <animateTransform\n       attributeName=\"transform\"\n       attributeType=\"XML\"\n       type=\"rotate\"\n       dur=\"1s\"\n       from=\"0 50 50\"\n       to=\"360 50 50\"\n       repeatCount=\"indefinite\" />\n  </path>\n</svg>\n`;\n\ntemplate.innerHTML = `\n<style>\n:host {\n  display: inline-block;\n  vertical-align: middle;\n  box-sizing: border-box;\n}\n\n#status {\n  color: rgba(0,0,0,0);\n  width: 0px;\n  height: 0px;\n}\n\n:host slot[name=loading] > *,\n:host ::slotted([slot=loading]) {\n  opacity: 1;\n  transition: opacity 0.15s;\n}\n\n:host(:not([is-loading])) slot[name=loading] > *, \n:host(:not([is-loading])) ::slotted([slot=loading]) {\n  opacity: 0;\n}\n\n:host(:not([is-loading])) #status {\n  display: none;\n}\n\nsvg, img, ::slotted(svg), ::slotted(img) {\n  width: var(--media-loading-icon-width, 100px);\n  height: var(--media-loading-icon-height);\n  fill: var(--media-icon-color, #fff);\n  vertical-align: middle;\n}\n</style>\n\n<slot name=\"loading\">${loadingIndicatorIcon}</slot>\n<div id=\"status\" role=\"status\" aria-live=\"polite\">${nouns.MEDIA_LOADING()}</div>\n`;\n\nconst DEFAULT_LOADING_DELAY = 500;\n\nclass MediaLoadingIndicator extends window.HTMLElement {\n  static get observedAttributes() {\n    return [\n      MediaUIAttributes.MEDIA_CONTROLLER,\n      MediaUIAttributes.MEDIA_PAUSED,\n      MediaUIAttributes.MEDIA_LOADING,\n      'loading-delay',\n    ];\n  }\n\n  constructor() {\n    super();\n\n    const shadow = this.attachShadow({ mode: 'open' });\n    const indicatorHTML = template.content.cloneNode(true);\n    shadow.appendChild(indicatorHTML);\n  }\n\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    if (\n      attrName === MediaUIAttributes.MEDIA_LOADING ||\n      attrName === MediaUIAttributes.MEDIA_PAUSED\n    ) {\n      const isPaused =\n        this.getAttribute(MediaUIAttributes.MEDIA_PAUSED) != undefined;\n      const isMediaLoading =\n        this.getAttribute(MediaUIAttributes.MEDIA_LOADING) != undefined;\n      const isLoading = !isPaused && isMediaLoading;\n      if (!isLoading) {\n        if (this.loadingDelayHandle) {\n          clearTimeout(this.loadingDelayHandle);\n          this.loadingDelayHandle = undefined;\n        }\n        this.removeAttribute('is-loading');\n      } else if (!this.loadingDelayHandle && isLoading) {\n        const loadingDelay = +(\n          this.getAttribute('loading-delay') ?? DEFAULT_LOADING_DELAY\n        );\n        this.loadingDelayHandle = setTimeout(() => {\n          this.setAttribute('is-loading', '');\n          this.loadingDelayHandle = undefined;\n        }, loadingDelay);\n      }\n    } else if (attrName === MediaUIAttributes.MEDIA_CONTROLLER) {\n      if (oldValue) {\n        const mediaControllerEl = document.getElementById(oldValue);\n        mediaControllerEl?.unassociateElement?.(this);\n      }\n      if (newValue) {\n        const mediaControllerEl = document.getElementById(newValue);\n        mediaControllerEl?.associateElement?.(this);\n      }\n    }\n  }\n\n  connectedCallback() {\n    const mediaControllerId = this.getAttribute(\n      MediaUIAttributes.MEDIA_CONTROLLER\n    );\n    if (mediaControllerId) {\n      const mediaControllerEl = document.getElementById(mediaControllerId);\n      mediaControllerEl?.associateElement?.(this);\n    }\n  }\n\n  disconnectedCallback() {\n    if (this.loadingDelayHandle) {\n      clearTimeout(this.loadingDelayHandle);\n      this.loadingDelayHandle = undefined;\n    }\n    const mediaControllerSelector = this.getAttribute(\n      MediaUIAttributes.MEDIA_CONTROLLER\n    );\n    if (mediaControllerSelector) {\n      const mediaControllerEl = document.getElementById(mediaControllerId);\n      mediaControllerEl?.unassociateElement?.(this);\n    }\n  }\n}\n\ndefineCustomElement('media-loading-indicator', MediaLoadingIndicator);\n\nexport default MediaLoadingIndicator;\n", "import { defineCustomElement } from './utils/defineCustomElement.js';\nimport {\n  Window as window,\n  Document as document,\n} from './utils/server-safe-globals.js';\n\nconst template = document.createElement('template');\n\ntemplate.innerHTML = `\n  <style>\n    :host {\n\n    }\n  </style>\n\n  <slot></slot>\n`;\n\nclass MediaTitleBar extends window.HTMLElement {\n  constructor() {\n    super();\n\n    this.attachShadow({ mode: 'open' });\n    this.shadowRoot.appendChild(template.content.cloneNode(true));\n  }\n}\n\ndefineCustomElement('media-title-bar', MediaTitleBar);\n\nexport default MediaTitleBar;\n", "import { Window as window } from './utils/server-safe-globals.js';\nimport MediaChromeRange from './media-chrome-range.js';\nimport { defineCustomElement } from './utils/defineCustomElement.js';\nimport { MediaUIAttributes, MediaUIEvents } from './constants.js';\nimport { nouns } from './labels/labels.js';\n\nconst DEFAULT_MAX_VOLUME = 100;\n\nconst toVolume = (el) => {\n  const muted = el.getAttribute(MediaUIAttributes.MEDIA_MUTED) != null;\n  if (muted) return 0;\n\n  const volume = +(el.getAttribute(MediaUIAttributes.MEDIA_VOLUME) ?? 1);\n  return Math.round(volume * el.range.max);\n};\n\nconst formatAsPercentString = ({ value, max }) =>\n  `${Math.round((value / max) * 100)}%`;\n\nclass MediaVolumeRange extends MediaChromeRange {\n  static get observedAttributes() {\n    return [\n      ...super.observedAttributes,\n      MediaUIAttributes.MEDIA_VOLUME,\n      MediaUIAttributes.MEDIA_MUTED,\n      MediaUIAttributes.MEDIA_VOLUME_UNAVAILABLE,\n    ];\n  }\n\n  constructor() {\n    super();\n\n    this.range.max = DEFAULT_MAX_VOLUME;\n\n    this.range.addEventListener('input', () => {\n      const newVolume = this.range.value / this.range.max;\n      const detail = newVolume;\n      const evt = new window.CustomEvent(MediaUIEvents.MEDIA_VOLUME_REQUEST, {\n        composed: true,\n        bubbles: true,\n        detail,\n      });\n      this.dispatchEvent(evt);\n    });\n  }\n\n  connectedCallback() {\n    this.range.setAttribute('aria-label', nouns.VOLUME());\n    super.connectedCallback();\n  }\n\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    if (\n      attrName === MediaUIAttributes.MEDIA_VOLUME ||\n      attrName === MediaUIAttributes.MEDIA_MUTED\n    ) {\n      const newVolume = toVolume(this);\n      this.range.value = newVolume;\n      this.range.setAttribute(\n        'aria-valuetext',\n        formatAsPercentString(this.range)\n      );\n      this.updateBar();\n    }\n    super.attributeChangedCallback(attrName, oldValue, newValue);\n  }\n}\n\ndefineCustomElement('media-volume-range', MediaVolumeRange);\n\nexport default MediaVolumeRange;\n", "import { defineCustomElement } from '../utils/defineCustomElement.js';\nimport {\n  Window as window,\n  Document as document,\n} from '../utils/server-safe-globals.js';\n\nclass MediaTheme extends window.HTMLElement {\n  static template = '';\n\n  constructor() {\n    super();\n    this.attachShadow({ mode: 'open' });\n  }\n\n  connectedCallback() {\n    this.render();\n  }\n\n  render() {\n    this.shadowRoot.textContent = '';\n\n    const template = document.createElement('template');\n    template.innerHTML = this.constructor.template;\n\n    // Clone the template in the shadow dom\n    this.shadowRoot.append(template.content.cloneNode(true));\n  }\n\n  get mediaController() {\n    // Expose the media controller if API access is needed\n    return this.shadowRoot.querySelector('media-controller');\n  }\n}\n\ndefineCustomElement('media-theme', MediaTheme);\n\nexport default MediaTheme;\n"],
  "mappings": "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",
  "names": []
}
