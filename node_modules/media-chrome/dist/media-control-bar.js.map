{
  "version": 3,
  "sources": ["../src/js/media-control-bar.js"],
  "sourcesContent": ["/*\n  <media-control-bar>\n\n  Auto position contorls in a line and set some base colors\n*/\nimport { MediaUIAttributes } from './constants.js';\nimport { defineCustomElement } from './utils/defineCustomElement.js';\nimport {\n  Window as window,\n  Document as document,\n} from './utils/server-safe-globals.js';\n\nconst template = document.createElement('template');\n\ntemplate.innerHTML = `\n  <style>\n    :host {\n      /* Need position to display above video for some reason */\n      box-sizing: border-box;\n      display: inline-flex;\n      color: var(--media-icon-color, #eee);\n      --media-loading-icon-width: 44px;\n    }\n\n    media-time-range,\n    ::slotted(media-time-range),\n    ::slotted(media-progress-range),\n    ::slotted(media-clip-selector) {\n      flex-grow: 1;\n    }\n  </style>\n\n  <slot></slot>\n`;\n\nclass MediaControlBar extends window.HTMLElement {\n  static get observedAttributes() {\n    return [MediaUIAttributes.MEDIA_CONTROLLER];\n  }\n\n  constructor() {\n    super();\n\n    this.attachShadow({ mode: 'open' });\n    this.shadowRoot.appendChild(template.content.cloneNode(true));\n  }\n\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    if (attrName === MediaUIAttributes.MEDIA_CONTROLLER) {\n      if (oldValue) {\n        const mediaControllerEl = document.getElementById(oldValue);\n        mediaControllerEl?.unassociateElement?.(this);\n      }\n      if (newValue) {\n        const mediaControllerEl = document.getElementById(newValue);\n        mediaControllerEl?.associateElement?.(this);\n      }\n    }\n  }\n\n  connectedCallback() {\n    const mediaControllerId = this.getAttribute(\n      MediaUIAttributes.MEDIA_CONTROLLER\n    );\n    if (mediaControllerId) {\n      const mediaControllerEl = document.getElementById(mediaControllerId);\n      mediaControllerEl?.associateElement?.(this);\n    }\n  }\n\n  disconnectedCallback() {\n    const mediaControllerSelector = this.getAttribute(\n      MediaUIAttributes.MEDIA_CONTROLLER\n    );\n    if (mediaControllerSelector) {\n      const mediaControllerEl = document.getElementById(mediaControllerId);\n      mediaControllerEl?.unassociateElement?.(this);\n    }\n  }\n}\n\ndefineCustomElement('media-control-bar', MediaControlBar);\n\nexport default MediaControlBar;\n"],
  "mappings": "AAKA,mDACA,qEACA,sEAKA,KAAM,GAAW,EAAS,cAAc,YAExC,EAAS,UAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAqBrB,eAA8B,GAAO,WAAY,WACpC,qBAAqB,CAC9B,MAAO,CAAC,EAAkB,kBAG5B,aAAc,CACZ,QAEA,KAAK,aAAa,CAAE,KAAM,SAC1B,KAAK,WAAW,YAAY,EAAS,QAAQ,UAAU,KAGzD,yBAAyB,EAAU,EAAU,EAAU,CA/CzD,QAgDI,GAAI,IAAa,EAAkB,iBAAkB,CACnD,GAAI,EAAU,CACZ,KAAM,GAAoB,EAAS,eAAe,GAClD,oBAAmB,qBAAnB,eAAwC,MAE1C,GAAI,EAAU,CACZ,KAAM,GAAoB,EAAS,eAAe,GAClD,oBAAmB,mBAAnB,eAAsC,QAK5C,mBAAoB,CA5DtB,MA6DI,KAAM,GAAoB,KAAK,aAC7B,EAAkB,kBAEpB,GAAI,EAAmB,CACrB,KAAM,GAAoB,EAAS,eAAe,GAClD,oBAAmB,mBAAnB,eAAsC,OAI1C,sBAAuB,CAtEzB,MA0EI,GAHgC,KAAK,aACnC,EAAkB,kBAES,CAC3B,KAAM,GAAoB,EAAS,eAAe,mBAClD,oBAAmB,qBAAnB,eAAwC,QAK9C,EAAoB,oBAAqB,GAEzC,GAAO,GAAQ",
  "names": []
}
