{
  "version": 3,
  "sources": ["../src/js/media-loading-indicator.js"],
  "sourcesContent": ["import { MediaUIAttributes } from './constants.js';\nimport { nouns } from './labels/labels.js';\nimport { defineCustomElement } from './utils/defineCustomElement.js';\nimport {\n  Window as window,\n  Document as document,\n} from './utils/server-safe-globals.js';\n// Todo: Use data locals: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleTimeString\n\nconst template = document.createElement('template');\n\nconst loadingIndicatorIcon = `\n<svg aria-hidden=\"true\" viewBox=\"0 0 100 100\">\n  <path d=\"M73,50c0-12.7-10.3-23-23-23S27,37.3,27,50 M30.9,50c0-10.5,8.5-19.1,19.1-19.1S69.1,39.5,69.1,50\">\n    <animateTransform\n       attributeName=\"transform\"\n       attributeType=\"XML\"\n       type=\"rotate\"\n       dur=\"1s\"\n       from=\"0 50 50\"\n       to=\"360 50 50\"\n       repeatCount=\"indefinite\" />\n  </path>\n</svg>\n`;\n\ntemplate.innerHTML = `\n<style>\n:host {\n  display: inline-block;\n  vertical-align: middle;\n  box-sizing: border-box;\n}\n\n#status {\n  color: rgba(0,0,0,0);\n  width: 0px;\n  height: 0px;\n}\n\n:host slot[name=loading] > *,\n:host ::slotted([slot=loading]) {\n  opacity: 1;\n  transition: opacity 0.15s;\n}\n\n:host(:not([is-loading])) slot[name=loading] > *, \n:host(:not([is-loading])) ::slotted([slot=loading]) {\n  opacity: 0;\n}\n\n:host(:not([is-loading])) #status {\n  display: none;\n}\n\nsvg, img, ::slotted(svg), ::slotted(img) {\n  width: var(--media-loading-icon-width, 100px);\n  height: var(--media-loading-icon-height);\n  fill: var(--media-icon-color, #fff);\n  vertical-align: middle;\n}\n</style>\n\n<slot name=\"loading\">${loadingIndicatorIcon}</slot>\n<div id=\"status\" role=\"status\" aria-live=\"polite\">${nouns.MEDIA_LOADING()}</div>\n`;\n\nconst DEFAULT_LOADING_DELAY = 500;\n\nclass MediaLoadingIndicator extends window.HTMLElement {\n  static get observedAttributes() {\n    return [\n      MediaUIAttributes.MEDIA_CONTROLLER,\n      MediaUIAttributes.MEDIA_PAUSED,\n      MediaUIAttributes.MEDIA_LOADING,\n      'loading-delay',\n    ];\n  }\n\n  constructor() {\n    super();\n\n    const shadow = this.attachShadow({ mode: 'open' });\n    const indicatorHTML = template.content.cloneNode(true);\n    shadow.appendChild(indicatorHTML);\n  }\n\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    if (\n      attrName === MediaUIAttributes.MEDIA_LOADING ||\n      attrName === MediaUIAttributes.MEDIA_PAUSED\n    ) {\n      const isPaused =\n        this.getAttribute(MediaUIAttributes.MEDIA_PAUSED) != undefined;\n      const isMediaLoading =\n        this.getAttribute(MediaUIAttributes.MEDIA_LOADING) != undefined;\n      const isLoading = !isPaused && isMediaLoading;\n      if (!isLoading) {\n        if (this.loadingDelayHandle) {\n          clearTimeout(this.loadingDelayHandle);\n          this.loadingDelayHandle = undefined;\n        }\n        this.removeAttribute('is-loading');\n      } else if (!this.loadingDelayHandle && isLoading) {\n        const loadingDelay = +(\n          this.getAttribute('loading-delay') ?? DEFAULT_LOADING_DELAY\n        );\n        this.loadingDelayHandle = setTimeout(() => {\n          this.setAttribute('is-loading', '');\n          this.loadingDelayHandle = undefined;\n        }, loadingDelay);\n      }\n    } else if (attrName === MediaUIAttributes.MEDIA_CONTROLLER) {\n      if (oldValue) {\n        const mediaControllerEl = document.getElementById(oldValue);\n        mediaControllerEl?.unassociateElement?.(this);\n      }\n      if (newValue) {\n        const mediaControllerEl = document.getElementById(newValue);\n        mediaControllerEl?.associateElement?.(this);\n      }\n    }\n  }\n\n  connectedCallback() {\n    const mediaControllerId = this.getAttribute(\n      MediaUIAttributes.MEDIA_CONTROLLER\n    );\n    if (mediaControllerId) {\n      const mediaControllerEl = document.getElementById(mediaControllerId);\n      mediaControllerEl?.associateElement?.(this);\n    }\n  }\n\n  disconnectedCallback() {\n    if (this.loadingDelayHandle) {\n      clearTimeout(this.loadingDelayHandle);\n      this.loadingDelayHandle = undefined;\n    }\n    const mediaControllerSelector = this.getAttribute(\n      MediaUIAttributes.MEDIA_CONTROLLER\n    );\n    if (mediaControllerSelector) {\n      const mediaControllerEl = document.getElementById(mediaControllerId);\n      mediaControllerEl?.unassociateElement?.(this);\n    }\n  }\n}\n\ndefineCustomElement('media-loading-indicator', MediaLoadingIndicator);\n\nexport default MediaLoadingIndicator;\n"],
  "mappings": "AAAA,mDACA,2CACA,qEACA,sEAMA,KAAM,GAAW,EAAS,cAAc,YAElC,EAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAe7B,EAAS,UAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAqCE;AAAA,oDAC6B,EAAM;AAAA,EAG1D,KAAM,GAAwB,IAE9B,eAAoC,GAAO,WAAY,WAC1C,qBAAqB,CAC9B,MAAO,CACL,EAAkB,iBAClB,EAAkB,aAClB,EAAkB,cAClB,iBAIJ,aAAc,CACZ,QAEA,KAAM,GAAS,KAAK,aAAa,CAAE,KAAM,SACnC,EAAgB,EAAS,QAAQ,UAAU,IACjD,EAAO,YAAY,GAGrB,yBAAyB,EAAU,EAAU,EAAU,CAvFzD,UAwFI,GACE,IAAa,EAAkB,eAC/B,IAAa,EAAkB,aAC/B,CACA,KAAM,GACJ,KAAK,aAAa,EAAkB,eAAiB,KACjD,EACJ,KAAK,aAAa,EAAkB,gBAAkB,KAClD,EAAY,CAAC,GAAY,EAC/B,GAAI,CAAC,EACH,AAAI,KAAK,oBACP,cAAa,KAAK,oBAClB,KAAK,mBAAqB,QAE5B,KAAK,gBAAgB,sBACZ,CAAC,KAAK,oBAAsB,EAAW,CAChD,KAAM,GAAe,CACnB,SAAK,aAAa,mBAAlB,OAAsC,GAExC,KAAK,mBAAqB,WAAW,IAAM,CACzC,KAAK,aAAa,aAAc,IAChC,KAAK,mBAAqB,QACzB,YAEI,IAAa,EAAkB,iBAAkB,CAC1D,GAAI,EAAU,CACZ,KAAM,GAAoB,EAAS,eAAe,GAClD,oBAAmB,qBAAnB,eAAwC,MAE1C,GAAI,EAAU,CACZ,KAAM,GAAoB,EAAS,eAAe,GAClD,oBAAmB,mBAAnB,eAAsC,QAK5C,mBAAoB,CA5HtB,MA6HI,KAAM,GAAoB,KAAK,aAC7B,EAAkB,kBAEpB,GAAI,EAAmB,CACrB,KAAM,GAAoB,EAAS,eAAe,GAClD,oBAAmB,mBAAnB,eAAsC,OAI1C,sBAAuB,CAtIzB,MA8II,GAPI,KAAK,oBACP,cAAa,KAAK,oBAClB,KAAK,mBAAqB,QAEI,KAAK,aACnC,EAAkB,kBAES,CAC3B,KAAM,GAAoB,EAAS,eAAe,mBAClD,oBAAmB,qBAAnB,eAAwC,QAK9C,EAAoB,0BAA2B,GAE/C,GAAO,GAAQ",
  "names": []
}
