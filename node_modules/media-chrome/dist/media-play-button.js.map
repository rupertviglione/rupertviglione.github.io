{
  "version": 3,
  "sources": ["../src/js/media-play-button.js"],
  "sourcesContent": ["import MediaChromeButton from './media-chrome-button.js';\nimport {\n  Window as window,\n  Document as document,\n} from './utils/server-safe-globals.js';\nimport { defineCustomElement } from './utils/defineCustomElement.js';\nimport { MediaUIEvents, MediaUIAttributes } from './constants.js';\nimport { verbs } from './labels/labels.js';\n\nconst playIcon =\n  '<svg aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path class=\"icon\" d=\"M8 5v14l11-7z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>';\nconst pauseIcon =\n  '<svg aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path class=\"icon\" d=\"M6 19h4V5H6v14zm8-14v14h4V5h-4z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>';\n\nconst slotTemplate = document.createElement('template');\nslotTemplate.innerHTML = `\n  <style>\n  :host([${MediaUIAttributes.MEDIA_PAUSED}]) slot[name=pause] > *, \n  :host([${MediaUIAttributes.MEDIA_PAUSED}]) ::slotted([slot=pause]) {\n    display: none;\n  }\n\n  :host(:not([${MediaUIAttributes.MEDIA_PAUSED}])) slot[name=play] > *, \n  :host(:not([${MediaUIAttributes.MEDIA_PAUSED}])) ::slotted([slot=play]) {\n    display: none;\n  }\n  </style>\n\n  <slot name=\"play\">${playIcon}</slot>\n  <slot name=\"pause\">${pauseIcon}</slot>\n`;\n\nconst updateAriaLabel = (el) => {\n  const paused = el.getAttribute(MediaUIAttributes.MEDIA_PAUSED) != null;\n  const label = paused ? verbs.PLAY() : verbs.PAUSE();\n  el.setAttribute('aria-label', label);\n};\n\nclass MediaPlayButton extends MediaChromeButton {\n  static get observedAttributes() {\n    return [...super.observedAttributes, MediaUIAttributes.MEDIA_PAUSED];\n  }\n\n  constructor(options = {}) {\n    super({ slotTemplate, ...options });\n  }\n\n  connectedCallback() {\n    updateAriaLabel(this);\n    super.connectedCallback();\n  }\n\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    if (attrName === MediaUIAttributes.MEDIA_PAUSED) {\n      updateAriaLabel(this);\n    }\n    super.attributeChangedCallback(attrName, oldValue, newValue);\n  }\n\n  handleClick(_e) {\n    const eventName =\n      this.getAttribute(MediaUIAttributes.MEDIA_PAUSED) != null\n        ? MediaUIEvents.MEDIA_PLAY_REQUEST\n        : MediaUIEvents.MEDIA_PAUSE_REQUEST;\n    this.dispatchEvent(\n      new window.CustomEvent(eventName, { composed: true, bubbles: true })\n    );\n  }\n}\n\ndefineCustomElement('media-play-button', MediaPlayButton);\n\nexport default MediaPlayButton;\n"],
  "mappings": "AAAA,wCACA,sEAIA,qEACA,sEACA,2CAEA,KAAM,GACJ,mKACI,EACJ,qLAEI,EAAe,EAAS,cAAc,YAC5C,EAAa,UAAY;AAAA;AAAA,WAEd,EAAkB;AAAA,WAClB,EAAkB;AAAA;AAAA;AAAA;AAAA,gBAIb,EAAkB;AAAA,gBAClB,EAAkB;AAAA;AAAA;AAAA;AAAA;AAAA,sBAKZ;AAAA,uBACC;AAAA,EAGvB,KAAM,GAAkB,AAAC,GAAO,CAE9B,KAAM,GAAQ,AADC,EAAG,aAAa,EAAkB,eAAiB,KAC3C,EAAM,OAAS,EAAM,QAC5C,EAAG,aAAa,aAAc,IAGhC,eAA8B,EAAkB,WACnC,qBAAqB,CAC9B,MAAO,CAAC,GAAG,MAAM,mBAAoB,EAAkB,cAGzD,YAAY,EAAU,GAAI,CACxB,MAAM,CAAE,kBAAiB,IAG3B,mBAAoB,CAClB,EAAgB,MAChB,MAAM,oBAGR,yBAAyB,EAAU,EAAU,EAAU,CACrD,AAAI,IAAa,EAAkB,cACjC,EAAgB,MAElB,MAAM,yBAAyB,EAAU,EAAU,GAGrD,YAAY,EAAI,CACd,KAAM,GACJ,KAAK,aAAa,EAAkB,eAAiB,KACjD,EAAc,mBACd,EAAc,oBACpB,KAAK,cACH,GAAI,GAAO,YAAY,EAAW,CAAE,SAAU,GAAM,QAAS,OAKnE,EAAoB,oBAAqB,GAEzC,GAAO,GAAQ",
  "names": []
}
