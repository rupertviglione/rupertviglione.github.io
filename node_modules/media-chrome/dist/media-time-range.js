import I from"./media-chrome-range.js";import{defineCustomElement as M}from"./utils/defineCustomElement.js";import{Window as o,Document as T}from"./utils/server-safe-globals.js";import{MediaUIEvents as h,MediaUIAttributes as a}from"./constants.js";import{nouns as D}from"./labels/labels.js";import{formatAsTimePhrase as f}from"./utils/time.js";const R="video not loaded, unknown time.",E=m=>{const e=m.range,t=f(+e.value),i=f(+e.max),s=t&&i?`${t} of ${i}`:R;e.setAttribute("aria-valuetext",s)},b=T.createElement("template");b.innerHTML=`
  <style>
    #thumbnailContainer {
      display: none;
    }

    media-thumbnail-preview {
      /* Scale the thumbnail preview to 50% and reposition appropriately to not take up too much real-estate. */
      transform: scale(0.5) translateY(50%) translateX(-100%);
      position: absolute;
      bottom: calc(100% + 5px);
      border: 2px solid #fff;
      border-radius: 2px;
      background-color: #000;
    }

    /* Can't get this working. Trying a downward triangle. */
    /* media-thumbnail-preview::after {
      content: "";
      display: block;
      width: 300px;
      height: 300px;
      margin: 100px;
      background-color: #ff0;
    } */

    :host([${a.MEDIA_PREVIEW_IMAGE}]:hover) #thumbnailContainer {
      display: block;
      animation: fadeIn ease 0.5s;
    }

    @keyframes fadeIn {
      0% {
        /* transform-origin: bottom center; */
        /* transform: scale(0.7); */
        margin-top: 10px;
        opacity: 0;
      }
      100% {
        /* transform-origin: bottom center; */
        /* transform: scale(1); */
        margin-top: 0;
        opacity: 1;
      }
    }
  </style>
  <div id="thumbnailContainer">
    <media-thumbnail-preview></media-thumbnail-preview>
  </div>
`;class p extends I{static get observedAttributes(){return[...super.observedAttributes,"thumbnails",a.MEDIA_DURATION,a.MEDIA_CURRENT_TIME,a.MEDIA_PREVIEW_IMAGE,a.MEDIA_BUFFERED]}constructor(){super();this.shadowRoot.appendChild(b.content.cloneNode(!0)),this.range.addEventListener("input",()=>{const t=this.range.value,i=new o.CustomEvent(h.MEDIA_SEEK_REQUEST,{composed:!0,bubbles:!0,detail:t});this.dispatchEvent(i)}),this.enableThumbnails()}connectedCallback(){this.range.setAttribute("aria-label",D.SEEK()),super.connectedCallback()}attributeChangedCallback(e,t,i){e===a.MEDIA_CURRENT_TIME&&(this.range.value=+i,E(this),this.updateBar()),e===a.MEDIA_DURATION&&(this.range.max=Math.floor(+i),E(this),this.updateBar()),e===a.MEDIA_BUFFERED&&this.updateBar(),super.attributeChangedCallback(e,t,i)}get mediaDuration(){return+this.getAttribute(a.MEDIA_DURATION)}get mediaCurrentTime(){return+this.getAttribute(a.MEDIA_CURRENT_TIME)}get mediaBuffered(){const e=this.getAttribute(a.MEDIA_BUFFERED);if(e)return e.split(" ").map(t=>t.split(":"))}getBarColors(){let e=super.getBarColors();if(!this.mediaBuffered||!this.mediaBuffered.length||this.mediaDuration<=0)return e;const t=this.mediaBuffered;let i=0;for(const[l,u]of t)if(this.mediaCurrentTime>=l&&this.mediaCurrentTime<=u){i=u;break}const s=i/this.mediaDuration*100;return e.splice(1,0,["var(--media-time-buffered-color, #777)",s]),e}enableThumbnails(){this.thumbnailPreview=this.shadowRoot.querySelector("media-thumbnail-preview"),this.shadowRoot.querySelector("#thumbnailContainer").classList.add("enabled");let t;const i=()=>{t=c=>{const d=+this.getAttribute(a.MEDIA_DURATION);if(!d)return;const n=this.range.getBoundingClientRect();let r=(c.clientX-n.left)/n.width;r=Math.max(0,Math.min(1,r));const g=n.left-this.getBoundingClientRect().left+r*n.width;this.thumbnailPreview.style.left=`${g}px`;const v=r*d,A=new o.CustomEvent(h.MEDIA_PREVIEW_REQUEST,{composed:!0,bubbles:!0,detail:v});this.dispatchEvent(A)},o.addEventListener("mousemove",t,!1)},s=()=>{o.removeEventListener("mousemove",t)};let l=!1,u=c=>{const d=this.getAttribute(a.MEDIA_DURATION);if(!l&&d){l=!0,i();let n=r=>{r.target!=this&&!this.contains(r.target)&&(o.removeEventListener("mousemove",n),l=!1,s())};o.addEventListener("mousemove",n,!1)}};this.addEventListener("mousemove",u,!1)}}M("media-time-range",p);var P=p;export{P as default};
//# sourceMappingURL=media-time-range.js.map
