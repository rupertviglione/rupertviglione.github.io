{
  "version": 3,
  "sources": ["../src/js/media-time-range.js"],
  "sourcesContent": ["import MediaChromeRange from './media-chrome-range.js';\nimport { defineCustomElement } from './utils/defineCustomElement.js';\nimport {\n  Window as window,\n  Document as document,\n} from './utils/server-safe-globals.js';\nimport { MediaUIEvents, MediaUIAttributes } from './constants.js';\nimport { nouns } from './labels/labels.js';\nimport { formatAsTimePhrase } from './utils/time.js';\n\nconst DEFAULT_MISSING_TIME_PHRASE = 'video not loaded, unknown time.';\n\nconst updateAriaValueText = (el) => {\n  const range = el.range;\n  const currentTimePhrase = formatAsTimePhrase(+range.value);\n  const totalTimePhrase = formatAsTimePhrase(+range.max);\n  const fullPhrase = !(currentTimePhrase && totalTimePhrase)\n    ? DEFAULT_MISSING_TIME_PHRASE\n    : `${currentTimePhrase} of ${totalTimePhrase}`;\n  range.setAttribute('aria-valuetext', fullPhrase);\n};\n\nconst template = document.createElement('template');\n\ntemplate.innerHTML = `\n  <style>\n    #thumbnailContainer {\n      display: none;\n    }\n\n    media-thumbnail-preview {\n      /* Scale the thumbnail preview to 50% and reposition appropriately to not take up too much real-estate. */\n      transform: scale(0.5) translateY(50%) translateX(-100%);\n      position: absolute;\n      bottom: calc(100% + 5px);\n      border: 2px solid #fff;\n      border-radius: 2px;\n      background-color: #000;\n    }\n\n    /* Can't get this working. Trying a downward triangle. */\n    /* media-thumbnail-preview::after {\n      content: \"\";\n      display: block;\n      width: 300px;\n      height: 300px;\n      margin: 100px;\n      background-color: #ff0;\n    } */\n\n    :host([${MediaUIAttributes.MEDIA_PREVIEW_IMAGE}]:hover) #thumbnailContainer {\n      display: block;\n      animation: fadeIn ease 0.5s;\n    }\n\n    @keyframes fadeIn {\n      0% {\n        /* transform-origin: bottom center; */\n        /* transform: scale(0.7); */\n        margin-top: 10px;\n        opacity: 0;\n      }\n      100% {\n        /* transform-origin: bottom center; */\n        /* transform: scale(1); */\n        margin-top: 0;\n        opacity: 1;\n      }\n    }\n  </style>\n  <div id=\"thumbnailContainer\">\n    <media-thumbnail-preview></media-thumbnail-preview>\n  </div>\n`;\n\nclass MediaTimeRange extends MediaChromeRange {\n  static get observedAttributes() {\n    return [\n      ...super.observedAttributes,\n      'thumbnails',\n      MediaUIAttributes.MEDIA_DURATION,\n      MediaUIAttributes.MEDIA_CURRENT_TIME,\n      MediaUIAttributes.MEDIA_PREVIEW_IMAGE,\n      MediaUIAttributes.MEDIA_BUFFERED,\n    ];\n  }\n\n  constructor() {\n    super();\n\n    this.shadowRoot.appendChild(template.content.cloneNode(true));\n\n    this.range.addEventListener('input', () => {\n      const newTime = this.range.value;\n      const detail = newTime;\n      const evt = new window.CustomEvent(MediaUIEvents.MEDIA_SEEK_REQUEST, {\n        composed: true,\n        bubbles: true,\n        detail,\n      });\n      this.dispatchEvent(evt);\n    });\n\n    // Come back to this feature\n    // this.playIfNotReady = e => {\n    //   this.range.removeEventListener('change', this.playIfNotReady);\n    //   const media = this.media;\n    //   media.play().then(this.setMediaTimeWithRange);\n    // };\n\n    this.enableThumbnails();\n  }\n\n  connectedCallback() {\n    this.range.setAttribute('aria-label', nouns.SEEK());\n    super.connectedCallback();\n  }\n\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    if (attrName === MediaUIAttributes.MEDIA_CURRENT_TIME) {\n      this.range.value = +newValue;\n      updateAriaValueText(this);\n      this.updateBar();\n    }\n    if (attrName === MediaUIAttributes.MEDIA_DURATION) {\n      // Since our range's step is 1, floor the max value to ensure reasonable rendering\n      this.range.max = Math.floor(+newValue);\n      updateAriaValueText(this);\n      this.updateBar();\n    }\n    if (attrName === MediaUIAttributes.MEDIA_BUFFERED) {\n      this.updateBar();\n    }\n    super.attributeChangedCallback(attrName, oldValue, newValue);\n  }\n\n  // mediaBufferedSet(bufferedRanges) {\n  //   this.updateBar();\n  // }\n\n  // mediaSetCallback(media) {\n  //   // Come back to this...\n  //   // If readyState is supported, and the range is used before\n  //   // the media is ready, use the play promise to set the time.\n  //   // if (media.readyState !== undefined && media.readyState == 0) {\n  //   //   // range.addEventListener('change', this.playIfNotReady);\n  //   // }\n  // }\n\n  // mediaUnsetCallback(media) {\n  //   // this.range.removeEventListener('change', this.playIfNotReady);\n  //   // TODO: Reset value after media is unset\n  // }\n\n  get mediaDuration() {\n    return +this.getAttribute(MediaUIAttributes.MEDIA_DURATION);\n  }\n\n  get mediaCurrentTime() {\n    return +this.getAttribute(MediaUIAttributes.MEDIA_CURRENT_TIME);\n  }\n\n  get mediaBuffered() {\n    const buffered = this.getAttribute(MediaUIAttributes.MEDIA_BUFFERED);\n    if (buffered) {\n      return buffered.split(' ').map((timePair) => timePair.split(':'));\n    }\n  }\n\n  /* Add a buffered progress bar */\n  getBarColors() {\n    let colorsArray = super.getBarColors();\n\n    if (\n      !this.mediaBuffered ||\n      !this.mediaBuffered.length ||\n      this.mediaDuration <= 0\n    ) {\n      return colorsArray;\n    }\n\n    const buffered = this.mediaBuffered;\n    let currentBufferedEnd = 0;\n    for (const [start, end] of buffered) {\n      if (this.mediaCurrentTime >= start && this.mediaCurrentTime <= end) {\n        currentBufferedEnd = end;\n        break;\n      }\n    }\n\n    const buffPercent = (currentBufferedEnd / this.mediaDuration) * 100;\n    colorsArray.splice(1, 0, [\n      'var(--media-time-buffered-color, #777)',\n      buffPercent,\n    ]);\n    return colorsArray;\n  }\n\n  enableThumbnails() {\n    this.thumbnailPreview = this.shadowRoot.querySelector(\n      'media-thumbnail-preview'\n    );\n    const thumbnailContainer = this.shadowRoot.querySelector(\n      '#thumbnailContainer'\n    );\n    thumbnailContainer.classList.add('enabled');\n\n    let mouseMoveHandler;\n    const trackMouse = () => {\n      mouseMoveHandler = (evt) => {\n        const duration = +this.getAttribute(MediaUIAttributes.MEDIA_DURATION);\n\n        // If no duration we can't calculate which time to show\n        if (!duration) return;\n\n        // Get mouse position percent\n        const rangeRect = this.range.getBoundingClientRect();\n        let mousePercent = (evt.clientX - rangeRect.left) / rangeRect.width;\n\n        // Lock between 0 and 1\n        mousePercent = Math.max(0, Math.min(1, mousePercent));\n\n        // Get thumbnail center position\n        const leftPadding = rangeRect.left - this.getBoundingClientRect().left;\n        const thumbnailLeft = leftPadding + mousePercent * rangeRect.width;\n\n        this.thumbnailPreview.style.left = `${thumbnailLeft}px`;\n\n        const detail = mousePercent * duration;\n        const mediaPreviewEvt = new window.CustomEvent(\n          MediaUIEvents.MEDIA_PREVIEW_REQUEST,\n          { composed: true, bubbles: true, detail }\n        );\n        this.dispatchEvent(mediaPreviewEvt);\n      };\n      window.addEventListener('mousemove', mouseMoveHandler, false);\n    };\n\n    const stopTrackingMouse = () => {\n      window.removeEventListener('mousemove', mouseMoveHandler);\n    };\n\n    // Trigger when the mouse moves over the range\n    let rangeEntered = false;\n    let rangeMouseMoveHander = (evt) => {\n      const mediaDurationStr = this.getAttribute(\n        MediaUIAttributes.MEDIA_DURATION\n      );\n      if (!rangeEntered && mediaDurationStr) {\n        rangeEntered = true;\n        trackMouse();\n\n        let offRangeHandler = (evt) => {\n          if (evt.target != this && !this.contains(evt.target)) {\n            window.removeEventListener('mousemove', offRangeHandler);\n            rangeEntered = false;\n            stopTrackingMouse();\n          }\n        };\n        window.addEventListener('mousemove', offRangeHandler, false);\n      }\n    };\n    this.addEventListener('mousemove', rangeMouseMoveHander, false);\n  }\n}\n\ndefineCustomElement('media-time-range', MediaTimeRange);\n\nexport default MediaTimeRange;\n"],
  "mappings": "AAAA,uCACA,qEACA,sEAIA,sEACA,2CACA,qDAEA,KAAM,GAA8B,kCAE9B,EAAsB,AAAC,GAAO,CAClC,KAAM,GAAQ,EAAG,MACX,EAAoB,EAAmB,CAAC,EAAM,OAC9C,EAAkB,EAAmB,CAAC,EAAM,KAC5C,EAAa,AAAE,GAAqB,EAEtC,GAAG,QAAwB,IAD3B,EAEJ,EAAM,aAAa,iBAAkB,IAGjC,EAAW,EAAS,cAAc,YAExC,EAAS,UAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aA0BR,EAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAyB/B,eAA6B,EAAiB,WACjC,qBAAqB,CAC9B,MAAO,CACL,GAAG,MAAM,mBACT,aACA,EAAkB,eAClB,EAAkB,mBAClB,EAAkB,oBAClB,EAAkB,gBAItB,aAAc,CACZ,QAEA,KAAK,WAAW,YAAY,EAAS,QAAQ,UAAU,KAEvD,KAAK,MAAM,iBAAiB,QAAS,IAAM,CAEzC,KAAM,GADU,KAAK,MAAM,MAErB,EAAM,GAAI,GAAO,YAAY,EAAc,mBAAoB,CACnE,SAAU,GACV,QAAS,GACT,WAEF,KAAK,cAAc,KAUrB,KAAK,mBAGP,mBAAoB,CAClB,KAAK,MAAM,aAAa,aAAc,EAAM,QAC5C,MAAM,oBAGR,yBAAyB,EAAU,EAAU,EAAU,CACrD,AAAI,IAAa,EAAkB,oBACjC,MAAK,MAAM,MAAQ,CAAC,EACpB,EAAoB,MACpB,KAAK,aAEH,IAAa,EAAkB,gBAEjC,MAAK,MAAM,IAAM,KAAK,MAAM,CAAC,GAC7B,EAAoB,MACpB,KAAK,aAEH,IAAa,EAAkB,gBACjC,KAAK,YAEP,MAAM,yBAAyB,EAAU,EAAU,MAqBjD,gBAAgB,CAClB,MAAO,CAAC,KAAK,aAAa,EAAkB,mBAG1C,mBAAmB,CACrB,MAAO,CAAC,KAAK,aAAa,EAAkB,uBAG1C,gBAAgB,CAClB,KAAM,GAAW,KAAK,aAAa,EAAkB,gBACrD,GAAI,EACF,MAAO,GAAS,MAAM,KAAK,IAAI,AAAC,GAAa,EAAS,MAAM,MAKhE,cAAe,CACb,GAAI,GAAc,MAAM,eAExB,GACE,CAAC,KAAK,eACN,CAAC,KAAK,cAAc,QACpB,KAAK,eAAiB,EAEtB,MAAO,GAGT,KAAM,GAAW,KAAK,cACtB,GAAI,GAAqB,EACzB,SAAW,CAAC,EAAO,IAAQ,GACzB,GAAI,KAAK,kBAAoB,GAAS,KAAK,kBAAoB,EAAK,CAClE,EAAqB,EACrB,MAIJ,KAAM,GAAe,EAAqB,KAAK,cAAiB,IAChE,SAAY,OAAO,EAAG,EAAG,CACvB,yCACA,IAEK,EAGT,kBAAmB,CACjB,KAAK,iBAAmB,KAAK,WAAW,cACtC,2BAKF,AAH2B,KAAK,WAAW,cACzC,uBAEiB,UAAU,IAAI,WAEjC,GAAI,GACJ,KAAM,GAAa,IAAM,CACvB,EAAmB,AAAC,GAAQ,CAC1B,KAAM,GAAW,CAAC,KAAK,aAAa,EAAkB,gBAGtD,GAAI,CAAC,EAAU,OAGf,KAAM,GAAY,KAAK,MAAM,wBAC7B,GAAI,GAAgB,GAAI,QAAU,EAAU,MAAQ,EAAU,MAG9D,EAAe,KAAK,IAAI,EAAG,KAAK,IAAI,EAAG,IAIvC,KAAM,GAAgB,AADF,EAAU,KAAO,KAAK,wBAAwB,KAC9B,EAAe,EAAU,MAE7D,KAAK,iBAAiB,MAAM,KAAO,GAAG,MAEtC,KAAM,GAAS,EAAe,EACxB,EAAkB,GAAI,GAAO,YACjC,EAAc,sBACd,CAAE,SAAU,GAAM,QAAS,GAAM,WAEnC,KAAK,cAAc,IAErB,EAAO,iBAAiB,YAAa,EAAkB,KAGnD,EAAoB,IAAM,CAC9B,EAAO,oBAAoB,YAAa,IAI1C,GAAI,GAAe,GACf,EAAuB,AAAC,GAAQ,CAClC,KAAM,GAAmB,KAAK,aAC5B,EAAkB,gBAEpB,GAAI,CAAC,GAAgB,EAAkB,CACrC,EAAe,GACf,IAEA,GAAI,GAAkB,AAAC,GAAQ,CAC7B,AAAI,EAAI,QAAU,MAAQ,CAAC,KAAK,SAAS,EAAI,SAC3C,GAAO,oBAAoB,YAAa,GACxC,EAAe,GACf,MAGJ,EAAO,iBAAiB,YAAa,EAAiB,MAG1D,KAAK,iBAAiB,YAAa,EAAsB,KAI7D,EAAoB,mBAAoB,GAExC,GAAO,GAAQ",
  "names": []
}
